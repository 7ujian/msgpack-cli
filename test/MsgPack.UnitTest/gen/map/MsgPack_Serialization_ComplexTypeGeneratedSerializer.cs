//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MsgPack.Serialization.GeneratedSerializers.MapBased {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MsgPack.Serialization.CodeDomSerializers.CodeDomSerializerBuilder", "0.6.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class MsgPack_Serialization_ComplexTypeGeneratedSerializer : MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.ComplexTypeGenerated> {
        
        private MsgPack.Serialization.MessagePackSerializer<string> _serializer0;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.AddOnlyCollection<System.DateTime>> _serializer1;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.AddOnlyCollection<MsgPack.MessagePackObject>> _serializer2;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.AddOnlyCollection<object>> _serializer3;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.ArrayList> _serializer4;
        
        private MsgPack.Serialization.MessagePackSerializer<System.ArraySegment<byte>> _serializer5;
        
        private MsgPack.Serialization.MessagePackSerializer<System.ArraySegment<decimal>> _serializer6;
        
        private MsgPack.Serialization.MessagePackSerializer<System.ArraySegment<int>> _serializer7;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Numerics.BigInteger> _serializer8;
        
        private MsgPack.Serialization.MessagePackSerializer<byte[]> _serializer9;
        
        private MsgPack.Serialization.MessagePackSerializer<byte> _serializer10;
        
        private MsgPack.Serialization.MessagePackSerializer<char[]> _serializer11;
        
        private MsgPack.Serialization.MessagePackSerializer<char> _serializer12;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.ObjectModel.Collection<MsgPack.MessagePackObject>> _serializer13;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.ObjectModel.Collection<System.DateTime>> _serializer14;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.ObjectModel.Collection<object>> _serializer15;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Numerics.Complex> _serializer16;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Globalization.CultureInfo> _serializer17;
        
        private MsgPack.Serialization.MessagePackSerializer<System.DateTime> _serializer18;
        
        private MsgPack.Serialization.MessagePackSerializer<System.DateTimeOffset> _serializer19;
        
        private MsgPack.Serialization.MessagePackSerializer<decimal> _serializer20;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.Dictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>> _serializer21;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.DictionaryEntry> _serializer22;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.Dictionary<object, object>> _serializer23;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.Dictionary<string, System.DateTime>> _serializer24;
        
        private MsgPack.Serialization.MessagePackSerializer<bool> _serializer25;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Runtime.InteropServices.ComTypes.FILETIME> _serializer26;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Guid> _serializer27;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.HashSet<MsgPack.MessagePackObject>> _serializer28;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.HashSet<System.DateTime>> _serializer29;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.HashSet<object>> _serializer30;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Hashtable> _serializer31;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.ICollection<MsgPack.MessagePackObject>> _serializer32;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.ICollection<System.DateTime>> _serializer33;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.ICollection<object>> _serializer34;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.IDictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>> _serializer35;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.IDictionary<object, object>> _serializer36;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.IDictionary<string, System.DateTime>> _serializer37;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.IList<MsgPack.MessagePackObject>> _serializer38;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.IList<System.DateTime>> _serializer39;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.IList<object>> _serializer40;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Image> _serializer41;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.ISet<MsgPack.MessagePackObject>> _serializer42;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.ISet<System.DateTime>> _serializer43;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.ISet<object>> _serializer44;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.KeyValuePair<string, System.Numerics.Complex>> _serializer45;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>> _serializer46;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.List<MsgPack.MessagePackObject>> _serializer47;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.List<System.DateTime>> _serializer48;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.List<object>> _serializer49;
        
        private MsgPack.Serialization.MessagePackSerializer<int> _serializer50;
        
        private MsgPack.Serialization.MessagePackSerializer<long> _serializer51;
        
        private MsgPack.Serialization.MessagePackSerializer<ushort> _serializer52;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.MessagePackObject> _serializer53;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.MessagePackObject[]> _serializer54;
        
        private MsgPack.Serialization.MessagePackSerializer<object> _serializer55;
        
        private MsgPack.Serialization.MessagePackSerializer<object[]> _serializer56;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.ObjectModel.ObservableCollection<MsgPack.MessagePackObject>> _serializer57;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.ObjectModel.ObservableCollection<System.DateTime>> _serializer58;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.ObjectModel.ObservableCollection<object>> _serializer59;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.StringKeyedCollection<System.DateTime>> _serializer60;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.StringKeyedCollection<MsgPack.MessagePackObject>> _serializer61;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.StringKeyedCollection<object>> _serializer62;
        
        private MsgPack.Serialization.MessagePackSerializer<System.TimeSpan> _serializer63;
        
        private MsgPack.Serialization.MessagePackSerializer<string> _serializer64;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Tuple<int, string, MsgPack.MessagePackObject, object>> _serializer65;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Uri> _serializer66;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Version> _serializer67;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.ArraySegment<byte>>> _serializer68;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.ArraySegment<decimal>>> _serializer69;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.ArraySegment<int>>> _serializer70;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.Numerics.BigInteger>> _serializer71;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<char>> _serializer72;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.Numerics.Complex>> _serializer73;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.DateTime>> _serializer74;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.DateTimeOffset>> _serializer75;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<decimal>> _serializer76;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.Collections.DictionaryEntry>> _serializer77;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.Runtime.InteropServices.ComTypes.FILETIME>> _serializer78;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.Guid>> _serializer79;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.Collections.Generic.KeyValuePair<string, System.Numerics.Complex>>> _serializer80;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>>> _serializer81;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.TimeSpan>> _serializer82;
        
        public MsgPack_Serialization_ComplexTypeGeneratedSerializer(MsgPack.Serialization.SerializationContext context) : 
                base(context) {
            MsgPack.Serialization.PolymorphismSchema schema0 = default(MsgPack.Serialization.PolymorphismSchema);
            schema0 = null;
            this._serializer0 = context.GetSerializer<string>(schema0);
            MsgPack.Serialization.PolymorphismSchema schema1 = default(MsgPack.Serialization.PolymorphismSchema);
            schema1 = null;
            this._serializer1 = context.GetSerializer<MsgPack.Serialization.AddOnlyCollection<System.DateTime>>(schema1);
            MsgPack.Serialization.PolymorphismSchema schema2 = default(MsgPack.Serialization.PolymorphismSchema);
            schema2 = null;
            this._serializer2 = context.GetSerializer<MsgPack.Serialization.AddOnlyCollection<MsgPack.MessagePackObject>>(schema2);
            MsgPack.Serialization.PolymorphismSchema schema3 = default(MsgPack.Serialization.PolymorphismSchema);
            schema3 = null;
            this._serializer3 = context.GetSerializer<MsgPack.Serialization.AddOnlyCollection<object>>(schema3);
            MsgPack.Serialization.PolymorphismSchema schema4 = default(MsgPack.Serialization.PolymorphismSchema);
            schema4 = null;
            this._serializer4 = context.GetSerializer<System.Collections.ArrayList>(schema4);
            MsgPack.Serialization.PolymorphismSchema schema5 = default(MsgPack.Serialization.PolymorphismSchema);
            schema5 = null;
            this._serializer5 = context.GetSerializer<System.ArraySegment<byte>>(schema5);
            MsgPack.Serialization.PolymorphismSchema schema6 = default(MsgPack.Serialization.PolymorphismSchema);
            schema6 = null;
            this._serializer6 = context.GetSerializer<System.ArraySegment<decimal>>(schema6);
            MsgPack.Serialization.PolymorphismSchema schema7 = default(MsgPack.Serialization.PolymorphismSchema);
            schema7 = null;
            this._serializer7 = context.GetSerializer<System.ArraySegment<int>>(schema7);
            MsgPack.Serialization.PolymorphismSchema schema8 = default(MsgPack.Serialization.PolymorphismSchema);
            schema8 = null;
            this._serializer8 = context.GetSerializer<System.Numerics.BigInteger>(schema8);
            MsgPack.Serialization.PolymorphismSchema schema9 = default(MsgPack.Serialization.PolymorphismSchema);
            schema9 = null;
            this._serializer9 = context.GetSerializer<byte[]>(schema9);
            MsgPack.Serialization.PolymorphismSchema schema10 = default(MsgPack.Serialization.PolymorphismSchema);
            schema10 = null;
            this._serializer10 = context.GetSerializer<byte>(schema10);
            MsgPack.Serialization.PolymorphismSchema schema11 = default(MsgPack.Serialization.PolymorphismSchema);
            schema11 = null;
            this._serializer11 = context.GetSerializer<char[]>(schema11);
            MsgPack.Serialization.PolymorphismSchema schema12 = default(MsgPack.Serialization.PolymorphismSchema);
            schema12 = null;
            this._serializer12 = context.GetSerializer<char>(schema12);
            MsgPack.Serialization.PolymorphismSchema schema13 = default(MsgPack.Serialization.PolymorphismSchema);
            schema13 = null;
            this._serializer13 = context.GetSerializer<System.Collections.ObjectModel.Collection<MsgPack.MessagePackObject>>(schema13);
            MsgPack.Serialization.PolymorphismSchema schema14 = default(MsgPack.Serialization.PolymorphismSchema);
            schema14 = null;
            this._serializer14 = context.GetSerializer<System.Collections.ObjectModel.Collection<System.DateTime>>(schema14);
            MsgPack.Serialization.PolymorphismSchema schema15 = default(MsgPack.Serialization.PolymorphismSchema);
            schema15 = null;
            this._serializer15 = context.GetSerializer<System.Collections.ObjectModel.Collection<object>>(schema15);
            MsgPack.Serialization.PolymorphismSchema schema16 = default(MsgPack.Serialization.PolymorphismSchema);
            schema16 = null;
            this._serializer16 = context.GetSerializer<System.Numerics.Complex>(schema16);
            MsgPack.Serialization.PolymorphismSchema schema17 = default(MsgPack.Serialization.PolymorphismSchema);
            schema17 = null;
            this._serializer17 = context.GetSerializer<System.Globalization.CultureInfo>(schema17);
            this._serializer18 = context.GetSerializer<System.DateTime>(MsgPack.Serialization.DateTimeMessagePackSerializerHelpers.DetermineDateTimeConversionMethod(context, MsgPack.Serialization.DateTimeMemberConversionMethod.Default));
            this._serializer19 = context.GetSerializer<System.DateTimeOffset>(MsgPack.Serialization.DateTimeMessagePackSerializerHelpers.DetermineDateTimeConversionMethod(context, MsgPack.Serialization.DateTimeMemberConversionMethod.Default));
            MsgPack.Serialization.PolymorphismSchema schema18 = default(MsgPack.Serialization.PolymorphismSchema);
            schema18 = null;
            this._serializer20 = context.GetSerializer<decimal>(schema18);
            MsgPack.Serialization.PolymorphismSchema schema19 = default(MsgPack.Serialization.PolymorphismSchema);
            schema19 = null;
            this._serializer21 = context.GetSerializer<System.Collections.Generic.Dictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>>(schema19);
            MsgPack.Serialization.PolymorphismSchema schema20 = default(MsgPack.Serialization.PolymorphismSchema);
            schema20 = null;
            this._serializer22 = context.GetSerializer<System.Collections.DictionaryEntry>(schema20);
            MsgPack.Serialization.PolymorphismSchema schema21 = default(MsgPack.Serialization.PolymorphismSchema);
            schema21 = null;
            this._serializer23 = context.GetSerializer<System.Collections.Generic.Dictionary<object, object>>(schema21);
            MsgPack.Serialization.PolymorphismSchema schema22 = default(MsgPack.Serialization.PolymorphismSchema);
            schema22 = null;
            this._serializer24 = context.GetSerializer<System.Collections.Generic.Dictionary<string, System.DateTime>>(schema22);
            MsgPack.Serialization.PolymorphismSchema schema23 = default(MsgPack.Serialization.PolymorphismSchema);
            schema23 = null;
            this._serializer25 = context.GetSerializer<bool>(schema23);
            this._serializer26 = context.GetSerializer<System.Runtime.InteropServices.ComTypes.FILETIME>(MsgPack.Serialization.DateTimeMessagePackSerializerHelpers.DetermineDateTimeConversionMethod(context, MsgPack.Serialization.DateTimeMemberConversionMethod.Default));
            MsgPack.Serialization.PolymorphismSchema schema24 = default(MsgPack.Serialization.PolymorphismSchema);
            schema24 = null;
            this._serializer27 = context.GetSerializer<System.Guid>(schema24);
            MsgPack.Serialization.PolymorphismSchema schema25 = default(MsgPack.Serialization.PolymorphismSchema);
            schema25 = null;
            this._serializer28 = context.GetSerializer<System.Collections.Generic.HashSet<MsgPack.MessagePackObject>>(schema25);
            MsgPack.Serialization.PolymorphismSchema schema26 = default(MsgPack.Serialization.PolymorphismSchema);
            schema26 = null;
            this._serializer29 = context.GetSerializer<System.Collections.Generic.HashSet<System.DateTime>>(schema26);
            MsgPack.Serialization.PolymorphismSchema schema27 = default(MsgPack.Serialization.PolymorphismSchema);
            schema27 = null;
            this._serializer30 = context.GetSerializer<System.Collections.Generic.HashSet<object>>(schema27);
            MsgPack.Serialization.PolymorphismSchema schema28 = default(MsgPack.Serialization.PolymorphismSchema);
            schema28 = null;
            this._serializer31 = context.GetSerializer<System.Collections.Hashtable>(schema28);
            MsgPack.Serialization.PolymorphismSchema schema29 = default(MsgPack.Serialization.PolymorphismSchema);
            schema29 = null;
            this._serializer32 = context.GetSerializer<System.Collections.Generic.ICollection<MsgPack.MessagePackObject>>(schema29);
            MsgPack.Serialization.PolymorphismSchema schema30 = default(MsgPack.Serialization.PolymorphismSchema);
            schema30 = null;
            this._serializer33 = context.GetSerializer<System.Collections.Generic.ICollection<System.DateTime>>(schema30);
            MsgPack.Serialization.PolymorphismSchema schema31 = default(MsgPack.Serialization.PolymorphismSchema);
            schema31 = null;
            this._serializer34 = context.GetSerializer<System.Collections.Generic.ICollection<object>>(schema31);
            MsgPack.Serialization.PolymorphismSchema schema32 = default(MsgPack.Serialization.PolymorphismSchema);
            schema32 = null;
            this._serializer35 = context.GetSerializer<System.Collections.Generic.IDictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>>(schema32);
            MsgPack.Serialization.PolymorphismSchema schema33 = default(MsgPack.Serialization.PolymorphismSchema);
            schema33 = null;
            this._serializer36 = context.GetSerializer<System.Collections.Generic.IDictionary<object, object>>(schema33);
            MsgPack.Serialization.PolymorphismSchema schema34 = default(MsgPack.Serialization.PolymorphismSchema);
            schema34 = null;
            this._serializer37 = context.GetSerializer<System.Collections.Generic.IDictionary<string, System.DateTime>>(schema34);
            MsgPack.Serialization.PolymorphismSchema schema35 = default(MsgPack.Serialization.PolymorphismSchema);
            schema35 = null;
            this._serializer38 = context.GetSerializer<System.Collections.Generic.IList<MsgPack.MessagePackObject>>(schema35);
            MsgPack.Serialization.PolymorphismSchema schema36 = default(MsgPack.Serialization.PolymorphismSchema);
            schema36 = null;
            this._serializer39 = context.GetSerializer<System.Collections.Generic.IList<System.DateTime>>(schema36);
            MsgPack.Serialization.PolymorphismSchema schema37 = default(MsgPack.Serialization.PolymorphismSchema);
            schema37 = null;
            this._serializer40 = context.GetSerializer<System.Collections.Generic.IList<object>>(schema37);
            MsgPack.Serialization.PolymorphismSchema schema38 = default(MsgPack.Serialization.PolymorphismSchema);
            schema38 = null;
            this._serializer41 = context.GetSerializer<MsgPack.Image>(schema38);
            MsgPack.Serialization.PolymorphismSchema schema39 = default(MsgPack.Serialization.PolymorphismSchema);
            schema39 = null;
            this._serializer42 = context.GetSerializer<System.Collections.Generic.ISet<MsgPack.MessagePackObject>>(schema39);
            MsgPack.Serialization.PolymorphismSchema schema40 = default(MsgPack.Serialization.PolymorphismSchema);
            schema40 = null;
            this._serializer43 = context.GetSerializer<System.Collections.Generic.ISet<System.DateTime>>(schema40);
            MsgPack.Serialization.PolymorphismSchema schema41 = default(MsgPack.Serialization.PolymorphismSchema);
            schema41 = null;
            this._serializer44 = context.GetSerializer<System.Collections.Generic.ISet<object>>(schema41);
            MsgPack.Serialization.PolymorphismSchema schema42 = default(MsgPack.Serialization.PolymorphismSchema);
            schema42 = null;
            this._serializer45 = context.GetSerializer<System.Collections.Generic.KeyValuePair<string, System.Numerics.Complex>>(schema42);
            MsgPack.Serialization.PolymorphismSchema schema43 = default(MsgPack.Serialization.PolymorphismSchema);
            schema43 = null;
            this._serializer46 = context.GetSerializer<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>>(schema43);
            MsgPack.Serialization.PolymorphismSchema schema44 = default(MsgPack.Serialization.PolymorphismSchema);
            schema44 = null;
            this._serializer47 = context.GetSerializer<System.Collections.Generic.List<MsgPack.MessagePackObject>>(schema44);
            MsgPack.Serialization.PolymorphismSchema schema45 = default(MsgPack.Serialization.PolymorphismSchema);
            schema45 = null;
            this._serializer48 = context.GetSerializer<System.Collections.Generic.List<System.DateTime>>(schema45);
            MsgPack.Serialization.PolymorphismSchema schema46 = default(MsgPack.Serialization.PolymorphismSchema);
            schema46 = null;
            this._serializer49 = context.GetSerializer<System.Collections.Generic.List<object>>(schema46);
            MsgPack.Serialization.PolymorphismSchema schema47 = default(MsgPack.Serialization.PolymorphismSchema);
            schema47 = null;
            this._serializer50 = context.GetSerializer<int>(schema47);
            MsgPack.Serialization.PolymorphismSchema schema48 = default(MsgPack.Serialization.PolymorphismSchema);
            schema48 = null;
            this._serializer51 = context.GetSerializer<long>(schema48);
            MsgPack.Serialization.PolymorphismSchema schema49 = default(MsgPack.Serialization.PolymorphismSchema);
            schema49 = null;
            this._serializer52 = context.GetSerializer<ushort>(schema49);
            MsgPack.Serialization.PolymorphismSchema schema50 = default(MsgPack.Serialization.PolymorphismSchema);
            schema50 = null;
            this._serializer53 = context.GetSerializer<MsgPack.MessagePackObject>(schema50);
            MsgPack.Serialization.PolymorphismSchema schema51 = default(MsgPack.Serialization.PolymorphismSchema);
            schema51 = null;
            this._serializer54 = context.GetSerializer<MsgPack.MessagePackObject[]>(schema51);
            MsgPack.Serialization.PolymorphismSchema schema52 = default(MsgPack.Serialization.PolymorphismSchema);
            schema52 = null;
            this._serializer55 = context.GetSerializer<object>(schema52);
            MsgPack.Serialization.PolymorphismSchema schema53 = default(MsgPack.Serialization.PolymorphismSchema);
            schema53 = null;
            this._serializer56 = context.GetSerializer<object[]>(schema53);
            MsgPack.Serialization.PolymorphismSchema schema54 = default(MsgPack.Serialization.PolymorphismSchema);
            schema54 = null;
            this._serializer57 = context.GetSerializer<System.Collections.ObjectModel.ObservableCollection<MsgPack.MessagePackObject>>(schema54);
            MsgPack.Serialization.PolymorphismSchema schema55 = default(MsgPack.Serialization.PolymorphismSchema);
            schema55 = null;
            this._serializer58 = context.GetSerializer<System.Collections.ObjectModel.ObservableCollection<System.DateTime>>(schema55);
            MsgPack.Serialization.PolymorphismSchema schema56 = default(MsgPack.Serialization.PolymorphismSchema);
            schema56 = null;
            this._serializer59 = context.GetSerializer<System.Collections.ObjectModel.ObservableCollection<object>>(schema56);
            MsgPack.Serialization.PolymorphismSchema schema57 = default(MsgPack.Serialization.PolymorphismSchema);
            schema57 = null;
            this._serializer60 = context.GetSerializer<MsgPack.Serialization.StringKeyedCollection<System.DateTime>>(schema57);
            MsgPack.Serialization.PolymorphismSchema schema58 = default(MsgPack.Serialization.PolymorphismSchema);
            schema58 = null;
            this._serializer61 = context.GetSerializer<MsgPack.Serialization.StringKeyedCollection<MsgPack.MessagePackObject>>(schema58);
            MsgPack.Serialization.PolymorphismSchema schema59 = default(MsgPack.Serialization.PolymorphismSchema);
            schema59 = null;
            this._serializer62 = context.GetSerializer<MsgPack.Serialization.StringKeyedCollection<object>>(schema59);
            MsgPack.Serialization.PolymorphismSchema schema60 = default(MsgPack.Serialization.PolymorphismSchema);
            schema60 = null;
            this._serializer63 = context.GetSerializer<System.TimeSpan>(schema60);
            MsgPack.Serialization.PolymorphismSchema schema61 = default(MsgPack.Serialization.PolymorphismSchema);
            MsgPack.Serialization.PolymorphismSchema[] tupleItemsSchema0 = default(MsgPack.Serialization.PolymorphismSchema[]);
            tupleItemsSchema0 = new MsgPack.Serialization.PolymorphismSchema[4];
            MsgPack.Serialization.PolymorphismSchema tupleItemSchema0 = default(MsgPack.Serialization.PolymorphismSchema);
            tupleItemSchema0 = null;
            tupleItemsSchema0[0] = tupleItemSchema0;
            MsgPack.Serialization.PolymorphismSchema tupleItemSchema1 = default(MsgPack.Serialization.PolymorphismSchema);
            tupleItemSchema1 = null;
            tupleItemsSchema0[1] = tupleItemSchema1;
            MsgPack.Serialization.PolymorphismSchema tupleItemSchema2 = default(MsgPack.Serialization.PolymorphismSchema);
            tupleItemSchema2 = null;
            tupleItemsSchema0[2] = tupleItemSchema2;
            MsgPack.Serialization.PolymorphismSchema tupleItemSchema3 = default(MsgPack.Serialization.PolymorphismSchema);
            tupleItemSchema3 = null;
            tupleItemsSchema0[3] = tupleItemSchema3;
            schema61 = MsgPack.Serialization.PolymorphismSchema.ForPolymorphicTuple(typeof(System.Tuple<int, string, MsgPack.MessagePackObject, object>), tupleItemsSchema0);
            this._serializer64 = context.GetSerializer<string>(schema61);
            MsgPack.Serialization.PolymorphismSchema schema62 = default(MsgPack.Serialization.PolymorphismSchema);
            MsgPack.Serialization.PolymorphismSchema[] tupleItemsSchema1 = default(MsgPack.Serialization.PolymorphismSchema[]);
            tupleItemsSchema1 = new MsgPack.Serialization.PolymorphismSchema[4];
            MsgPack.Serialization.PolymorphismSchema tupleItemSchema4 = default(MsgPack.Serialization.PolymorphismSchema);
            tupleItemSchema4 = null;
            tupleItemsSchema1[0] = tupleItemSchema4;
            MsgPack.Serialization.PolymorphismSchema tupleItemSchema5 = default(MsgPack.Serialization.PolymorphismSchema);
            tupleItemSchema5 = null;
            tupleItemsSchema1[1] = tupleItemSchema5;
            MsgPack.Serialization.PolymorphismSchema tupleItemSchema6 = default(MsgPack.Serialization.PolymorphismSchema);
            tupleItemSchema6 = null;
            tupleItemsSchema1[2] = tupleItemSchema6;
            MsgPack.Serialization.PolymorphismSchema tupleItemSchema7 = default(MsgPack.Serialization.PolymorphismSchema);
            tupleItemSchema7 = null;
            tupleItemsSchema1[3] = tupleItemSchema7;
            schema62 = MsgPack.Serialization.PolymorphismSchema.ForPolymorphicTuple(typeof(System.Tuple<int, string, MsgPack.MessagePackObject, object>), tupleItemsSchema1);
            this._serializer65 = context.GetSerializer<System.Tuple<int, string, MsgPack.MessagePackObject, object>>(schema62);
            MsgPack.Serialization.PolymorphismSchema schema63 = default(MsgPack.Serialization.PolymorphismSchema);
            schema63 = null;
            this._serializer66 = context.GetSerializer<System.Uri>(schema63);
            MsgPack.Serialization.PolymorphismSchema schema64 = default(MsgPack.Serialization.PolymorphismSchema);
            schema64 = null;
            this._serializer67 = context.GetSerializer<System.Version>(schema64);
            MsgPack.Serialization.PolymorphismSchema schema65 = default(MsgPack.Serialization.PolymorphismSchema);
            schema65 = null;
            this._serializer68 = context.GetSerializer<System.Nullable<System.ArraySegment<byte>>>(schema65);
            MsgPack.Serialization.PolymorphismSchema schema66 = default(MsgPack.Serialization.PolymorphismSchema);
            schema66 = null;
            this._serializer69 = context.GetSerializer<System.Nullable<System.ArraySegment<decimal>>>(schema66);
            MsgPack.Serialization.PolymorphismSchema schema67 = default(MsgPack.Serialization.PolymorphismSchema);
            schema67 = null;
            this._serializer70 = context.GetSerializer<System.Nullable<System.ArraySegment<int>>>(schema67);
            MsgPack.Serialization.PolymorphismSchema schema68 = default(MsgPack.Serialization.PolymorphismSchema);
            schema68 = null;
            this._serializer71 = context.GetSerializer<System.Nullable<System.Numerics.BigInteger>>(schema68);
            MsgPack.Serialization.PolymorphismSchema schema69 = default(MsgPack.Serialization.PolymorphismSchema);
            schema69 = null;
            this._serializer72 = context.GetSerializer<System.Nullable<char>>(schema69);
            MsgPack.Serialization.PolymorphismSchema schema70 = default(MsgPack.Serialization.PolymorphismSchema);
            schema70 = null;
            this._serializer73 = context.GetSerializer<System.Nullable<System.Numerics.Complex>>(schema70);
            this._serializer74 = context.GetSerializer<System.Nullable<System.DateTime>>(MsgPack.Serialization.DateTimeMessagePackSerializerHelpers.DetermineDateTimeConversionMethod(context, MsgPack.Serialization.DateTimeMemberConversionMethod.Default));
            MsgPack.Serialization.PolymorphismSchema schema71 = default(MsgPack.Serialization.PolymorphismSchema);
            schema71 = null;
            this._serializer75 = context.GetSerializer<System.Nullable<System.DateTimeOffset>>(schema71);
            MsgPack.Serialization.PolymorphismSchema schema72 = default(MsgPack.Serialization.PolymorphismSchema);
            schema72 = null;
            this._serializer76 = context.GetSerializer<System.Nullable<decimal>>(schema72);
            MsgPack.Serialization.PolymorphismSchema schema73 = default(MsgPack.Serialization.PolymorphismSchema);
            schema73 = null;
            this._serializer77 = context.GetSerializer<System.Nullable<System.Collections.DictionaryEntry>>(schema73);
            this._serializer78 = context.GetSerializer<System.Nullable<System.Runtime.InteropServices.ComTypes.FILETIME>>(MsgPack.Serialization.DateTimeMessagePackSerializerHelpers.DetermineDateTimeConversionMethod(context, MsgPack.Serialization.DateTimeMemberConversionMethod.Default));
            MsgPack.Serialization.PolymorphismSchema schema74 = default(MsgPack.Serialization.PolymorphismSchema);
            schema74 = null;
            this._serializer79 = context.GetSerializer<System.Nullable<System.Guid>>(schema74);
            MsgPack.Serialization.PolymorphismSchema schema75 = default(MsgPack.Serialization.PolymorphismSchema);
            schema75 = null;
            this._serializer80 = context.GetSerializer<System.Nullable<System.Collections.Generic.KeyValuePair<string, System.Numerics.Complex>>>(schema75);
            MsgPack.Serialization.PolymorphismSchema schema76 = default(MsgPack.Serialization.PolymorphismSchema);
            schema76 = null;
            this._serializer81 = context.GetSerializer<System.Nullable<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>>>(schema76);
            MsgPack.Serialization.PolymorphismSchema schema77 = default(MsgPack.Serialization.PolymorphismSchema);
            schema77 = null;
            this._serializer82 = context.GetSerializer<System.Nullable<System.TimeSpan>>(schema77);
        }
        
        protected internal override void PackToCore(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            packer.PackMapHeader(77);
            this._serializer0.PackTo(packer, "AddOnlyCollection_DateTimeField");
            this._serializer1.PackTo(packer, objectTree.AddOnlyCollection_DateTimeField);
            this._serializer0.PackTo(packer, "AddOnlyCollection_MessagePackObjectField");
            this._serializer2.PackTo(packer, objectTree.AddOnlyCollection_MessagePackObjectField);
            this._serializer0.PackTo(packer, "AddOnlyCollection_ObjectField");
            this._serializer3.PackTo(packer, objectTree.AddOnlyCollection_ObjectField);
            this._serializer0.PackTo(packer, "ArrayListField");
            this._serializer4.PackTo(packer, objectTree.ArrayListField);
            this._serializer0.PackTo(packer, "ArraySegmentByteField");
            this._serializer5.PackTo(packer, objectTree.ArraySegmentByteField);
            this._serializer0.PackTo(packer, "ArraySegmentDecimalField");
            this._serializer6.PackTo(packer, objectTree.ArraySegmentDecimalField);
            this._serializer0.PackTo(packer, "ArraySegmentInt32Field");
            this._serializer7.PackTo(packer, objectTree.ArraySegmentInt32Field);
            this._serializer0.PackTo(packer, "BigIntegerField");
            this._serializer8.PackTo(packer, objectTree.BigIntegerField);
            this._serializer0.PackTo(packer, "ByteArrayField");
            this._serializer9.PackTo(packer, objectTree.ByteArrayField);
            this._serializer0.PackTo(packer, "ByteField");
            this._serializer10.PackTo(packer, objectTree.ByteField);
            this._serializer0.PackTo(packer, "CharArrayField");
            this._serializer11.PackTo(packer, objectTree.CharArrayField);
            this._serializer0.PackTo(packer, "CharField");
            this._serializer12.PackTo(packer, objectTree.CharField);
            this._serializer0.PackTo(packer, "Collection_MessagePackObjectField");
            this._serializer13.PackTo(packer, objectTree.Collection_MessagePackObjectField);
            this._serializer0.PackTo(packer, "CollectionDateTimeField");
            this._serializer14.PackTo(packer, objectTree.CollectionDateTimeField);
            this._serializer0.PackTo(packer, "CollectionObjectField");
            this._serializer15.PackTo(packer, objectTree.CollectionObjectField);
            this._serializer0.PackTo(packer, "ComplexField");
            this._serializer16.PackTo(packer, objectTree.ComplexField);
            this._serializer0.PackTo(packer, "CurrentCultureField");
            this._serializer17.PackTo(packer, objectTree.CurrentCultureField);
            this._serializer0.PackTo(packer, "DateTimeField");
            this._serializer18.PackTo(packer, objectTree.DateTimeField);
            this._serializer0.PackTo(packer, "DateTimeOffsetField");
            this._serializer19.PackTo(packer, objectTree.DateTimeOffsetField);
            this._serializer0.PackTo(packer, "DecimalField");
            this._serializer20.PackTo(packer, objectTree.DecimalField);
            this._serializer0.PackTo(packer, "Dictionary_MessagePackObject_MessagePackObjectField");
            this._serializer21.PackTo(packer, objectTree.Dictionary_MessagePackObject_MessagePackObjectField);
            this._serializer0.PackTo(packer, "DictionaryEntryField");
            this._serializer22.PackTo(packer, objectTree.DictionaryEntryField);
            this._serializer0.PackTo(packer, "DictionaryObjectObjectField");
            this._serializer23.PackTo(packer, objectTree.DictionaryObjectObjectField);
            this._serializer0.PackTo(packer, "DictionaryStringDateTimeField");
            this._serializer24.PackTo(packer, objectTree.DictionaryStringDateTimeField);
            this._serializer0.PackTo(packer, "FalseField");
            this._serializer25.PackTo(packer, objectTree.FalseField);
            this._serializer0.PackTo(packer, "FILETIMEField");
            this._serializer26.PackTo(packer, objectTree.FILETIMEField);
            this._serializer0.PackTo(packer, "GuidField");
            this._serializer27.PackTo(packer, objectTree.GuidField);
            this._serializer0.PackTo(packer, "HashSet_MessagePackObjectField");
            this._serializer28.PackTo(packer, objectTree.HashSet_MessagePackObjectField);
            this._serializer0.PackTo(packer, "HashSetDateTimeField");
            this._serializer29.PackTo(packer, objectTree.HashSetDateTimeField);
            this._serializer0.PackTo(packer, "HashSetObjectField");
            this._serializer30.PackTo(packer, objectTree.HashSetObjectField);
            this._serializer0.PackTo(packer, "HashtableField");
            this._serializer31.PackTo(packer, objectTree.HashtableField);
            this._serializer0.PackTo(packer, "ICollection_MessagePackObjectField");
            this._serializer32.PackTo(packer, objectTree.ICollection_MessagePackObjectField);
            this._serializer0.PackTo(packer, "ICollectionDateTimeField");
            this._serializer33.PackTo(packer, objectTree.ICollectionDateTimeField);
            this._serializer0.PackTo(packer, "ICollectionObjectField");
            this._serializer34.PackTo(packer, objectTree.ICollectionObjectField);
            this._serializer0.PackTo(packer, "IDictionary_MessagePackObject_MessagePackObjectField");
            this._serializer35.PackTo(packer, objectTree.IDictionary_MessagePackObject_MessagePackObjectField);
            this._serializer0.PackTo(packer, "IDictionaryObjectObjectField");
            this._serializer36.PackTo(packer, objectTree.IDictionaryObjectObjectField);
            this._serializer0.PackTo(packer, "IDictionaryStringDateTimeField");
            this._serializer37.PackTo(packer, objectTree.IDictionaryStringDateTimeField);
            this._serializer0.PackTo(packer, "IList_MessagePackObjectField");
            this._serializer38.PackTo(packer, objectTree.IList_MessagePackObjectField);
            this._serializer0.PackTo(packer, "IListDateTimeField");
            this._serializer39.PackTo(packer, objectTree.IListDateTimeField);
            this._serializer0.PackTo(packer, "IListObjectField");
            this._serializer40.PackTo(packer, objectTree.IListObjectField);
            this._serializer0.PackTo(packer, "Image_Field");
            this._serializer41.PackTo(packer, objectTree.Image_Field);
            this._serializer0.PackTo(packer, "InvariantCultureField");
            this._serializer17.PackTo(packer, objectTree.InvariantCultureField);
            this._serializer0.PackTo(packer, "ISet_MessagePackObjectField");
            this._serializer42.PackTo(packer, objectTree.ISet_MessagePackObjectField);
            this._serializer0.PackTo(packer, "ISetDateTimeField");
            this._serializer43.PackTo(packer, objectTree.ISetDateTimeField);
            this._serializer0.PackTo(packer, "ISetObjectField");
            this._serializer44.PackTo(packer, objectTree.ISetObjectField);
            this._serializer0.PackTo(packer, "KeyValuePairStringComplexField");
            this._serializer45.PackTo(packer, objectTree.KeyValuePairStringComplexField);
            this._serializer0.PackTo(packer, "KeyValuePairStringDateTimeOffsetField");
            this._serializer46.PackTo(packer, objectTree.KeyValuePairStringDateTimeOffsetField);
            this._serializer0.PackTo(packer, "List_MessagePackObjectField");
            this._serializer47.PackTo(packer, objectTree.List_MessagePackObjectField);
            this._serializer0.PackTo(packer, "ListDateTimeField");
            this._serializer48.PackTo(packer, objectTree.ListDateTimeField);
            this._serializer0.PackTo(packer, "ListObjectField");
            this._serializer49.PackTo(packer, objectTree.ListObjectField);
            this._serializer0.PackTo(packer, "MaxByteField");
            this._serializer10.PackTo(packer, objectTree.MaxByteField);
            this._serializer0.PackTo(packer, "MaxInt32Field");
            this._serializer50.PackTo(packer, objectTree.MaxInt32Field);
            this._serializer0.PackTo(packer, "MaxInt64Field");
            this._serializer51.PackTo(packer, objectTree.MaxInt64Field);
            this._serializer0.PackTo(packer, "MaxUInt16Field");
            this._serializer52.PackTo(packer, objectTree.MaxUInt16Field);
            this._serializer0.PackTo(packer, "MessagePackObject_Field");
            this._serializer53.PackTo(packer, objectTree.MessagePackObject_Field);
            this._serializer0.PackTo(packer, "MessagePackObjectArray_Field");
            this._serializer54.PackTo(packer, objectTree.MessagePackObjectArray_Field);
            this._serializer0.PackTo(packer, "MinInt32Field");
            this._serializer50.PackTo(packer, objectTree.MinInt32Field);
            this._serializer0.PackTo(packer, "MinInt64Field");
            this._serializer51.PackTo(packer, objectTree.MinInt64Field);
            this._serializer0.PackTo(packer, "NullField");
            this._serializer55.PackTo(packer, objectTree.NullField);
            this._serializer0.PackTo(packer, "ObjectArrayField");
            this._serializer56.PackTo(packer, objectTree.ObjectArrayField);
            this._serializer0.PackTo(packer, "ObjectField");
            this._serializer55.PackTo(packer, objectTree.ObjectField);
            this._serializer0.PackTo(packer, "ObservableCollection_MessagePackObjectField");
            this._serializer57.PackTo(packer, objectTree.ObservableCollection_MessagePackObjectField);
            this._serializer0.PackTo(packer, "ObservableCollectionDateTimeField");
            this._serializer58.PackTo(packer, objectTree.ObservableCollectionDateTimeField);
            this._serializer0.PackTo(packer, "ObservableCollectionObjectField");
            this._serializer59.PackTo(packer, objectTree.ObservableCollectionObjectField);
            this._serializer0.PackTo(packer, "StringField");
            this._serializer0.PackTo(packer, objectTree.StringField);
            this._serializer0.PackTo(packer, "StringKeyedCollection_DateTimeField");
            this._serializer60.PackTo(packer, objectTree.StringKeyedCollection_DateTimeField);
            this._serializer0.PackTo(packer, "StringKeyedCollection_MessagePackObjectField");
            this._serializer61.PackTo(packer, objectTree.StringKeyedCollection_MessagePackObjectField);
            this._serializer0.PackTo(packer, "StringKeyedCollection_ObjectField");
            this._serializer62.PackTo(packer, objectTree.StringKeyedCollection_ObjectField);
            this._serializer0.PackTo(packer, "TimeSpanField");
            this._serializer63.PackTo(packer, objectTree.TimeSpanField);
            this._serializer0.PackTo(packer, "TinyByteField");
            this._serializer10.PackTo(packer, objectTree.TinyByteField);
            this._serializer0.PackTo(packer, "TinyInt32Field");
            this._serializer50.PackTo(packer, objectTree.TinyInt32Field);
            this._serializer0.PackTo(packer, "TinyInt64Field");
            this._serializer51.PackTo(packer, objectTree.TinyInt64Field);
            this._serializer0.PackTo(packer, "TinyUInt16Field");
            this._serializer52.PackTo(packer, objectTree.TinyUInt16Field);
            this._serializer0.PackTo(packer, "TrueField");
            this._serializer25.PackTo(packer, objectTree.TrueField);
            this._serializer64.PackTo(packer, "Tuple_Int32_String_MessagePackObject_ObjectField");
            this._serializer65.PackTo(packer, objectTree.Tuple_Int32_String_MessagePackObject_ObjectField);
            this._serializer0.PackTo(packer, "UriField");
            this._serializer66.PackTo(packer, objectTree.UriField);
            this._serializer0.PackTo(packer, "VersionField");
            this._serializer67.PackTo(packer, objectTree.VersionField);
        }
        
        protected internal override MsgPack.Serialization.ComplexTypeGenerated UnpackFromCore(MsgPack.Unpacker unpacker) {
            MsgPack.Serialization.ComplexTypeGenerated result = default(MsgPack.Serialization.ComplexTypeGenerated);
            result = new MsgPack.Serialization.ComplexTypeGenerated();
            if (unpacker.IsArrayHeader) {
                int unpacked = default(int);
                int itemsCount = default(int);
                itemsCount = MsgPack.Serialization.UnpackHelpers.GetItemsCount(unpacker);
                MsgPack.Serialization.AddOnlyCollection<System.DateTime> nullable = default(MsgPack.Serialization.AddOnlyCollection<System.DateTime>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(0);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable = this._serializer1.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable = default(MsgPack.Unpacker);
                        disposable = unpacker.ReadSubtree();
                        try {
                            nullable = this._serializer1.UnpackFrom(disposable);
                        }
                        finally {
                            if (((disposable == null) 
                                        == false)) {
                                disposable.Dispose();
                            }
                        }
                    }
                }
                if (((nullable == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<System.DateTime> enumerator = nullable.GetEnumerator();
                    System.DateTime current;
                    try {
                        for (
                        ; enumerator.MoveNext(); 
                        ) {
                            current = enumerator.Current;
                            result.AddOnlyCollection_DateTimeField.Add(current);
                        }
                    }
                    finally {
                        enumerator.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                MsgPack.Serialization.AddOnlyCollection<MsgPack.MessagePackObject> nullable0 = default(MsgPack.Serialization.AddOnlyCollection<MsgPack.MessagePackObject>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(1);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable0 = this._serializer2.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable0 = default(MsgPack.Unpacker);
                        disposable0 = unpacker.ReadSubtree();
                        try {
                            nullable0 = this._serializer2.UnpackFrom(disposable0);
                        }
                        finally {
                            if (((disposable0 == null) 
                                        == false)) {
                                disposable0.Dispose();
                            }
                        }
                    }
                }
                if (((nullable0 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator0 = nullable0.GetEnumerator();
                    MsgPack.MessagePackObject current0;
                    try {
                        for (
                        ; enumerator0.MoveNext(); 
                        ) {
                            current0 = enumerator0.Current;
                            result.AddOnlyCollection_MessagePackObjectField.Add(current0);
                        }
                    }
                    finally {
                        enumerator0.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                MsgPack.Serialization.AddOnlyCollection<object> nullable1 = default(MsgPack.Serialization.AddOnlyCollection<object>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(2);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable1 = this._serializer3.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable1 = default(MsgPack.Unpacker);
                        disposable1 = unpacker.ReadSubtree();
                        try {
                            nullable1 = this._serializer3.UnpackFrom(disposable1);
                        }
                        finally {
                            if (((disposable1 == null) 
                                        == false)) {
                                disposable1.Dispose();
                            }
                        }
                    }
                }
                if (((nullable1 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<object> enumerator1 = nullable1.GetEnumerator();
                    object current1;
                    try {
                        for (
                        ; enumerator1.MoveNext(); 
                        ) {
                            current1 = enumerator1.Current;
                            result.AddOnlyCollection_ObjectField.Add(current1);
                        }
                    }
                    finally {
                        enumerator1.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.ArrayList nullable2 = default(System.Collections.ArrayList);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(3);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable2 = this._serializer4.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable2 = default(MsgPack.Unpacker);
                        disposable2 = unpacker.ReadSubtree();
                        try {
                            nullable2 = this._serializer4.UnpackFrom(disposable2);
                        }
                        finally {
                            if (((disposable2 == null) 
                                        == false)) {
                                disposable2.Dispose();
                            }
                        }
                    }
                }
                if (((nullable2 == null) 
                            == false)) {
                    System.Collections.IEnumerator enumerator2 = nullable2.GetEnumerator();
                    object current2;
                    for (
                    ; enumerator2.MoveNext(); 
                    ) {
                        current2 = enumerator2.Current;
                        result.ArrayListField.Add(current2);
                    }
                }
                unpacked = (unpacked + 1);
                System.Nullable<System.ArraySegment<byte>> nullable3 = default(System.Nullable<System.ArraySegment<byte>>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(4);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable3 = this._serializer68.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable3 = default(MsgPack.Unpacker);
                        disposable3 = unpacker.ReadSubtree();
                        try {
                            nullable3 = this._serializer68.UnpackFrom(disposable3);
                        }
                        finally {
                            if (((disposable3 == null) 
                                        == false)) {
                                disposable3.Dispose();
                            }
                        }
                    }
                }
                if (nullable3.HasValue) {
                    result.ArraySegmentByteField = nullable3.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<System.ArraySegment<decimal>> nullable4 = default(System.Nullable<System.ArraySegment<decimal>>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(5);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable4 = this._serializer69.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable4 = default(MsgPack.Unpacker);
                        disposable4 = unpacker.ReadSubtree();
                        try {
                            nullable4 = this._serializer69.UnpackFrom(disposable4);
                        }
                        finally {
                            if (((disposable4 == null) 
                                        == false)) {
                                disposable4.Dispose();
                            }
                        }
                    }
                }
                if (nullable4.HasValue) {
                    result.ArraySegmentDecimalField = nullable4.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<System.ArraySegment<int>> nullable5 = default(System.Nullable<System.ArraySegment<int>>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(6);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable5 = this._serializer70.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable5 = default(MsgPack.Unpacker);
                        disposable5 = unpacker.ReadSubtree();
                        try {
                            nullable5 = this._serializer70.UnpackFrom(disposable5);
                        }
                        finally {
                            if (((disposable5 == null) 
                                        == false)) {
                                disposable5.Dispose();
                            }
                        }
                    }
                }
                if (nullable5.HasValue) {
                    result.ArraySegmentInt32Field = nullable5.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<System.Numerics.BigInteger> nullable6 = default(System.Nullable<System.Numerics.BigInteger>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(7);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable6 = this._serializer71.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable6 = default(MsgPack.Unpacker);
                        disposable6 = unpacker.ReadSubtree();
                        try {
                            nullable6 = this._serializer71.UnpackFrom(disposable6);
                        }
                        finally {
                            if (((disposable6 == null) 
                                        == false)) {
                                disposable6.Dispose();
                            }
                        }
                    }
                }
                if (nullable6.HasValue) {
                    result.BigIntegerField = nullable6.Value;
                }
                unpacked = (unpacked + 1);
                byte[] nullable7 = default(byte[]);
                if ((unpacked < itemsCount)) {
                    nullable7 = MsgPack.Serialization.UnpackHelpers.UnpackBinaryValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Byte[] ByteArrayField");
                }
                if (((nullable7 == null) 
                            == false)) {
                    result.ByteArrayField = nullable7;
                }
                unpacked = (unpacked + 1);
                System.Nullable<byte> nullable8 = default(System.Nullable<byte>);
                if ((unpacked < itemsCount)) {
                    nullable8 = MsgPack.Serialization.UnpackHelpers.UnpackNullableByteValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Byte ByteField");
                }
                if (nullable8.HasValue) {
                    result.ByteField = nullable8.Value;
                }
                unpacked = (unpacked + 1);
                char[] nullable9 = default(char[]);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(10);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable9 = this._serializer11.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable7 = default(MsgPack.Unpacker);
                        disposable7 = unpacker.ReadSubtree();
                        try {
                            nullable9 = this._serializer11.UnpackFrom(disposable7);
                        }
                        finally {
                            if (((disposable7 == null) 
                                        == false)) {
                                disposable7.Dispose();
                            }
                        }
                    }
                }
                if (((nullable9 == null) 
                            == false)) {
                    result.CharArrayField = nullable9;
                }
                unpacked = (unpacked + 1);
                System.Nullable<char> nullable10 = default(System.Nullable<char>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(11);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable10 = this._serializer72.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable8 = default(MsgPack.Unpacker);
                        disposable8 = unpacker.ReadSubtree();
                        try {
                            nullable10 = this._serializer72.UnpackFrom(disposable8);
                        }
                        finally {
                            if (((disposable8 == null) 
                                        == false)) {
                                disposable8.Dispose();
                            }
                        }
                    }
                }
                if (nullable10.HasValue) {
                    result.CharField = nullable10.Value;
                }
                unpacked = (unpacked + 1);
                System.Collections.ObjectModel.Collection<MsgPack.MessagePackObject> nullable11 = default(System.Collections.ObjectModel.Collection<MsgPack.MessagePackObject>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(12);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable11 = this._serializer13.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable9 = default(MsgPack.Unpacker);
                        disposable9 = unpacker.ReadSubtree();
                        try {
                            nullable11 = this._serializer13.UnpackFrom(disposable9);
                        }
                        finally {
                            if (((disposable9 == null) 
                                        == false)) {
                                disposable9.Dispose();
                            }
                        }
                    }
                }
                if (((nullable11 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator3 = nullable11.GetEnumerator();
                    MsgPack.MessagePackObject current3;
                    try {
                        for (
                        ; enumerator3.MoveNext(); 
                        ) {
                            current3 = enumerator3.Current;
                            result.Collection_MessagePackObjectField.Add(current3);
                        }
                    }
                    finally {
                        enumerator3.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.ObjectModel.Collection<System.DateTime> nullable12 = default(System.Collections.ObjectModel.Collection<System.DateTime>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(13);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable12 = this._serializer14.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable10 = default(MsgPack.Unpacker);
                        disposable10 = unpacker.ReadSubtree();
                        try {
                            nullable12 = this._serializer14.UnpackFrom(disposable10);
                        }
                        finally {
                            if (((disposable10 == null) 
                                        == false)) {
                                disposable10.Dispose();
                            }
                        }
                    }
                }
                if (((nullable12 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<System.DateTime> enumerator4 = nullable12.GetEnumerator();
                    System.DateTime current4;
                    try {
                        for (
                        ; enumerator4.MoveNext(); 
                        ) {
                            current4 = enumerator4.Current;
                            result.CollectionDateTimeField.Add(current4);
                        }
                    }
                    finally {
                        enumerator4.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.ObjectModel.Collection<object> nullable13 = default(System.Collections.ObjectModel.Collection<object>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(14);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable13 = this._serializer15.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable11 = default(MsgPack.Unpacker);
                        disposable11 = unpacker.ReadSubtree();
                        try {
                            nullable13 = this._serializer15.UnpackFrom(disposable11);
                        }
                        finally {
                            if (((disposable11 == null) 
                                        == false)) {
                                disposable11.Dispose();
                            }
                        }
                    }
                }
                if (((nullable13 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<object> enumerator5 = nullable13.GetEnumerator();
                    object current5;
                    try {
                        for (
                        ; enumerator5.MoveNext(); 
                        ) {
                            current5 = enumerator5.Current;
                            result.CollectionObjectField.Add(current5);
                        }
                    }
                    finally {
                        enumerator5.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Nullable<System.Numerics.Complex> nullable14 = default(System.Nullable<System.Numerics.Complex>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(15);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable14 = this._serializer73.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable12 = default(MsgPack.Unpacker);
                        disposable12 = unpacker.ReadSubtree();
                        try {
                            nullable14 = this._serializer73.UnpackFrom(disposable12);
                        }
                        finally {
                            if (((disposable12 == null) 
                                        == false)) {
                                disposable12.Dispose();
                            }
                        }
                    }
                }
                if (nullable14.HasValue) {
                    result.ComplexField = nullable14.Value;
                }
                unpacked = (unpacked + 1);
                System.Globalization.CultureInfo nullable15 = default(System.Globalization.CultureInfo);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(16);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable15 = this._serializer17.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable13 = default(MsgPack.Unpacker);
                        disposable13 = unpacker.ReadSubtree();
                        try {
                            nullable15 = this._serializer17.UnpackFrom(disposable13);
                        }
                        finally {
                            if (((disposable13 == null) 
                                        == false)) {
                                disposable13.Dispose();
                            }
                        }
                    }
                }
                if (((nullable15 == null) 
                            == false)) {
                    result.CurrentCultureField = nullable15;
                }
                unpacked = (unpacked + 1);
                System.Nullable<System.DateTime> nullable16 = default(System.Nullable<System.DateTime>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(17);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable16 = this._serializer74.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable14 = default(MsgPack.Unpacker);
                        disposable14 = unpacker.ReadSubtree();
                        try {
                            nullable16 = this._serializer74.UnpackFrom(disposable14);
                        }
                        finally {
                            if (((disposable14 == null) 
                                        == false)) {
                                disposable14.Dispose();
                            }
                        }
                    }
                }
                if (nullable16.HasValue) {
                    result.DateTimeField = nullable16.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<System.DateTimeOffset> nullable17 = default(System.Nullable<System.DateTimeOffset>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(18);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable17 = this._serializer75.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable15 = default(MsgPack.Unpacker);
                        disposable15 = unpacker.ReadSubtree();
                        try {
                            nullable17 = this._serializer75.UnpackFrom(disposable15);
                        }
                        finally {
                            if (((disposable15 == null) 
                                        == false)) {
                                disposable15.Dispose();
                            }
                        }
                    }
                }
                if (nullable17.HasValue) {
                    result.DateTimeOffsetField = nullable17.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<decimal> nullable18 = default(System.Nullable<decimal>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(19);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable18 = this._serializer76.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable16 = default(MsgPack.Unpacker);
                        disposable16 = unpacker.ReadSubtree();
                        try {
                            nullable18 = this._serializer76.UnpackFrom(disposable16);
                        }
                        finally {
                            if (((disposable16 == null) 
                                        == false)) {
                                disposable16.Dispose();
                            }
                        }
                    }
                }
                if (nullable18.HasValue) {
                    result.DecimalField = nullable18.Value;
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.Dictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject> nullable19 = default(System.Collections.Generic.Dictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(20);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable19 = this._serializer21.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable17 = default(MsgPack.Unpacker);
                        disposable17 = unpacker.ReadSubtree();
                        try {
                            nullable19 = this._serializer21.UnpackFrom(disposable17);
                        }
                        finally {
                            if (((disposable17 == null) 
                                        == false)) {
                                disposable17.Dispose();
                            }
                        }
                    }
                }
                if (((nullable19 == null) 
                            == false)) {
                    System.Collections.Generic.Dictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>.Enumerator enumerator6 = nullable19.GetEnumerator();
                    System.Collections.Generic.KeyValuePair<MsgPack.MessagePackObject, MsgPack.MessagePackObject> current6;
                    try {
                        for (
                        ; enumerator6.MoveNext(); 
                        ) {
                            current6 = enumerator6.Current;
                            result.Dictionary_MessagePackObject_MessagePackObjectField.Add(current6.Key, current6.Value);
                        }
                    }
                    finally {
                        enumerator6.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Nullable<System.Collections.DictionaryEntry> nullable20 = default(System.Nullable<System.Collections.DictionaryEntry>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(21);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable20 = this._serializer77.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable18 = default(MsgPack.Unpacker);
                        disposable18 = unpacker.ReadSubtree();
                        try {
                            nullable20 = this._serializer77.UnpackFrom(disposable18);
                        }
                        finally {
                            if (((disposable18 == null) 
                                        == false)) {
                                disposable18.Dispose();
                            }
                        }
                    }
                }
                if (nullable20.HasValue) {
                    result.DictionaryEntryField = nullable20.Value;
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.Dictionary<object, object> nullable21 = default(System.Collections.Generic.Dictionary<object, object>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(22);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable21 = this._serializer23.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable19 = default(MsgPack.Unpacker);
                        disposable19 = unpacker.ReadSubtree();
                        try {
                            nullable21 = this._serializer23.UnpackFrom(disposable19);
                        }
                        finally {
                            if (((disposable19 == null) 
                                        == false)) {
                                disposable19.Dispose();
                            }
                        }
                    }
                }
                if (((nullable21 == null) 
                            == false)) {
                    System.Collections.Generic.Dictionary<object, object>.Enumerator enumerator7 = nullable21.GetEnumerator();
                    System.Collections.Generic.KeyValuePair<object, object> current7;
                    try {
                        for (
                        ; enumerator7.MoveNext(); 
                        ) {
                            current7 = enumerator7.Current;
                            result.DictionaryObjectObjectField.Add(current7.Key, current7.Value);
                        }
                    }
                    finally {
                        enumerator7.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.Dictionary<string, System.DateTime> nullable22 = default(System.Collections.Generic.Dictionary<string, System.DateTime>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(23);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable22 = this._serializer24.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable20 = default(MsgPack.Unpacker);
                        disposable20 = unpacker.ReadSubtree();
                        try {
                            nullable22 = this._serializer24.UnpackFrom(disposable20);
                        }
                        finally {
                            if (((disposable20 == null) 
                                        == false)) {
                                disposable20.Dispose();
                            }
                        }
                    }
                }
                if (((nullable22 == null) 
                            == false)) {
                    System.Collections.Generic.Dictionary<string, System.DateTime>.Enumerator enumerator8 = nullable22.GetEnumerator();
                    System.Collections.Generic.KeyValuePair<string, System.DateTime> current8;
                    try {
                        for (
                        ; enumerator8.MoveNext(); 
                        ) {
                            current8 = enumerator8.Current;
                            result.DictionaryStringDateTimeField.Add(current8.Key, current8.Value);
                        }
                    }
                    finally {
                        enumerator8.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Nullable<bool> nullable23 = default(System.Nullable<bool>);
                if ((unpacked < itemsCount)) {
                    nullable23 = MsgPack.Serialization.UnpackHelpers.UnpackNullableBooleanValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Boolean FalseField");
                }
                if (nullable23.HasValue) {
                    result.FalseField = nullable23.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<System.Runtime.InteropServices.ComTypes.FILETIME> nullable24 = default(System.Nullable<System.Runtime.InteropServices.ComTypes.FILETIME>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(25);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable24 = this._serializer78.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable21 = default(MsgPack.Unpacker);
                        disposable21 = unpacker.ReadSubtree();
                        try {
                            nullable24 = this._serializer78.UnpackFrom(disposable21);
                        }
                        finally {
                            if (((disposable21 == null) 
                                        == false)) {
                                disposable21.Dispose();
                            }
                        }
                    }
                }
                if (nullable24.HasValue) {
                    result.FILETIMEField = nullable24.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<System.Guid> nullable25 = default(System.Nullable<System.Guid>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(26);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable25 = this._serializer79.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable22 = default(MsgPack.Unpacker);
                        disposable22 = unpacker.ReadSubtree();
                        try {
                            nullable25 = this._serializer79.UnpackFrom(disposable22);
                        }
                        finally {
                            if (((disposable22 == null) 
                                        == false)) {
                                disposable22.Dispose();
                            }
                        }
                    }
                }
                if (nullable25.HasValue) {
                    result.GuidField = nullable25.Value;
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.HashSet<MsgPack.MessagePackObject> nullable26 = default(System.Collections.Generic.HashSet<MsgPack.MessagePackObject>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(27);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable26 = this._serializer28.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable23 = default(MsgPack.Unpacker);
                        disposable23 = unpacker.ReadSubtree();
                        try {
                            nullable26 = this._serializer28.UnpackFrom(disposable23);
                        }
                        finally {
                            if (((disposable23 == null) 
                                        == false)) {
                                disposable23.Dispose();
                            }
                        }
                    }
                }
                if (((nullable26 == null) 
                            == false)) {
                    System.Collections.Generic.HashSet<MsgPack.MessagePackObject>.Enumerator enumerator9 = nullable26.GetEnumerator();
                    MsgPack.MessagePackObject current9;
                    try {
                        for (
                        ; enumerator9.MoveNext(); 
                        ) {
                            current9 = enumerator9.Current;
                            result.HashSet_MessagePackObjectField.Add(current9);
                        }
                    }
                    finally {
                        enumerator9.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.HashSet<System.DateTime> nullable27 = default(System.Collections.Generic.HashSet<System.DateTime>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(28);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable27 = this._serializer29.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable24 = default(MsgPack.Unpacker);
                        disposable24 = unpacker.ReadSubtree();
                        try {
                            nullable27 = this._serializer29.UnpackFrom(disposable24);
                        }
                        finally {
                            if (((disposable24 == null) 
                                        == false)) {
                                disposable24.Dispose();
                            }
                        }
                    }
                }
                if (((nullable27 == null) 
                            == false)) {
                    System.Collections.Generic.HashSet<System.DateTime>.Enumerator enumerator10 = nullable27.GetEnumerator();
                    System.DateTime current10;
                    try {
                        for (
                        ; enumerator10.MoveNext(); 
                        ) {
                            current10 = enumerator10.Current;
                            result.HashSetDateTimeField.Add(current10);
                        }
                    }
                    finally {
                        enumerator10.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.HashSet<object> nullable28 = default(System.Collections.Generic.HashSet<object>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(29);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable28 = this._serializer30.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable25 = default(MsgPack.Unpacker);
                        disposable25 = unpacker.ReadSubtree();
                        try {
                            nullable28 = this._serializer30.UnpackFrom(disposable25);
                        }
                        finally {
                            if (((disposable25 == null) 
                                        == false)) {
                                disposable25.Dispose();
                            }
                        }
                    }
                }
                if (((nullable28 == null) 
                            == false)) {
                    System.Collections.Generic.HashSet<object>.Enumerator enumerator11 = nullable28.GetEnumerator();
                    object current11;
                    try {
                        for (
                        ; enumerator11.MoveNext(); 
                        ) {
                            current11 = enumerator11.Current;
                            result.HashSetObjectField.Add(current11);
                        }
                    }
                    finally {
                        enumerator11.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Hashtable nullable29 = default(System.Collections.Hashtable);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(30);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable29 = this._serializer31.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable26 = default(MsgPack.Unpacker);
                        disposable26 = unpacker.ReadSubtree();
                        try {
                            nullable29 = this._serializer31.UnpackFrom(disposable26);
                        }
                        finally {
                            if (((disposable26 == null) 
                                        == false)) {
                                disposable26.Dispose();
                            }
                        }
                    }
                }
                if (((nullable29 == null) 
                            == false)) {
                    System.Collections.IDictionaryEnumerator enumerator12 = nullable29.GetEnumerator();
                    System.Collections.DictionaryEntry current12;
                    for (
                    ; enumerator12.MoveNext(); 
                    ) {
                        current12 = enumerator12.Entry;
                        result.HashtableField.Add(current12.Key, current12.Value);
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.ICollection<MsgPack.MessagePackObject> nullable30 = default(System.Collections.Generic.ICollection<MsgPack.MessagePackObject>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(31);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable30 = this._serializer32.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable27 = default(MsgPack.Unpacker);
                        disposable27 = unpacker.ReadSubtree();
                        try {
                            nullable30 = this._serializer32.UnpackFrom(disposable27);
                        }
                        finally {
                            if (((disposable27 == null) 
                                        == false)) {
                                disposable27.Dispose();
                            }
                        }
                    }
                }
                if (((nullable30 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator13 = nullable30.GetEnumerator();
                    MsgPack.MessagePackObject current13;
                    try {
                        for (
                        ; enumerator13.MoveNext(); 
                        ) {
                            current13 = enumerator13.Current;
                            result.ICollection_MessagePackObjectField.Add(current13);
                        }
                    }
                    finally {
                        enumerator13.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.ICollection<System.DateTime> nullable31 = default(System.Collections.Generic.ICollection<System.DateTime>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(32);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable31 = this._serializer33.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable28 = default(MsgPack.Unpacker);
                        disposable28 = unpacker.ReadSubtree();
                        try {
                            nullable31 = this._serializer33.UnpackFrom(disposable28);
                        }
                        finally {
                            if (((disposable28 == null) 
                                        == false)) {
                                disposable28.Dispose();
                            }
                        }
                    }
                }
                if (((nullable31 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<System.DateTime> enumerator14 = nullable31.GetEnumerator();
                    System.DateTime current14;
                    try {
                        for (
                        ; enumerator14.MoveNext(); 
                        ) {
                            current14 = enumerator14.Current;
                            result.ICollectionDateTimeField.Add(current14);
                        }
                    }
                    finally {
                        enumerator14.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.ICollection<object> nullable32 = default(System.Collections.Generic.ICollection<object>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(33);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable32 = this._serializer34.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable29 = default(MsgPack.Unpacker);
                        disposable29 = unpacker.ReadSubtree();
                        try {
                            nullable32 = this._serializer34.UnpackFrom(disposable29);
                        }
                        finally {
                            if (((disposable29 == null) 
                                        == false)) {
                                disposable29.Dispose();
                            }
                        }
                    }
                }
                if (((nullable32 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<object> enumerator15 = nullable32.GetEnumerator();
                    object current15;
                    try {
                        for (
                        ; enumerator15.MoveNext(); 
                        ) {
                            current15 = enumerator15.Current;
                            result.ICollectionObjectField.Add(current15);
                        }
                    }
                    finally {
                        enumerator15.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.IDictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject> nullable33 = default(System.Collections.Generic.IDictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(34);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable33 = this._serializer35.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable30 = default(MsgPack.Unpacker);
                        disposable30 = unpacker.ReadSubtree();
                        try {
                            nullable33 = this._serializer35.UnpackFrom(disposable30);
                        }
                        finally {
                            if (((disposable30 == null) 
                                        == false)) {
                                disposable30.Dispose();
                            }
                        }
                    }
                }
                if (((nullable33 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<MsgPack.MessagePackObject, MsgPack.MessagePackObject>> enumerator16 = nullable33.GetEnumerator();
                    System.Collections.Generic.KeyValuePair<MsgPack.MessagePackObject, MsgPack.MessagePackObject> current16;
                    try {
                        for (
                        ; enumerator16.MoveNext(); 
                        ) {
                            current16 = enumerator16.Current;
                            result.IDictionary_MessagePackObject_MessagePackObjectField.Add(current16.Key, current16.Value);
                        }
                    }
                    finally {
                        enumerator16.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.IDictionary<object, object> nullable34 = default(System.Collections.Generic.IDictionary<object, object>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(35);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable34 = this._serializer36.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable31 = default(MsgPack.Unpacker);
                        disposable31 = unpacker.ReadSubtree();
                        try {
                            nullable34 = this._serializer36.UnpackFrom(disposable31);
                        }
                        finally {
                            if (((disposable31 == null) 
                                        == false)) {
                                disposable31.Dispose();
                            }
                        }
                    }
                }
                if (((nullable34 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<object, object>> enumerator17 = nullable34.GetEnumerator();
                    System.Collections.Generic.KeyValuePair<object, object> current17;
                    try {
                        for (
                        ; enumerator17.MoveNext(); 
                        ) {
                            current17 = enumerator17.Current;
                            result.IDictionaryObjectObjectField.Add(current17.Key, current17.Value);
                        }
                    }
                    finally {
                        enumerator17.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.IDictionary<string, System.DateTime> nullable35 = default(System.Collections.Generic.IDictionary<string, System.DateTime>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(36);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable35 = this._serializer37.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable32 = default(MsgPack.Unpacker);
                        disposable32 = unpacker.ReadSubtree();
                        try {
                            nullable35 = this._serializer37.UnpackFrom(disposable32);
                        }
                        finally {
                            if (((disposable32 == null) 
                                        == false)) {
                                disposable32.Dispose();
                            }
                        }
                    }
                }
                if (((nullable35 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, System.DateTime>> enumerator18 = nullable35.GetEnumerator();
                    System.Collections.Generic.KeyValuePair<string, System.DateTime> current18;
                    try {
                        for (
                        ; enumerator18.MoveNext(); 
                        ) {
                            current18 = enumerator18.Current;
                            result.IDictionaryStringDateTimeField.Add(current18.Key, current18.Value);
                        }
                    }
                    finally {
                        enumerator18.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.IList<MsgPack.MessagePackObject> nullable36 = default(System.Collections.Generic.IList<MsgPack.MessagePackObject>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(37);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable36 = this._serializer38.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable33 = default(MsgPack.Unpacker);
                        disposable33 = unpacker.ReadSubtree();
                        try {
                            nullable36 = this._serializer38.UnpackFrom(disposable33);
                        }
                        finally {
                            if (((disposable33 == null) 
                                        == false)) {
                                disposable33.Dispose();
                            }
                        }
                    }
                }
                if (((nullable36 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator19 = nullable36.GetEnumerator();
                    MsgPack.MessagePackObject current19;
                    try {
                        for (
                        ; enumerator19.MoveNext(); 
                        ) {
                            current19 = enumerator19.Current;
                            result.IList_MessagePackObjectField.Add(current19);
                        }
                    }
                    finally {
                        enumerator19.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.IList<System.DateTime> nullable37 = default(System.Collections.Generic.IList<System.DateTime>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(38);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable37 = this._serializer39.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable34 = default(MsgPack.Unpacker);
                        disposable34 = unpacker.ReadSubtree();
                        try {
                            nullable37 = this._serializer39.UnpackFrom(disposable34);
                        }
                        finally {
                            if (((disposable34 == null) 
                                        == false)) {
                                disposable34.Dispose();
                            }
                        }
                    }
                }
                if (((nullable37 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<System.DateTime> enumerator20 = nullable37.GetEnumerator();
                    System.DateTime current20;
                    try {
                        for (
                        ; enumerator20.MoveNext(); 
                        ) {
                            current20 = enumerator20.Current;
                            result.IListDateTimeField.Add(current20);
                        }
                    }
                    finally {
                        enumerator20.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.IList<object> nullable38 = default(System.Collections.Generic.IList<object>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(39);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable38 = this._serializer40.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable35 = default(MsgPack.Unpacker);
                        disposable35 = unpacker.ReadSubtree();
                        try {
                            nullable38 = this._serializer40.UnpackFrom(disposable35);
                        }
                        finally {
                            if (((disposable35 == null) 
                                        == false)) {
                                disposable35.Dispose();
                            }
                        }
                    }
                }
                if (((nullable38 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<object> enumerator21 = nullable38.GetEnumerator();
                    object current21;
                    try {
                        for (
                        ; enumerator21.MoveNext(); 
                        ) {
                            current21 = enumerator21.Current;
                            result.IListObjectField.Add(current21);
                        }
                    }
                    finally {
                        enumerator21.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                MsgPack.Image nullable39 = default(MsgPack.Image);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(40);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable39 = this._serializer41.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable36 = default(MsgPack.Unpacker);
                        disposable36 = unpacker.ReadSubtree();
                        try {
                            nullable39 = this._serializer41.UnpackFrom(disposable36);
                        }
                        finally {
                            if (((disposable36 == null) 
                                        == false)) {
                                disposable36.Dispose();
                            }
                        }
                    }
                }
                if (((nullable39 == null) 
                            == false)) {
                    result.Image_Field = nullable39;
                }
                unpacked = (unpacked + 1);
                System.Globalization.CultureInfo nullable40 = default(System.Globalization.CultureInfo);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(41);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable40 = this._serializer17.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable37 = default(MsgPack.Unpacker);
                        disposable37 = unpacker.ReadSubtree();
                        try {
                            nullable40 = this._serializer17.UnpackFrom(disposable37);
                        }
                        finally {
                            if (((disposable37 == null) 
                                        == false)) {
                                disposable37.Dispose();
                            }
                        }
                    }
                }
                if (((nullable40 == null) 
                            == false)) {
                    result.InvariantCultureField = nullable40;
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.ISet<MsgPack.MessagePackObject> nullable41 = default(System.Collections.Generic.ISet<MsgPack.MessagePackObject>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(42);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable41 = this._serializer42.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable38 = default(MsgPack.Unpacker);
                        disposable38 = unpacker.ReadSubtree();
                        try {
                            nullable41 = this._serializer42.UnpackFrom(disposable38);
                        }
                        finally {
                            if (((disposable38 == null) 
                                        == false)) {
                                disposable38.Dispose();
                            }
                        }
                    }
                }
                if (((nullable41 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator22 = nullable41.GetEnumerator();
                    MsgPack.MessagePackObject current22;
                    try {
                        for (
                        ; enumerator22.MoveNext(); 
                        ) {
                            current22 = enumerator22.Current;
                            result.ISet_MessagePackObjectField.Add(current22);
                        }
                    }
                    finally {
                        enumerator22.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.ISet<System.DateTime> nullable42 = default(System.Collections.Generic.ISet<System.DateTime>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(43);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable42 = this._serializer43.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable39 = default(MsgPack.Unpacker);
                        disposable39 = unpacker.ReadSubtree();
                        try {
                            nullable42 = this._serializer43.UnpackFrom(disposable39);
                        }
                        finally {
                            if (((disposable39 == null) 
                                        == false)) {
                                disposable39.Dispose();
                            }
                        }
                    }
                }
                if (((nullable42 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<System.DateTime> enumerator23 = nullable42.GetEnumerator();
                    System.DateTime current23;
                    try {
                        for (
                        ; enumerator23.MoveNext(); 
                        ) {
                            current23 = enumerator23.Current;
                            result.ISetDateTimeField.Add(current23);
                        }
                    }
                    finally {
                        enumerator23.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.ISet<object> nullable43 = default(System.Collections.Generic.ISet<object>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(44);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable43 = this._serializer44.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable40 = default(MsgPack.Unpacker);
                        disposable40 = unpacker.ReadSubtree();
                        try {
                            nullable43 = this._serializer44.UnpackFrom(disposable40);
                        }
                        finally {
                            if (((disposable40 == null) 
                                        == false)) {
                                disposable40.Dispose();
                            }
                        }
                    }
                }
                if (((nullable43 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<object> enumerator24 = nullable43.GetEnumerator();
                    object current24;
                    try {
                        for (
                        ; enumerator24.MoveNext(); 
                        ) {
                            current24 = enumerator24.Current;
                            result.ISetObjectField.Add(current24);
                        }
                    }
                    finally {
                        enumerator24.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Nullable<System.Collections.Generic.KeyValuePair<string, System.Numerics.Complex>> nullable44 = default(System.Nullable<System.Collections.Generic.KeyValuePair<string, System.Numerics.Complex>>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(45);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable44 = this._serializer80.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable41 = default(MsgPack.Unpacker);
                        disposable41 = unpacker.ReadSubtree();
                        try {
                            nullable44 = this._serializer80.UnpackFrom(disposable41);
                        }
                        finally {
                            if (((disposable41 == null) 
                                        == false)) {
                                disposable41.Dispose();
                            }
                        }
                    }
                }
                if (nullable44.HasValue) {
                    result.KeyValuePairStringComplexField = nullable44.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>> nullable45 = default(System.Nullable<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(46);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable45 = this._serializer81.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable42 = default(MsgPack.Unpacker);
                        disposable42 = unpacker.ReadSubtree();
                        try {
                            nullable45 = this._serializer81.UnpackFrom(disposable42);
                        }
                        finally {
                            if (((disposable42 == null) 
                                        == false)) {
                                disposable42.Dispose();
                            }
                        }
                    }
                }
                if (nullable45.HasValue) {
                    result.KeyValuePairStringDateTimeOffsetField = nullable45.Value;
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.List<MsgPack.MessagePackObject> nullable46 = default(System.Collections.Generic.List<MsgPack.MessagePackObject>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(47);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable46 = this._serializer47.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable43 = default(MsgPack.Unpacker);
                        disposable43 = unpacker.ReadSubtree();
                        try {
                            nullable46 = this._serializer47.UnpackFrom(disposable43);
                        }
                        finally {
                            if (((disposable43 == null) 
                                        == false)) {
                                disposable43.Dispose();
                            }
                        }
                    }
                }
                if (((nullable46 == null) 
                            == false)) {
                    System.Collections.Generic.List<MsgPack.MessagePackObject>.Enumerator enumerator25 = nullable46.GetEnumerator();
                    MsgPack.MessagePackObject current25;
                    try {
                        for (
                        ; enumerator25.MoveNext(); 
                        ) {
                            current25 = enumerator25.Current;
                            result.List_MessagePackObjectField.Add(current25);
                        }
                    }
                    finally {
                        enumerator25.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.List<System.DateTime> nullable47 = default(System.Collections.Generic.List<System.DateTime>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(48);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable47 = this._serializer48.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable44 = default(MsgPack.Unpacker);
                        disposable44 = unpacker.ReadSubtree();
                        try {
                            nullable47 = this._serializer48.UnpackFrom(disposable44);
                        }
                        finally {
                            if (((disposable44 == null) 
                                        == false)) {
                                disposable44.Dispose();
                            }
                        }
                    }
                }
                if (((nullable47 == null) 
                            == false)) {
                    System.Collections.Generic.List<System.DateTime>.Enumerator enumerator26 = nullable47.GetEnumerator();
                    System.DateTime current26;
                    try {
                        for (
                        ; enumerator26.MoveNext(); 
                        ) {
                            current26 = enumerator26.Current;
                            result.ListDateTimeField.Add(current26);
                        }
                    }
                    finally {
                        enumerator26.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.Generic.List<object> nullable48 = default(System.Collections.Generic.List<object>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(49);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable48 = this._serializer49.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable45 = default(MsgPack.Unpacker);
                        disposable45 = unpacker.ReadSubtree();
                        try {
                            nullable48 = this._serializer49.UnpackFrom(disposable45);
                        }
                        finally {
                            if (((disposable45 == null) 
                                        == false)) {
                                disposable45.Dispose();
                            }
                        }
                    }
                }
                if (((nullable48 == null) 
                            == false)) {
                    System.Collections.Generic.List<object>.Enumerator enumerator27 = nullable48.GetEnumerator();
                    object current27;
                    try {
                        for (
                        ; enumerator27.MoveNext(); 
                        ) {
                            current27 = enumerator27.Current;
                            result.ListObjectField.Add(current27);
                        }
                    }
                    finally {
                        enumerator27.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Nullable<byte> nullable49 = default(System.Nullable<byte>);
                if ((unpacked < itemsCount)) {
                    nullable49 = MsgPack.Serialization.UnpackHelpers.UnpackNullableByteValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Byte MaxByteField");
                }
                if (nullable49.HasValue) {
                    result.MaxByteField = nullable49.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<int> nullable50 = default(System.Nullable<int>);
                if ((unpacked < itemsCount)) {
                    nullable50 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt32Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Int32 MaxInt32Field");
                }
                if (nullable50.HasValue) {
                    result.MaxInt32Field = nullable50.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<long> nullable51 = default(System.Nullable<long>);
                if ((unpacked < itemsCount)) {
                    nullable51 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt64Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Int64 MaxInt64Field");
                }
                if (nullable51.HasValue) {
                    result.MaxInt64Field = nullable51.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<ushort> nullable52 = default(System.Nullable<ushort>);
                if ((unpacked < itemsCount)) {
                    nullable52 = MsgPack.Serialization.UnpackHelpers.UnpackNullableUInt16Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "UInt16 MaxUInt16Field");
                }
                if (nullable52.HasValue) {
                    result.MaxUInt16Field = nullable52.Value;
                }
                unpacked = (unpacked + 1);
                MsgPack.MessagePackObject nullable53 = default(MsgPack.MessagePackObject);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(54);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable53 = unpacker.LastReadData;
                    }
                    else {
                        nullable53 = unpacker.UnpackSubtreeData();
                    }
                }
                if ((nullable53.IsNil == false)) {
                    result.MessagePackObject_Field = nullable53;
                }
                unpacked = (unpacked + 1);
                MsgPack.MessagePackObject[] nullable54 = default(MsgPack.MessagePackObject[]);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(55);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable54 = this._serializer54.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable46 = default(MsgPack.Unpacker);
                        disposable46 = unpacker.ReadSubtree();
                        try {
                            nullable54 = this._serializer54.UnpackFrom(disposable46);
                        }
                        finally {
                            if (((disposable46 == null) 
                                        == false)) {
                                disposable46.Dispose();
                            }
                        }
                    }
                }
                if (((nullable54 == null) 
                            == false)) {
                    result.MessagePackObjectArray_Field = nullable54;
                }
                unpacked = (unpacked + 1);
                System.Nullable<int> nullable55 = default(System.Nullable<int>);
                if ((unpacked < itemsCount)) {
                    nullable55 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt32Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Int32 MinInt32Field");
                }
                if (nullable55.HasValue) {
                    result.MinInt32Field = nullable55.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<long> nullable56 = default(System.Nullable<long>);
                if ((unpacked < itemsCount)) {
                    nullable56 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt64Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Int64 MinInt64Field");
                }
                if (nullable56.HasValue) {
                    result.MinInt64Field = nullable56.Value;
                }
                unpacked = (unpacked + 1);
                object nullable57 = default(object);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(58);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable57 = this._serializer55.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable47 = default(MsgPack.Unpacker);
                        disposable47 = unpacker.ReadSubtree();
                        try {
                            nullable57 = this._serializer55.UnpackFrom(disposable47);
                        }
                        finally {
                            if (((disposable47 == null) 
                                        == false)) {
                                disposable47.Dispose();
                            }
                        }
                    }
                }
                if (((nullable57 == null) 
                            == false)) {
                    result.NullField = nullable57;
                }
                unpacked = (unpacked + 1);
                object[] nullable58 = default(object[]);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(59);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable58 = this._serializer56.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable48 = default(MsgPack.Unpacker);
                        disposable48 = unpacker.ReadSubtree();
                        try {
                            nullable58 = this._serializer56.UnpackFrom(disposable48);
                        }
                        finally {
                            if (((disposable48 == null) 
                                        == false)) {
                                disposable48.Dispose();
                            }
                        }
                    }
                }
                if (((nullable58 == null) 
                            == false)) {
                    result.ObjectArrayField = nullable58;
                }
                unpacked = (unpacked + 1);
                object nullable59 = default(object);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(60);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable59 = this._serializer55.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable49 = default(MsgPack.Unpacker);
                        disposable49 = unpacker.ReadSubtree();
                        try {
                            nullable59 = this._serializer55.UnpackFrom(disposable49);
                        }
                        finally {
                            if (((disposable49 == null) 
                                        == false)) {
                                disposable49.Dispose();
                            }
                        }
                    }
                }
                if (((nullable59 == null) 
                            == false)) {
                    result.ObjectField = nullable59;
                }
                unpacked = (unpacked + 1);
                System.Collections.ObjectModel.ObservableCollection<MsgPack.MessagePackObject> nullable60 = default(System.Collections.ObjectModel.ObservableCollection<MsgPack.MessagePackObject>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(61);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable60 = this._serializer57.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable50 = default(MsgPack.Unpacker);
                        disposable50 = unpacker.ReadSubtree();
                        try {
                            nullable60 = this._serializer57.UnpackFrom(disposable50);
                        }
                        finally {
                            if (((disposable50 == null) 
                                        == false)) {
                                disposable50.Dispose();
                            }
                        }
                    }
                }
                if (((nullable60 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator28 = nullable60.GetEnumerator();
                    MsgPack.MessagePackObject current28;
                    try {
                        for (
                        ; enumerator28.MoveNext(); 
                        ) {
                            current28 = enumerator28.Current;
                            result.ObservableCollection_MessagePackObjectField.Add(current28);
                        }
                    }
                    finally {
                        enumerator28.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.ObjectModel.ObservableCollection<System.DateTime> nullable61 = default(System.Collections.ObjectModel.ObservableCollection<System.DateTime>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(62);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable61 = this._serializer58.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable51 = default(MsgPack.Unpacker);
                        disposable51 = unpacker.ReadSubtree();
                        try {
                            nullable61 = this._serializer58.UnpackFrom(disposable51);
                        }
                        finally {
                            if (((disposable51 == null) 
                                        == false)) {
                                disposable51.Dispose();
                            }
                        }
                    }
                }
                if (((nullable61 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<System.DateTime> enumerator29 = nullable61.GetEnumerator();
                    System.DateTime current29;
                    try {
                        for (
                        ; enumerator29.MoveNext(); 
                        ) {
                            current29 = enumerator29.Current;
                            result.ObservableCollectionDateTimeField.Add(current29);
                        }
                    }
                    finally {
                        enumerator29.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Collections.ObjectModel.ObservableCollection<object> nullable62 = default(System.Collections.ObjectModel.ObservableCollection<object>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(63);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable62 = this._serializer59.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable52 = default(MsgPack.Unpacker);
                        disposable52 = unpacker.ReadSubtree();
                        try {
                            nullable62 = this._serializer59.UnpackFrom(disposable52);
                        }
                        finally {
                            if (((disposable52 == null) 
                                        == false)) {
                                disposable52.Dispose();
                            }
                        }
                    }
                }
                if (((nullable62 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<object> enumerator30 = nullable62.GetEnumerator();
                    object current30;
                    try {
                        for (
                        ; enumerator30.MoveNext(); 
                        ) {
                            current30 = enumerator30.Current;
                            result.ObservableCollectionObjectField.Add(current30);
                        }
                    }
                    finally {
                        enumerator30.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                string nullable63 = default(string);
                if ((unpacked < itemsCount)) {
                    nullable63 = MsgPack.Serialization.UnpackHelpers.UnpackStringValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "System.String StringField");
                }
                if (((nullable63 == null) 
                            == false)) {
                    result.StringField = nullable63;
                }
                unpacked = (unpacked + 1);
                MsgPack.Serialization.StringKeyedCollection<System.DateTime> nullable64 = default(MsgPack.Serialization.StringKeyedCollection<System.DateTime>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(65);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable64 = this._serializer60.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable53 = default(MsgPack.Unpacker);
                        disposable53 = unpacker.ReadSubtree();
                        try {
                            nullable64 = this._serializer60.UnpackFrom(disposable53);
                        }
                        finally {
                            if (((disposable53 == null) 
                                        == false)) {
                                disposable53.Dispose();
                            }
                        }
                    }
                }
                if (((nullable64 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<System.DateTime> enumerator31 = nullable64.GetEnumerator();
                    System.DateTime current31;
                    try {
                        for (
                        ; enumerator31.MoveNext(); 
                        ) {
                            current31 = enumerator31.Current;
                            result.StringKeyedCollection_DateTimeField.Add(current31);
                        }
                    }
                    finally {
                        enumerator31.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                MsgPack.Serialization.StringKeyedCollection<MsgPack.MessagePackObject> nullable65 = default(MsgPack.Serialization.StringKeyedCollection<MsgPack.MessagePackObject>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(66);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable65 = this._serializer61.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable54 = default(MsgPack.Unpacker);
                        disposable54 = unpacker.ReadSubtree();
                        try {
                            nullable65 = this._serializer61.UnpackFrom(disposable54);
                        }
                        finally {
                            if (((disposable54 == null) 
                                        == false)) {
                                disposable54.Dispose();
                            }
                        }
                    }
                }
                if (((nullable65 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator32 = nullable65.GetEnumerator();
                    MsgPack.MessagePackObject current32;
                    try {
                        for (
                        ; enumerator32.MoveNext(); 
                        ) {
                            current32 = enumerator32.Current;
                            result.StringKeyedCollection_MessagePackObjectField.Add(current32);
                        }
                    }
                    finally {
                        enumerator32.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                MsgPack.Serialization.StringKeyedCollection<object> nullable66 = default(MsgPack.Serialization.StringKeyedCollection<object>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(67);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable66 = this._serializer62.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable55 = default(MsgPack.Unpacker);
                        disposable55 = unpacker.ReadSubtree();
                        try {
                            nullable66 = this._serializer62.UnpackFrom(disposable55);
                        }
                        finally {
                            if (((disposable55 == null) 
                                        == false)) {
                                disposable55.Dispose();
                            }
                        }
                    }
                }
                if (((nullable66 == null) 
                            == false)) {
                    System.Collections.Generic.IEnumerator<object> enumerator33 = nullable66.GetEnumerator();
                    object current33;
                    try {
                        for (
                        ; enumerator33.MoveNext(); 
                        ) {
                            current33 = enumerator33.Current;
                            result.StringKeyedCollection_ObjectField.Add(current33);
                        }
                    }
                    finally {
                        enumerator33.Dispose();
                    }
                }
                unpacked = (unpacked + 1);
                System.Nullable<System.TimeSpan> nullable67 = default(System.Nullable<System.TimeSpan>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(68);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable67 = this._serializer82.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable56 = default(MsgPack.Unpacker);
                        disposable56 = unpacker.ReadSubtree();
                        try {
                            nullable67 = this._serializer82.UnpackFrom(disposable56);
                        }
                        finally {
                            if (((disposable56 == null) 
                                        == false)) {
                                disposable56.Dispose();
                            }
                        }
                    }
                }
                if (nullable67.HasValue) {
                    result.TimeSpanField = nullable67.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<byte> nullable68 = default(System.Nullable<byte>);
                if ((unpacked < itemsCount)) {
                    nullable68 = MsgPack.Serialization.UnpackHelpers.UnpackNullableByteValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Byte TinyByteField");
                }
                if (nullable68.HasValue) {
                    result.TinyByteField = nullable68.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<int> nullable69 = default(System.Nullable<int>);
                if ((unpacked < itemsCount)) {
                    nullable69 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt32Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Int32 TinyInt32Field");
                }
                if (nullable69.HasValue) {
                    result.TinyInt32Field = nullable69.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<long> nullable70 = default(System.Nullable<long>);
                if ((unpacked < itemsCount)) {
                    nullable70 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt64Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Int64 TinyInt64Field");
                }
                if (nullable70.HasValue) {
                    result.TinyInt64Field = nullable70.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<ushort> nullable71 = default(System.Nullable<ushort>);
                if ((unpacked < itemsCount)) {
                    nullable71 = MsgPack.Serialization.UnpackHelpers.UnpackNullableUInt16Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "UInt16 TinyUInt16Field");
                }
                if (nullable71.HasValue) {
                    result.TinyUInt16Field = nullable71.Value;
                }
                unpacked = (unpacked + 1);
                System.Nullable<bool> nullable72 = default(System.Nullable<bool>);
                if ((unpacked < itemsCount)) {
                    nullable72 = MsgPack.Serialization.UnpackHelpers.UnpackNullableBooleanValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Boolean TrueField");
                }
                if (nullable72.HasValue) {
                    result.TrueField = nullable72.Value;
                }
                unpacked = (unpacked + 1);
                System.Tuple<int, string, MsgPack.MessagePackObject, object> nullable73 = default(System.Tuple<int, string, MsgPack.MessagePackObject, object>);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(74);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable73 = this._serializer65.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable57 = default(MsgPack.Unpacker);
                        disposable57 = unpacker.ReadSubtree();
                        try {
                            nullable73 = this._serializer65.UnpackFrom(disposable57);
                        }
                        finally {
                            if (((disposable57 == null) 
                                        == false)) {
                                disposable57.Dispose();
                            }
                        }
                    }
                }
                if (((nullable73 == null) 
                            == false)) {
                    result.Tuple_Int32_String_MessagePackObject_ObjectField = nullable73;
                }
                unpacked = (unpacked + 1);
                System.Uri nullable74 = default(System.Uri);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(75);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable74 = this._serializer66.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable58 = default(MsgPack.Unpacker);
                        disposable58 = unpacker.ReadSubtree();
                        try {
                            nullable74 = this._serializer66.UnpackFrom(disposable58);
                        }
                        finally {
                            if (((disposable58 == null) 
                                        == false)) {
                                disposable58.Dispose();
                            }
                        }
                    }
                }
                if (((nullable74 == null) 
                            == false)) {
                    result.UriField = nullable74;
                }
                unpacked = (unpacked + 1);
                System.Version nullable75 = default(System.Version);
                if ((unpacked < itemsCount)) {
                    if ((unpacker.Read() == false)) {
                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(76);
                    }
                    if (((unpacker.IsArrayHeader == false) 
                                && (unpacker.IsMapHeader == false))) {
                        nullable75 = this._serializer67.UnpackFrom(unpacker);
                    }
                    else {
                        MsgPack.Unpacker disposable59 = default(MsgPack.Unpacker);
                        disposable59 = unpacker.ReadSubtree();
                        try {
                            nullable75 = this._serializer67.UnpackFrom(disposable59);
                        }
                        finally {
                            if (((disposable59 == null) 
                                        == false)) {
                                disposable59.Dispose();
                            }
                        }
                    }
                }
                if (((nullable75 == null) 
                            == false)) {
                    result.VersionField = nullable75;
                }
                unpacked = (unpacked + 1);
            }
            else {
                int itemsCount0 = default(int);
                itemsCount0 = MsgPack.Serialization.UnpackHelpers.GetItemsCount(unpacker);
                for (int i = 0; (i < itemsCount0); i = (i + 1)) {
                    string key = default(string);
                    string nullable76 = default(string);
                    nullable76 = MsgPack.Serialization.UnpackHelpers.UnpackStringValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "MemberName");
                    if (((nullable76 == null) 
                                == false)) {
                        key = nullable76;
                    }
                    else {
                        throw MsgPack.Serialization.SerializationExceptions.NewNullIsProhibited("MemberName");
                    }
                    if ((key == "VersionField")) {
                        System.Version nullable153 = default(System.Version);
                        if ((unpacker.Read() == false)) {
                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                        }
                        if (((unpacker.IsArrayHeader == false) 
                                    && (unpacker.IsMapHeader == false))) {
                            nullable153 = this._serializer67.UnpackFrom(unpacker);
                        }
                        else {
                            MsgPack.Unpacker disposable120 = default(MsgPack.Unpacker);
                            disposable120 = unpacker.ReadSubtree();
                            try {
                                nullable153 = this._serializer67.UnpackFrom(disposable120);
                            }
                            finally {
                                if (((disposable120 == null) 
                                            == false)) {
                                    disposable120.Dispose();
                                }
                            }
                        }
                        if (((nullable153 == null) 
                                    == false)) {
                            result.VersionField = nullable153;
                        }
                    }
                    else {
                        if ((key == "UriField")) {
                            System.Uri nullable152 = default(System.Uri);
                            if ((unpacker.Read() == false)) {
                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                            }
                            if (((unpacker.IsArrayHeader == false) 
                                        && (unpacker.IsMapHeader == false))) {
                                nullable152 = this._serializer66.UnpackFrom(unpacker);
                            }
                            else {
                                MsgPack.Unpacker disposable119 = default(MsgPack.Unpacker);
                                disposable119 = unpacker.ReadSubtree();
                                try {
                                    nullable152 = this._serializer66.UnpackFrom(disposable119);
                                }
                                finally {
                                    if (((disposable119 == null) 
                                                == false)) {
                                        disposable119.Dispose();
                                    }
                                }
                            }
                            if (((nullable152 == null) 
                                        == false)) {
                                result.UriField = nullable152;
                            }
                        }
                        else {
                            if ((key == "Tuple_Int32_String_MessagePackObject_ObjectField")) {
                                System.Tuple<int, string, MsgPack.MessagePackObject, object> nullable151 = default(System.Tuple<int, string, MsgPack.MessagePackObject, object>);
                                if ((unpacker.Read() == false)) {
                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                }
                                if (((unpacker.IsArrayHeader == false) 
                                            && (unpacker.IsMapHeader == false))) {
                                    nullable151 = this._serializer65.UnpackFrom(unpacker);
                                }
                                else {
                                    MsgPack.Unpacker disposable118 = default(MsgPack.Unpacker);
                                    disposable118 = unpacker.ReadSubtree();
                                    try {
                                        nullable151 = this._serializer65.UnpackFrom(disposable118);
                                    }
                                    finally {
                                        if (((disposable118 == null) 
                                                    == false)) {
                                            disposable118.Dispose();
                                        }
                                    }
                                }
                                if (((nullable151 == null) 
                                            == false)) {
                                    result.Tuple_Int32_String_MessagePackObject_ObjectField = nullable151;
                                }
                            }
                            else {
                                if ((key == "TrueField")) {
                                    System.Nullable<bool> nullable150 = default(System.Nullable<bool>);
                                    nullable150 = MsgPack.Serialization.UnpackHelpers.UnpackNullableBooleanValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Boolean TrueField");
                                    if (nullable150.HasValue) {
                                        result.TrueField = nullable150.Value;
                                    }
                                }
                                else {
                                    if ((key == "TinyUInt16Field")) {
                                        System.Nullable<ushort> nullable149 = default(System.Nullable<ushort>);
                                        nullable149 = MsgPack.Serialization.UnpackHelpers.UnpackNullableUInt16Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "UInt16 TinyUInt16Field");
                                        if (nullable149.HasValue) {
                                            result.TinyUInt16Field = nullable149.Value;
                                        }
                                    }
                                    else {
                                        if ((key == "TinyInt64Field")) {
                                            System.Nullable<long> nullable148 = default(System.Nullable<long>);
                                            nullable148 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt64Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Int64 TinyInt64Field");
                                            if (nullable148.HasValue) {
                                                result.TinyInt64Field = nullable148.Value;
                                            }
                                        }
                                        else {
                                            if ((key == "TinyInt32Field")) {
                                                System.Nullable<int> nullable147 = default(System.Nullable<int>);
                                                nullable147 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt32Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Int32 TinyInt32Field");
                                                if (nullable147.HasValue) {
                                                    result.TinyInt32Field = nullable147.Value;
                                                }
                                            }
                                            else {
                                                if ((key == "TinyByteField")) {
                                                    System.Nullable<byte> nullable146 = default(System.Nullable<byte>);
                                                    nullable146 = MsgPack.Serialization.UnpackHelpers.UnpackNullableByteValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Byte TinyByteField");
                                                    if (nullable146.HasValue) {
                                                        result.TinyByteField = nullable146.Value;
                                                    }
                                                }
                                                else {
                                                    if ((key == "TimeSpanField")) {
                                                        System.Nullable<System.TimeSpan> nullable145 = default(System.Nullable<System.TimeSpan>);
                                                        if ((unpacker.Read() == false)) {
                                                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                        }
                                                        if (((unpacker.IsArrayHeader == false) 
                                                                    && (unpacker.IsMapHeader == false))) {
                                                            nullable145 = this._serializer82.UnpackFrom(unpacker);
                                                        }
                                                        else {
                                                            MsgPack.Unpacker disposable117 = default(MsgPack.Unpacker);
                                                            disposable117 = unpacker.ReadSubtree();
                                                            try {
                                                                nullable145 = this._serializer82.UnpackFrom(disposable117);
                                                            }
                                                            finally {
                                                                if (((disposable117 == null) 
                                                                            == false)) {
                                                                    disposable117.Dispose();
                                                                }
                                                            }
                                                        }
                                                        if (nullable145.HasValue) {
                                                            result.TimeSpanField = nullable145.Value;
                                                        }
                                                    }
                                                    else {
                                                        if ((key == "StringKeyedCollection_ObjectField")) {
                                                            MsgPack.Serialization.StringKeyedCollection<object> nullable144 = default(MsgPack.Serialization.StringKeyedCollection<object>);
                                                            if ((unpacker.Read() == false)) {
                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                            }
                                                            if (((unpacker.IsArrayHeader == false) 
                                                                        && (unpacker.IsMapHeader == false))) {
                                                                nullable144 = this._serializer62.UnpackFrom(unpacker);
                                                            }
                                                            else {
                                                                MsgPack.Unpacker disposable116 = default(MsgPack.Unpacker);
                                                                disposable116 = unpacker.ReadSubtree();
                                                                try {
                                                                    nullable144 = this._serializer62.UnpackFrom(disposable116);
                                                                }
                                                                finally {
                                                                    if (((disposable116 == null) 
                                                                                == false)) {
                                                                        disposable116.Dispose();
                                                                    }
                                                                }
                                                            }
                                                            if (((nullable144 == null) 
                                                                        == false)) {
                                                                System.Collections.Generic.IEnumerator<object> enumerator68 = nullable144.GetEnumerator();
                                                                object current68;
                                                                try {
                                                                    for (
                                                                    ; enumerator68.MoveNext(); 
                                                                    ) {
                                                                        current68 = enumerator68.Current;
                                                                        result.StringKeyedCollection_ObjectField.Add(current68);
                                                                    }
                                                                }
                                                                finally {
                                                                    enumerator68.Dispose();
                                                                }
                                                            }
                                                        }
                                                        else {
                                                            if ((key == "StringKeyedCollection_MessagePackObjectField")) {
                                                                MsgPack.Serialization.StringKeyedCollection<MsgPack.MessagePackObject> nullable143 = default(MsgPack.Serialization.StringKeyedCollection<MsgPack.MessagePackObject>);
                                                                if ((unpacker.Read() == false)) {
                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                }
                                                                if (((unpacker.IsArrayHeader == false) 
                                                                            && (unpacker.IsMapHeader == false))) {
                                                                    nullable143 = this._serializer61.UnpackFrom(unpacker);
                                                                }
                                                                else {
                                                                    MsgPack.Unpacker disposable115 = default(MsgPack.Unpacker);
                                                                    disposable115 = unpacker.ReadSubtree();
                                                                    try {
                                                                        nullable143 = this._serializer61.UnpackFrom(disposable115);
                                                                    }
                                                                    finally {
                                                                        if (((disposable115 == null) 
                                                                                    == false)) {
                                                                            disposable115.Dispose();
                                                                        }
                                                                    }
                                                                }
                                                                if (((nullable143 == null) 
                                                                            == false)) {
                                                                    System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator67 = nullable143.GetEnumerator();
                                                                    MsgPack.MessagePackObject current67;
                                                                    try {
                                                                        for (
                                                                        ; enumerator67.MoveNext(); 
                                                                        ) {
                                                                            current67 = enumerator67.Current;
                                                                            result.StringKeyedCollection_MessagePackObjectField.Add(current67);
                                                                        }
                                                                    }
                                                                    finally {
                                                                        enumerator67.Dispose();
                                                                    }
                                                                }
                                                            }
                                                            else {
                                                                if ((key == "StringKeyedCollection_DateTimeField")) {
                                                                    MsgPack.Serialization.StringKeyedCollection<System.DateTime> nullable142 = default(MsgPack.Serialization.StringKeyedCollection<System.DateTime>);
                                                                    if ((unpacker.Read() == false)) {
                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                    }
                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                && (unpacker.IsMapHeader == false))) {
                                                                        nullable142 = this._serializer60.UnpackFrom(unpacker);
                                                                    }
                                                                    else {
                                                                        MsgPack.Unpacker disposable114 = default(MsgPack.Unpacker);
                                                                        disposable114 = unpacker.ReadSubtree();
                                                                        try {
                                                                            nullable142 = this._serializer60.UnpackFrom(disposable114);
                                                                        }
                                                                        finally {
                                                                            if (((disposable114 == null) 
                                                                                        == false)) {
                                                                                disposable114.Dispose();
                                                                            }
                                                                        }
                                                                    }
                                                                    if (((nullable142 == null) 
                                                                                == false)) {
                                                                        System.Collections.Generic.IEnumerator<System.DateTime> enumerator66 = nullable142.GetEnumerator();
                                                                        System.DateTime current66;
                                                                        try {
                                                                            for (
                                                                            ; enumerator66.MoveNext(); 
                                                                            ) {
                                                                                current66 = enumerator66.Current;
                                                                                result.StringKeyedCollection_DateTimeField.Add(current66);
                                                                            }
                                                                        }
                                                                        finally {
                                                                            enumerator66.Dispose();
                                                                        }
                                                                    }
                                                                }
                                                                else {
                                                                    if ((key == "StringField")) {
                                                                        string nullable141 = default(string);
                                                                        nullable141 = MsgPack.Serialization.UnpackHelpers.UnpackStringValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "System.String StringField");
                                                                        if (((nullable141 == null) 
                                                                                    == false)) {
                                                                            result.StringField = nullable141;
                                                                        }
                                                                    }
                                                                    else {
                                                                        if ((key == "ObservableCollectionObjectField")) {
                                                                            System.Collections.ObjectModel.ObservableCollection<object> nullable140 = default(System.Collections.ObjectModel.ObservableCollection<object>);
                                                                            if ((unpacker.Read() == false)) {
                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                            }
                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                nullable140 = this._serializer59.UnpackFrom(unpacker);
                                                                            }
                                                                            else {
                                                                                MsgPack.Unpacker disposable113 = default(MsgPack.Unpacker);
                                                                                disposable113 = unpacker.ReadSubtree();
                                                                                try {
                                                                                    nullable140 = this._serializer59.UnpackFrom(disposable113);
                                                                                }
                                                                                finally {
                                                                                    if (((disposable113 == null) 
                                                                                                == false)) {
                                                                                        disposable113.Dispose();
                                                                                    }
                                                                                }
                                                                            }
                                                                            if (((nullable140 == null) 
                                                                                        == false)) {
                                                                                System.Collections.Generic.IEnumerator<object> enumerator65 = nullable140.GetEnumerator();
                                                                                object current65;
                                                                                try {
                                                                                    for (
                                                                                    ; enumerator65.MoveNext(); 
                                                                                    ) {
                                                                                        current65 = enumerator65.Current;
                                                                                        result.ObservableCollectionObjectField.Add(current65);
                                                                                    }
                                                                                }
                                                                                finally {
                                                                                    enumerator65.Dispose();
                                                                                }
                                                                            }
                                                                        }
                                                                        else {
                                                                            if ((key == "ObservableCollectionDateTimeField")) {
                                                                                System.Collections.ObjectModel.ObservableCollection<System.DateTime> nullable139 = default(System.Collections.ObjectModel.ObservableCollection<System.DateTime>);
                                                                                if ((unpacker.Read() == false)) {
                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                }
                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                    nullable139 = this._serializer58.UnpackFrom(unpacker);
                                                                                }
                                                                                else {
                                                                                    MsgPack.Unpacker disposable112 = default(MsgPack.Unpacker);
                                                                                    disposable112 = unpacker.ReadSubtree();
                                                                                    try {
                                                                                        nullable139 = this._serializer58.UnpackFrom(disposable112);
                                                                                    }
                                                                                    finally {
                                                                                        if (((disposable112 == null) 
                                                                                                    == false)) {
                                                                                            disposable112.Dispose();
                                                                                        }
                                                                                    }
                                                                                }
                                                                                if (((nullable139 == null) 
                                                                                            == false)) {
                                                                                    System.Collections.Generic.IEnumerator<System.DateTime> enumerator64 = nullable139.GetEnumerator();
                                                                                    System.DateTime current64;
                                                                                    try {
                                                                                        for (
                                                                                        ; enumerator64.MoveNext(); 
                                                                                        ) {
                                                                                            current64 = enumerator64.Current;
                                                                                            result.ObservableCollectionDateTimeField.Add(current64);
                                                                                        }
                                                                                    }
                                                                                    finally {
                                                                                        enumerator64.Dispose();
                                                                                    }
                                                                                }
                                                                            }
                                                                            else {
                                                                                if ((key == "ObservableCollection_MessagePackObjectField")) {
                                                                                    System.Collections.ObjectModel.ObservableCollection<MsgPack.MessagePackObject> nullable138 = default(System.Collections.ObjectModel.ObservableCollection<MsgPack.MessagePackObject>);
                                                                                    if ((unpacker.Read() == false)) {
                                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                    }
                                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                                && (unpacker.IsMapHeader == false))) {
                                                                                        nullable138 = this._serializer57.UnpackFrom(unpacker);
                                                                                    }
                                                                                    else {
                                                                                        MsgPack.Unpacker disposable111 = default(MsgPack.Unpacker);
                                                                                        disposable111 = unpacker.ReadSubtree();
                                                                                        try {
                                                                                            nullable138 = this._serializer57.UnpackFrom(disposable111);
                                                                                        }
                                                                                        finally {
                                                                                            if (((disposable111 == null) 
                                                                                                        == false)) {
                                                                                                disposable111.Dispose();
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    if (((nullable138 == null) 
                                                                                                == false)) {
                                                                                        System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator63 = nullable138.GetEnumerator();
                                                                                        MsgPack.MessagePackObject current63;
                                                                                        try {
                                                                                            for (
                                                                                            ; enumerator63.MoveNext(); 
                                                                                            ) {
                                                                                                current63 = enumerator63.Current;
                                                                                                result.ObservableCollection_MessagePackObjectField.Add(current63);
                                                                                            }
                                                                                        }
                                                                                        finally {
                                                                                            enumerator63.Dispose();
                                                                                        }
                                                                                    }
                                                                                }
                                                                                else {
                                                                                    if ((key == "ObjectField")) {
                                                                                        object nullable137 = default(object);
                                                                                        if ((unpacker.Read() == false)) {
                                                                                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                        }
                                                                                        if (((unpacker.IsArrayHeader == false) 
                                                                                                    && (unpacker.IsMapHeader == false))) {
                                                                                            nullable137 = this._serializer55.UnpackFrom(unpacker);
                                                                                        }
                                                                                        else {
                                                                                            MsgPack.Unpacker disposable110 = default(MsgPack.Unpacker);
                                                                                            disposable110 = unpacker.ReadSubtree();
                                                                                            try {
                                                                                                nullable137 = this._serializer55.UnpackFrom(disposable110);
                                                                                            }
                                                                                            finally {
                                                                                                if (((disposable110 == null) 
                                                                                                            == false)) {
                                                                                                    disposable110.Dispose();
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        if (((nullable137 == null) 
                                                                                                    == false)) {
                                                                                            result.ObjectField = nullable137;
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        if ((key == "ObjectArrayField")) {
                                                                                            object[] nullable136 = default(object[]);
                                                                                            if ((unpacker.Read() == false)) {
                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                            }
                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                nullable136 = this._serializer56.UnpackFrom(unpacker);
                                                                                            }
                                                                                            else {
                                                                                                MsgPack.Unpacker disposable109 = default(MsgPack.Unpacker);
                                                                                                disposable109 = unpacker.ReadSubtree();
                                                                                                try {
                                                                                                    nullable136 = this._serializer56.UnpackFrom(disposable109);
                                                                                                }
                                                                                                finally {
                                                                                                    if (((disposable109 == null) 
                                                                                                                == false)) {
                                                                                                        disposable109.Dispose();
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            if (((nullable136 == null) 
                                                                                                        == false)) {
                                                                                                result.ObjectArrayField = nullable136;
                                                                                            }
                                                                                        }
                                                                                        else {
                                                                                            if ((key == "NullField")) {
                                                                                                object nullable135 = default(object);
                                                                                                if ((unpacker.Read() == false)) {
                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                }
                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                    nullable135 = this._serializer55.UnpackFrom(unpacker);
                                                                                                }
                                                                                                else {
                                                                                                    MsgPack.Unpacker disposable108 = default(MsgPack.Unpacker);
                                                                                                    disposable108 = unpacker.ReadSubtree();
                                                                                                    try {
                                                                                                        nullable135 = this._serializer55.UnpackFrom(disposable108);
                                                                                                    }
                                                                                                    finally {
                                                                                                        if (((disposable108 == null) 
                                                                                                                    == false)) {
                                                                                                            disposable108.Dispose();
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                                if (((nullable135 == null) 
                                                                                                            == false)) {
                                                                                                    result.NullField = nullable135;
                                                                                                }
                                                                                            }
                                                                                            else {
                                                                                                if ((key == "MinInt64Field")) {
                                                                                                    System.Nullable<long> nullable134 = default(System.Nullable<long>);
                                                                                                    nullable134 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt64Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Int64 MinInt64Field");
                                                                                                    if (nullable134.HasValue) {
                                                                                                        result.MinInt64Field = nullable134.Value;
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    if ((key == "MinInt32Field")) {
                                                                                                        System.Nullable<int> nullable133 = default(System.Nullable<int>);
                                                                                                        nullable133 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt32Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Int32 MinInt32Field");
                                                                                                        if (nullable133.HasValue) {
                                                                                                            result.MinInt32Field = nullable133.Value;
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        if ((key == "MessagePackObjectArray_Field")) {
                                                                                                            MsgPack.MessagePackObject[] nullable132 = default(MsgPack.MessagePackObject[]);
                                                                                                            if ((unpacker.Read() == false)) {
                                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                            }
                                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                                nullable132 = this._serializer54.UnpackFrom(unpacker);
                                                                                                            }
                                                                                                            else {
                                                                                                                MsgPack.Unpacker disposable107 = default(MsgPack.Unpacker);
                                                                                                                disposable107 = unpacker.ReadSubtree();
                                                                                                                try {
                                                                                                                    nullable132 = this._serializer54.UnpackFrom(disposable107);
                                                                                                                }
                                                                                                                finally {
                                                                                                                    if (((disposable107 == null) 
                                                                                                                                == false)) {
                                                                                                                        disposable107.Dispose();
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                            if (((nullable132 == null) 
                                                                                                                        == false)) {
                                                                                                                result.MessagePackObjectArray_Field = nullable132;
                                                                                                            }
                                                                                                        }
                                                                                                        else {
                                                                                                            if ((key == "MessagePackObject_Field")) {
                                                                                                                MsgPack.MessagePackObject nullable131 = default(MsgPack.MessagePackObject);
                                                                                                                if ((unpacker.Read() == false)) {
                                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                }
                                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                                    nullable131 = unpacker.LastReadData;
                                                                                                                }
                                                                                                                else {
                                                                                                                    nullable131 = unpacker.UnpackSubtreeData();
                                                                                                                }
                                                                                                                if ((nullable131.IsNil == false)) {
                                                                                                                    result.MessagePackObject_Field = nullable131;
                                                                                                                }
                                                                                                            }
                                                                                                            else {
                                                                                                                if ((key == "MaxUInt16Field")) {
                                                                                                                    System.Nullable<ushort> nullable130 = default(System.Nullable<ushort>);
                                                                                                                    nullable130 = MsgPack.Serialization.UnpackHelpers.UnpackNullableUInt16Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "UInt16 MaxUInt16Field");
                                                                                                                    if (nullable130.HasValue) {
                                                                                                                        result.MaxUInt16Field = nullable130.Value;
                                                                                                                    }
                                                                                                                }
                                                                                                                else {
                                                                                                                    if ((key == "MaxInt64Field")) {
                                                                                                                        System.Nullable<long> nullable129 = default(System.Nullable<long>);
                                                                                                                        nullable129 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt64Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Int64 MaxInt64Field");
                                                                                                                        if (nullable129.HasValue) {
                                                                                                                            result.MaxInt64Field = nullable129.Value;
                                                                                                                        }
                                                                                                                    }
                                                                                                                    else {
                                                                                                                        if ((key == "MaxInt32Field")) {
                                                                                                                            System.Nullable<int> nullable128 = default(System.Nullable<int>);
                                                                                                                            nullable128 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt32Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Int32 MaxInt32Field");
                                                                                                                            if (nullable128.HasValue) {
                                                                                                                                result.MaxInt32Field = nullable128.Value;
                                                                                                                            }
                                                                                                                        }
                                                                                                                        else {
                                                                                                                            if ((key == "MaxByteField")) {
                                                                                                                                System.Nullable<byte> nullable127 = default(System.Nullable<byte>);
                                                                                                                                nullable127 = MsgPack.Serialization.UnpackHelpers.UnpackNullableByteValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Byte MaxByteField");
                                                                                                                                if (nullable127.HasValue) {
                                                                                                                                    result.MaxByteField = nullable127.Value;
                                                                                                                                }
                                                                                                                            }
                                                                                                                            else {
                                                                                                                                if ((key == "ListObjectField")) {
                                                                                                                                    System.Collections.Generic.List<object> nullable126 = default(System.Collections.Generic.List<object>);
                                                                                                                                    if ((unpacker.Read() == false)) {
                                                                                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                    }
                                                                                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                && (unpacker.IsMapHeader == false))) {
                                                                                                                                        nullable126 = this._serializer49.UnpackFrom(unpacker);
                                                                                                                                    }
                                                                                                                                    else {
                                                                                                                                        MsgPack.Unpacker disposable106 = default(MsgPack.Unpacker);
                                                                                                                                        disposable106 = unpacker.ReadSubtree();
                                                                                                                                        try {
                                                                                                                                            nullable126 = this._serializer49.UnpackFrom(disposable106);
                                                                                                                                        }
                                                                                                                                        finally {
                                                                                                                                            if (((disposable106 == null) 
                                                                                                                                                        == false)) {
                                                                                                                                                disposable106.Dispose();
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                    if (((nullable126 == null) 
                                                                                                                                                == false)) {
                                                                                                                                        System.Collections.Generic.List<object>.Enumerator enumerator62 = nullable126.GetEnumerator();
                                                                                                                                        object current62;
                                                                                                                                        try {
                                                                                                                                            for (
                                                                                                                                            ; enumerator62.MoveNext(); 
                                                                                                                                            ) {
                                                                                                                                                current62 = enumerator62.Current;
                                                                                                                                                result.ListObjectField.Add(current62);
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        finally {
                                                                                                                                            enumerator62.Dispose();
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                else {
                                                                                                                                    if ((key == "ListDateTimeField")) {
                                                                                                                                        System.Collections.Generic.List<System.DateTime> nullable125 = default(System.Collections.Generic.List<System.DateTime>);
                                                                                                                                        if ((unpacker.Read() == false)) {
                                                                                                                                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                        }
                                                                                                                                        if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                    && (unpacker.IsMapHeader == false))) {
                                                                                                                                            nullable125 = this._serializer48.UnpackFrom(unpacker);
                                                                                                                                        }
                                                                                                                                        else {
                                                                                                                                            MsgPack.Unpacker disposable105 = default(MsgPack.Unpacker);
                                                                                                                                            disposable105 = unpacker.ReadSubtree();
                                                                                                                                            try {
                                                                                                                                                nullable125 = this._serializer48.UnpackFrom(disposable105);
                                                                                                                                            }
                                                                                                                                            finally {
                                                                                                                                                if (((disposable105 == null) 
                                                                                                                                                            == false)) {
                                                                                                                                                    disposable105.Dispose();
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (((nullable125 == null) 
                                                                                                                                                    == false)) {
                                                                                                                                            System.Collections.Generic.List<System.DateTime>.Enumerator enumerator61 = nullable125.GetEnumerator();
                                                                                                                                            System.DateTime current61;
                                                                                                                                            try {
                                                                                                                                                for (
                                                                                                                                                ; enumerator61.MoveNext(); 
                                                                                                                                                ) {
                                                                                                                                                    current61 = enumerator61.Current;
                                                                                                                                                    result.ListDateTimeField.Add(current61);
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                            finally {
                                                                                                                                                enumerator61.Dispose();
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                    else {
                                                                                                                                        if ((key == "List_MessagePackObjectField")) {
                                                                                                                                            System.Collections.Generic.List<MsgPack.MessagePackObject> nullable124 = default(System.Collections.Generic.List<MsgPack.MessagePackObject>);
                                                                                                                                            if ((unpacker.Read() == false)) {
                                                                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                            }
                                                                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                                                                nullable124 = this._serializer47.UnpackFrom(unpacker);
                                                                                                                                            }
                                                                                                                                            else {
                                                                                                                                                MsgPack.Unpacker disposable104 = default(MsgPack.Unpacker);
                                                                                                                                                disposable104 = unpacker.ReadSubtree();
                                                                                                                                                try {
                                                                                                                                                    nullable124 = this._serializer47.UnpackFrom(disposable104);
                                                                                                                                                }
                                                                                                                                                finally {
                                                                                                                                                    if (((disposable104 == null) 
                                                                                                                                                                == false)) {
                                                                                                                                                        disposable104.Dispose();
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                            if (((nullable124 == null) 
                                                                                                                                                        == false)) {
                                                                                                                                                System.Collections.Generic.List<MsgPack.MessagePackObject>.Enumerator enumerator60 = nullable124.GetEnumerator();
                                                                                                                                                MsgPack.MessagePackObject current60;
                                                                                                                                                try {
                                                                                                                                                    for (
                                                                                                                                                    ; enumerator60.MoveNext(); 
                                                                                                                                                    ) {
                                                                                                                                                        current60 = enumerator60.Current;
                                                                                                                                                        result.List_MessagePackObjectField.Add(current60);
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                finally {
                                                                                                                                                    enumerator60.Dispose();
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        else {
                                                                                                                                            if ((key == "KeyValuePairStringDateTimeOffsetField")) {
                                                                                                                                                System.Nullable<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>> nullable123 = default(System.Nullable<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>>);
                                                                                                                                                if ((unpacker.Read() == false)) {
                                                                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                }
                                                                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                                                                    nullable123 = this._serializer81.UnpackFrom(unpacker);
                                                                                                                                                }
                                                                                                                                                else {
                                                                                                                                                    MsgPack.Unpacker disposable103 = default(MsgPack.Unpacker);
                                                                                                                                                    disposable103 = unpacker.ReadSubtree();
                                                                                                                                                    try {
                                                                                                                                                        nullable123 = this._serializer81.UnpackFrom(disposable103);
                                                                                                                                                    }
                                                                                                                                                    finally {
                                                                                                                                                        if (((disposable103 == null) 
                                                                                                                                                                    == false)) {
                                                                                                                                                            disposable103.Dispose();
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (nullable123.HasValue) {
                                                                                                                                                    result.KeyValuePairStringDateTimeOffsetField = nullable123.Value;
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                            else {
                                                                                                                                                if ((key == "KeyValuePairStringComplexField")) {
                                                                                                                                                    System.Nullable<System.Collections.Generic.KeyValuePair<string, System.Numerics.Complex>> nullable122 = default(System.Nullable<System.Collections.Generic.KeyValuePair<string, System.Numerics.Complex>>);
                                                                                                                                                    if ((unpacker.Read() == false)) {
                                                                                                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                    }
                                                                                                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                && (unpacker.IsMapHeader == false))) {
                                                                                                                                                        nullable122 = this._serializer80.UnpackFrom(unpacker);
                                                                                                                                                    }
                                                                                                                                                    else {
                                                                                                                                                        MsgPack.Unpacker disposable102 = default(MsgPack.Unpacker);
                                                                                                                                                        disposable102 = unpacker.ReadSubtree();
                                                                                                                                                        try {
                                                                                                                                                            nullable122 = this._serializer80.UnpackFrom(disposable102);
                                                                                                                                                        }
                                                                                                                                                        finally {
                                                                                                                                                            if (((disposable102 == null) 
                                                                                                                                                                        == false)) {
                                                                                                                                                                disposable102.Dispose();
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                    if (nullable122.HasValue) {
                                                                                                                                                        result.KeyValuePairStringComplexField = nullable122.Value;
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                else {
                                                                                                                                                    if ((key == "ISetObjectField")) {
                                                                                                                                                        System.Collections.Generic.ISet<object> nullable121 = default(System.Collections.Generic.ISet<object>);
                                                                                                                                                        if ((unpacker.Read() == false)) {
                                                                                                                                                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                        }
                                                                                                                                                        if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                    && (unpacker.IsMapHeader == false))) {
                                                                                                                                                            nullable121 = this._serializer44.UnpackFrom(unpacker);
                                                                                                                                                        }
                                                                                                                                                        else {
                                                                                                                                                            MsgPack.Unpacker disposable101 = default(MsgPack.Unpacker);
                                                                                                                                                            disposable101 = unpacker.ReadSubtree();
                                                                                                                                                            try {
                                                                                                                                                                nullable121 = this._serializer44.UnpackFrom(disposable101);
                                                                                                                                                            }
                                                                                                                                                            finally {
                                                                                                                                                                if (((disposable101 == null) 
                                                                                                                                                                            == false)) {
                                                                                                                                                                    disposable101.Dispose();
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (((nullable121 == null) 
                                                                                                                                                                    == false)) {
                                                                                                                                                            System.Collections.Generic.IEnumerator<object> enumerator59 = nullable121.GetEnumerator();
                                                                                                                                                            object current59;
                                                                                                                                                            try {
                                                                                                                                                                for (
                                                                                                                                                                ; enumerator59.MoveNext(); 
                                                                                                                                                                ) {
                                                                                                                                                                    current59 = enumerator59.Current;
                                                                                                                                                                    result.ISetObjectField.Add(current59);
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                            finally {
                                                                                                                                                                enumerator59.Dispose();
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                    else {
                                                                                                                                                        if ((key == "ISetDateTimeField")) {
                                                                                                                                                            System.Collections.Generic.ISet<System.DateTime> nullable120 = default(System.Collections.Generic.ISet<System.DateTime>);
                                                                                                                                                            if ((unpacker.Read() == false)) {
                                                                                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                            }
                                                                                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                nullable120 = this._serializer43.UnpackFrom(unpacker);
                                                                                                                                                            }
                                                                                                                                                            else {
                                                                                                                                                                MsgPack.Unpacker disposable100 = default(MsgPack.Unpacker);
                                                                                                                                                                disposable100 = unpacker.ReadSubtree();
                                                                                                                                                                try {
                                                                                                                                                                    nullable120 = this._serializer43.UnpackFrom(disposable100);
                                                                                                                                                                }
                                                                                                                                                                finally {
                                                                                                                                                                    if (((disposable100 == null) 
                                                                                                                                                                                == false)) {
                                                                                                                                                                        disposable100.Dispose();
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                            if (((nullable120 == null) 
                                                                                                                                                                        == false)) {
                                                                                                                                                                System.Collections.Generic.IEnumerator<System.DateTime> enumerator58 = nullable120.GetEnumerator();
                                                                                                                                                                System.DateTime current58;
                                                                                                                                                                try {
                                                                                                                                                                    for (
                                                                                                                                                                    ; enumerator58.MoveNext(); 
                                                                                                                                                                    ) {
                                                                                                                                                                        current58 = enumerator58.Current;
                                                                                                                                                                        result.ISetDateTimeField.Add(current58);
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                finally {
                                                                                                                                                                    enumerator58.Dispose();
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        else {
                                                                                                                                                            if ((key == "ISet_MessagePackObjectField")) {
                                                                                                                                                                System.Collections.Generic.ISet<MsgPack.MessagePackObject> nullable119 = default(System.Collections.Generic.ISet<MsgPack.MessagePackObject>);
                                                                                                                                                                if ((unpacker.Read() == false)) {
                                                                                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                }
                                                                                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                    nullable119 = this._serializer42.UnpackFrom(unpacker);
                                                                                                                                                                }
                                                                                                                                                                else {
                                                                                                                                                                    MsgPack.Unpacker disposable99 = default(MsgPack.Unpacker);
                                                                                                                                                                    disposable99 = unpacker.ReadSubtree();
                                                                                                                                                                    try {
                                                                                                                                                                        nullable119 = this._serializer42.UnpackFrom(disposable99);
                                                                                                                                                                    }
                                                                                                                                                                    finally {
                                                                                                                                                                        if (((disposable99 == null) 
                                                                                                                                                                                    == false)) {
                                                                                                                                                                            disposable99.Dispose();
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (((nullable119 == null) 
                                                                                                                                                                            == false)) {
                                                                                                                                                                    System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator57 = nullable119.GetEnumerator();
                                                                                                                                                                    MsgPack.MessagePackObject current57;
                                                                                                                                                                    try {
                                                                                                                                                                        for (
                                                                                                                                                                        ; enumerator57.MoveNext(); 
                                                                                                                                                                        ) {
                                                                                                                                                                            current57 = enumerator57.Current;
                                                                                                                                                                            result.ISet_MessagePackObjectField.Add(current57);
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                    finally {
                                                                                                                                                                        enumerator57.Dispose();
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                            else {
                                                                                                                                                                if ((key == "InvariantCultureField")) {
                                                                                                                                                                    System.Globalization.CultureInfo nullable118 = default(System.Globalization.CultureInfo);
                                                                                                                                                                    if ((unpacker.Read() == false)) {
                                                                                                                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                    }
                                                                                                                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                        nullable118 = this._serializer17.UnpackFrom(unpacker);
                                                                                                                                                                    }
                                                                                                                                                                    else {
                                                                                                                                                                        MsgPack.Unpacker disposable98 = default(MsgPack.Unpacker);
                                                                                                                                                                        disposable98 = unpacker.ReadSubtree();
                                                                                                                                                                        try {
                                                                                                                                                                            nullable118 = this._serializer17.UnpackFrom(disposable98);
                                                                                                                                                                        }
                                                                                                                                                                        finally {
                                                                                                                                                                            if (((disposable98 == null) 
                                                                                                                                                                                        == false)) {
                                                                                                                                                                                disposable98.Dispose();
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                    if (((nullable118 == null) 
                                                                                                                                                                                == false)) {
                                                                                                                                                                        result.InvariantCultureField = nullable118;
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                else {
                                                                                                                                                                    if ((key == "Image_Field")) {
                                                                                                                                                                        MsgPack.Image nullable117 = default(MsgPack.Image);
                                                                                                                                                                        if ((unpacker.Read() == false)) {
                                                                                                                                                                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                        }
                                                                                                                                                                        if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                    && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                            nullable117 = this._serializer41.UnpackFrom(unpacker);
                                                                                                                                                                        }
                                                                                                                                                                        else {
                                                                                                                                                                            MsgPack.Unpacker disposable97 = default(MsgPack.Unpacker);
                                                                                                                                                                            disposable97 = unpacker.ReadSubtree();
                                                                                                                                                                            try {
                                                                                                                                                                                nullable117 = this._serializer41.UnpackFrom(disposable97);
                                                                                                                                                                            }
                                                                                                                                                                            finally {
                                                                                                                                                                                if (((disposable97 == null) 
                                                                                                                                                                                            == false)) {
                                                                                                                                                                                    disposable97.Dispose();
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                        if (((nullable117 == null) 
                                                                                                                                                                                    == false)) {
                                                                                                                                                                            result.Image_Field = nullable117;
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                    else {
                                                                                                                                                                        if ((key == "IListObjectField")) {
                                                                                                                                                                            System.Collections.Generic.IList<object> nullable116 = default(System.Collections.Generic.IList<object>);
                                                                                                                                                                            if ((unpacker.Read() == false)) {
                                                                                                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                            }
                                                                                                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                nullable116 = this._serializer40.UnpackFrom(unpacker);
                                                                                                                                                                            }
                                                                                                                                                                            else {
                                                                                                                                                                                MsgPack.Unpacker disposable96 = default(MsgPack.Unpacker);
                                                                                                                                                                                disposable96 = unpacker.ReadSubtree();
                                                                                                                                                                                try {
                                                                                                                                                                                    nullable116 = this._serializer40.UnpackFrom(disposable96);
                                                                                                                                                                                }
                                                                                                                                                                                finally {
                                                                                                                                                                                    if (((disposable96 == null) 
                                                                                                                                                                                                == false)) {
                                                                                                                                                                                        disposable96.Dispose();
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                            if (((nullable116 == null) 
                                                                                                                                                                                        == false)) {
                                                                                                                                                                                System.Collections.Generic.IEnumerator<object> enumerator56 = nullable116.GetEnumerator();
                                                                                                                                                                                object current56;
                                                                                                                                                                                try {
                                                                                                                                                                                    for (
                                                                                                                                                                                    ; enumerator56.MoveNext(); 
                                                                                                                                                                                    ) {
                                                                                                                                                                                        current56 = enumerator56.Current;
                                                                                                                                                                                        result.IListObjectField.Add(current56);
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                                finally {
                                                                                                                                                                                    enumerator56.Dispose();
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                        else {
                                                                                                                                                                            if ((key == "IListDateTimeField")) {
                                                                                                                                                                                System.Collections.Generic.IList<System.DateTime> nullable115 = default(System.Collections.Generic.IList<System.DateTime>);
                                                                                                                                                                                if ((unpacker.Read() == false)) {
                                                                                                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                }
                                                                                                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                    nullable115 = this._serializer39.UnpackFrom(unpacker);
                                                                                                                                                                                }
                                                                                                                                                                                else {
                                                                                                                                                                                    MsgPack.Unpacker disposable95 = default(MsgPack.Unpacker);
                                                                                                                                                                                    disposable95 = unpacker.ReadSubtree();
                                                                                                                                                                                    try {
                                                                                                                                                                                        nullable115 = this._serializer39.UnpackFrom(disposable95);
                                                                                                                                                                                    }
                                                                                                                                                                                    finally {
                                                                                                                                                                                        if (((disposable95 == null) 
                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                            disposable95.Dispose();
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                                if (((nullable115 == null) 
                                                                                                                                                                                            == false)) {
                                                                                                                                                                                    System.Collections.Generic.IEnumerator<System.DateTime> enumerator55 = nullable115.GetEnumerator();
                                                                                                                                                                                    System.DateTime current55;
                                                                                                                                                                                    try {
                                                                                                                                                                                        for (
                                                                                                                                                                                        ; enumerator55.MoveNext(); 
                                                                                                                                                                                        ) {
                                                                                                                                                                                            current55 = enumerator55.Current;
                                                                                                                                                                                            result.IListDateTimeField.Add(current55);
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                    finally {
                                                                                                                                                                                        enumerator55.Dispose();
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                            else {
                                                                                                                                                                                if ((key == "IList_MessagePackObjectField")) {
                                                                                                                                                                                    System.Collections.Generic.IList<MsgPack.MessagePackObject> nullable114 = default(System.Collections.Generic.IList<MsgPack.MessagePackObject>);
                                                                                                                                                                                    if ((unpacker.Read() == false)) {
                                                                                                                                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                    }
                                                                                                                                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                        nullable114 = this._serializer38.UnpackFrom(unpacker);
                                                                                                                                                                                    }
                                                                                                                                                                                    else {
                                                                                                                                                                                        MsgPack.Unpacker disposable94 = default(MsgPack.Unpacker);
                                                                                                                                                                                        disposable94 = unpacker.ReadSubtree();
                                                                                                                                                                                        try {
                                                                                                                                                                                            nullable114 = this._serializer38.UnpackFrom(disposable94);
                                                                                                                                                                                        }
                                                                                                                                                                                        finally {
                                                                                                                                                                                            if (((disposable94 == null) 
                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                disposable94.Dispose();
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                    if (((nullable114 == null) 
                                                                                                                                                                                                == false)) {
                                                                                                                                                                                        System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator54 = nullable114.GetEnumerator();
                                                                                                                                                                                        MsgPack.MessagePackObject current54;
                                                                                                                                                                                        try {
                                                                                                                                                                                            for (
                                                                                                                                                                                            ; enumerator54.MoveNext(); 
                                                                                                                                                                                            ) {
                                                                                                                                                                                                current54 = enumerator54.Current;
                                                                                                                                                                                                result.IList_MessagePackObjectField.Add(current54);
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                        finally {
                                                                                                                                                                                            enumerator54.Dispose();
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                                else {
                                                                                                                                                                                    if ((key == "IDictionaryStringDateTimeField")) {
                                                                                                                                                                                        System.Collections.Generic.IDictionary<string, System.DateTime> nullable113 = default(System.Collections.Generic.IDictionary<string, System.DateTime>);
                                                                                                                                                                                        if ((unpacker.Read() == false)) {
                                                                                                                                                                                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                        }
                                                                                                                                                                                        if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                    && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                            nullable113 = this._serializer37.UnpackFrom(unpacker);
                                                                                                                                                                                        }
                                                                                                                                                                                        else {
                                                                                                                                                                                            MsgPack.Unpacker disposable93 = default(MsgPack.Unpacker);
                                                                                                                                                                                            disposable93 = unpacker.ReadSubtree();
                                                                                                                                                                                            try {
                                                                                                                                                                                                nullable113 = this._serializer37.UnpackFrom(disposable93);
                                                                                                                                                                                            }
                                                                                                                                                                                            finally {
                                                                                                                                                                                                if (((disposable93 == null) 
                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                    disposable93.Dispose();
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                        if (((nullable113 == null) 
                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                            System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, System.DateTime>> enumerator53 = nullable113.GetEnumerator();
                                                                                                                                                                                            System.Collections.Generic.KeyValuePair<string, System.DateTime> current53;
                                                                                                                                                                                            try {
                                                                                                                                                                                                for (
                                                                                                                                                                                                ; enumerator53.MoveNext(); 
                                                                                                                                                                                                ) {
                                                                                                                                                                                                    current53 = enumerator53.Current;
                                                                                                                                                                                                    result.IDictionaryStringDateTimeField.Add(current53.Key, current53.Value);
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                            finally {
                                                                                                                                                                                                enumerator53.Dispose();
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                    else {
                                                                                                                                                                                        if ((key == "IDictionaryObjectObjectField")) {
                                                                                                                                                                                            System.Collections.Generic.IDictionary<object, object> nullable112 = default(System.Collections.Generic.IDictionary<object, object>);
                                                                                                                                                                                            if ((unpacker.Read() == false)) {
                                                                                                                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                            }
                                                                                                                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                nullable112 = this._serializer36.UnpackFrom(unpacker);
                                                                                                                                                                                            }
                                                                                                                                                                                            else {
                                                                                                                                                                                                MsgPack.Unpacker disposable92 = default(MsgPack.Unpacker);
                                                                                                                                                                                                disposable92 = unpacker.ReadSubtree();
                                                                                                                                                                                                try {
                                                                                                                                                                                                    nullable112 = this._serializer36.UnpackFrom(disposable92);
                                                                                                                                                                                                }
                                                                                                                                                                                                finally {
                                                                                                                                                                                                    if (((disposable92 == null) 
                                                                                                                                                                                                                == false)) {
                                                                                                                                                                                                        disposable92.Dispose();
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                            if (((nullable112 == null) 
                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<object, object>> enumerator52 = nullable112.GetEnumerator();
                                                                                                                                                                                                System.Collections.Generic.KeyValuePair<object, object> current52;
                                                                                                                                                                                                try {
                                                                                                                                                                                                    for (
                                                                                                                                                                                                    ; enumerator52.MoveNext(); 
                                                                                                                                                                                                    ) {
                                                                                                                                                                                                        current52 = enumerator52.Current;
                                                                                                                                                                                                        result.IDictionaryObjectObjectField.Add(current52.Key, current52.Value);
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                                finally {
                                                                                                                                                                                                    enumerator52.Dispose();
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                        else {
                                                                                                                                                                                            if ((key == "IDictionary_MessagePackObject_MessagePackObjectField")) {
                                                                                                                                                                                                System.Collections.Generic.IDictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject> nullable111 = default(System.Collections.Generic.IDictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>);
                                                                                                                                                                                                if ((unpacker.Read() == false)) {
                                                                                                                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                }
                                                                                                                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                    nullable111 = this._serializer35.UnpackFrom(unpacker);
                                                                                                                                                                                                }
                                                                                                                                                                                                else {
                                                                                                                                                                                                    MsgPack.Unpacker disposable91 = default(MsgPack.Unpacker);
                                                                                                                                                                                                    disposable91 = unpacker.ReadSubtree();
                                                                                                                                                                                                    try {
                                                                                                                                                                                                        nullable111 = this._serializer35.UnpackFrom(disposable91);
                                                                                                                                                                                                    }
                                                                                                                                                                                                    finally {
                                                                                                                                                                                                        if (((disposable91 == null) 
                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                            disposable91.Dispose();
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                                if (((nullable111 == null) 
                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                    System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<MsgPack.MessagePackObject, MsgPack.MessagePackObject>> enumerator51 = nullable111.GetEnumerator();
                                                                                                                                                                                                    System.Collections.Generic.KeyValuePair<MsgPack.MessagePackObject, MsgPack.MessagePackObject> current51;
                                                                                                                                                                                                    try {
                                                                                                                                                                                                        for (
                                                                                                                                                                                                        ; enumerator51.MoveNext(); 
                                                                                                                                                                                                        ) {
                                                                                                                                                                                                            current51 = enumerator51.Current;
                                                                                                                                                                                                            result.IDictionary_MessagePackObject_MessagePackObjectField.Add(current51.Key, current51.Value);
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    finally {
                                                                                                                                                                                                        enumerator51.Dispose();
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                            else {
                                                                                                                                                                                                if ((key == "ICollectionObjectField")) {
                                                                                                                                                                                                    System.Collections.Generic.ICollection<object> nullable110 = default(System.Collections.Generic.ICollection<object>);
                                                                                                                                                                                                    if ((unpacker.Read() == false)) {
                                                                                                                                                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                    }
                                                                                                                                                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                        nullable110 = this._serializer34.UnpackFrom(unpacker);
                                                                                                                                                                                                    }
                                                                                                                                                                                                    else {
                                                                                                                                                                                                        MsgPack.Unpacker disposable90 = default(MsgPack.Unpacker);
                                                                                                                                                                                                        disposable90 = unpacker.ReadSubtree();
                                                                                                                                                                                                        try {
                                                                                                                                                                                                            nullable110 = this._serializer34.UnpackFrom(disposable90);
                                                                                                                                                                                                        }
                                                                                                                                                                                                        finally {
                                                                                                                                                                                                            if (((disposable90 == null) 
                                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                                disposable90.Dispose();
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    if (((nullable110 == null) 
                                                                                                                                                                                                                == false)) {
                                                                                                                                                                                                        System.Collections.Generic.IEnumerator<object> enumerator50 = nullable110.GetEnumerator();
                                                                                                                                                                                                        object current50;
                                                                                                                                                                                                        try {
                                                                                                                                                                                                            for (
                                                                                                                                                                                                            ; enumerator50.MoveNext(); 
                                                                                                                                                                                                            ) {
                                                                                                                                                                                                                current50 = enumerator50.Current;
                                                                                                                                                                                                                result.ICollectionObjectField.Add(current50);
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        finally {
                                                                                                                                                                                                            enumerator50.Dispose();
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                                else {
                                                                                                                                                                                                    if ((key == "ICollectionDateTimeField")) {
                                                                                                                                                                                                        System.Collections.Generic.ICollection<System.DateTime> nullable109 = default(System.Collections.Generic.ICollection<System.DateTime>);
                                                                                                                                                                                                        if ((unpacker.Read() == false)) {
                                                                                                                                                                                                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                        }
                                                                                                                                                                                                        if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                    && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                            nullable109 = this._serializer33.UnpackFrom(unpacker);
                                                                                                                                                                                                        }
                                                                                                                                                                                                        else {
                                                                                                                                                                                                            MsgPack.Unpacker disposable89 = default(MsgPack.Unpacker);
                                                                                                                                                                                                            disposable89 = unpacker.ReadSubtree();
                                                                                                                                                                                                            try {
                                                                                                                                                                                                                nullable109 = this._serializer33.UnpackFrom(disposable89);
                                                                                                                                                                                                            }
                                                                                                                                                                                                            finally {
                                                                                                                                                                                                                if (((disposable89 == null) 
                                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                                    disposable89.Dispose();
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        if (((nullable109 == null) 
                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                            System.Collections.Generic.IEnumerator<System.DateTime> enumerator49 = nullable109.GetEnumerator();
                                                                                                                                                                                                            System.DateTime current49;
                                                                                                                                                                                                            try {
                                                                                                                                                                                                                for (
                                                                                                                                                                                                                ; enumerator49.MoveNext(); 
                                                                                                                                                                                                                ) {
                                                                                                                                                                                                                    current49 = enumerator49.Current;
                                                                                                                                                                                                                    result.ICollectionDateTimeField.Add(current49);
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            finally {
                                                                                                                                                                                                                enumerator49.Dispose();
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    else {
                                                                                                                                                                                                        if ((key == "ICollection_MessagePackObjectField")) {
                                                                                                                                                                                                            System.Collections.Generic.ICollection<MsgPack.MessagePackObject> nullable108 = default(System.Collections.Generic.ICollection<MsgPack.MessagePackObject>);
                                                                                                                                                                                                            if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                            }
                                                                                                                                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                nullable108 = this._serializer32.UnpackFrom(unpacker);
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else {
                                                                                                                                                                                                                MsgPack.Unpacker disposable88 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                disposable88 = unpacker.ReadSubtree();
                                                                                                                                                                                                                try {
                                                                                                                                                                                                                    nullable108 = this._serializer32.UnpackFrom(disposable88);
                                                                                                                                                                                                                }
                                                                                                                                                                                                                finally {
                                                                                                                                                                                                                    if (((disposable88 == null) 
                                                                                                                                                                                                                                == false)) {
                                                                                                                                                                                                                        disposable88.Dispose();
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            if (((nullable108 == null) 
                                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                                System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator48 = nullable108.GetEnumerator();
                                                                                                                                                                                                                MsgPack.MessagePackObject current48;
                                                                                                                                                                                                                try {
                                                                                                                                                                                                                    for (
                                                                                                                                                                                                                    ; enumerator48.MoveNext(); 
                                                                                                                                                                                                                    ) {
                                                                                                                                                                                                                        current48 = enumerator48.Current;
                                                                                                                                                                                                                        result.ICollection_MessagePackObjectField.Add(current48);
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                                finally {
                                                                                                                                                                                                                    enumerator48.Dispose();
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        else {
                                                                                                                                                                                                            if ((key == "HashtableField")) {
                                                                                                                                                                                                                System.Collections.Hashtable nullable107 = default(System.Collections.Hashtable);
                                                                                                                                                                                                                if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                }
                                                                                                                                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                    nullable107 = this._serializer31.UnpackFrom(unpacker);
                                                                                                                                                                                                                }
                                                                                                                                                                                                                else {
                                                                                                                                                                                                                    MsgPack.Unpacker disposable87 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                    disposable87 = unpacker.ReadSubtree();
                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                        nullable107 = this._serializer31.UnpackFrom(disposable87);
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    finally {
                                                                                                                                                                                                                        if (((disposable87 == null) 
                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                            disposable87.Dispose();
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                                if (((nullable107 == null) 
                                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                                    System.Collections.IDictionaryEnumerator enumerator47 = nullable107.GetEnumerator();
                                                                                                                                                                                                                    System.Collections.DictionaryEntry current47;
                                                                                                                                                                                                                    for (
                                                                                                                                                                                                                    ; enumerator47.MoveNext(); 
                                                                                                                                                                                                                    ) {
                                                                                                                                                                                                                        current47 = enumerator47.Entry;
                                                                                                                                                                                                                        result.HashtableField.Add(current47.Key, current47.Value);
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else {
                                                                                                                                                                                                                if ((key == "HashSetObjectField")) {
                                                                                                                                                                                                                    System.Collections.Generic.HashSet<object> nullable106 = default(System.Collections.Generic.HashSet<object>);
                                                                                                                                                                                                                    if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                        nullable106 = this._serializer30.UnpackFrom(unpacker);
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                        MsgPack.Unpacker disposable86 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                        disposable86 = unpacker.ReadSubtree();
                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                            nullable106 = this._serializer30.UnpackFrom(disposable86);
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        finally {
                                                                                                                                                                                                                            if (((disposable86 == null) 
                                                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                                                disposable86.Dispose();
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    if (((nullable106 == null) 
                                                                                                                                                                                                                                == false)) {
                                                                                                                                                                                                                        System.Collections.Generic.HashSet<object>.Enumerator enumerator46 = nullable106.GetEnumerator();
                                                                                                                                                                                                                        object current46;
                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                            for (
                                                                                                                                                                                                                            ; enumerator46.MoveNext(); 
                                                                                                                                                                                                                            ) {
                                                                                                                                                                                                                                current46 = enumerator46.Current;
                                                                                                                                                                                                                                result.HashSetObjectField.Add(current46);
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        finally {
                                                                                                                                                                                                                            enumerator46.Dispose();
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                                else {
                                                                                                                                                                                                                    if ((key == "HashSetDateTimeField")) {
                                                                                                                                                                                                                        System.Collections.Generic.HashSet<System.DateTime> nullable105 = default(System.Collections.Generic.HashSet<System.DateTime>);
                                                                                                                                                                                                                        if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                    && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                            nullable105 = this._serializer29.UnpackFrom(unpacker);
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                            MsgPack.Unpacker disposable85 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                            disposable85 = unpacker.ReadSubtree();
                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                nullable105 = this._serializer29.UnpackFrom(disposable85);
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            finally {
                                                                                                                                                                                                                                if (((disposable85 == null) 
                                                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                                                    disposable85.Dispose();
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        if (((nullable105 == null) 
                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                            System.Collections.Generic.HashSet<System.DateTime>.Enumerator enumerator45 = nullable105.GetEnumerator();
                                                                                                                                                                                                                            System.DateTime current45;
                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                for (
                                                                                                                                                                                                                                ; enumerator45.MoveNext(); 
                                                                                                                                                                                                                                ) {
                                                                                                                                                                                                                                    current45 = enumerator45.Current;
                                                                                                                                                                                                                                    result.HashSetDateTimeField.Add(current45);
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            finally {
                                                                                                                                                                                                                                enumerator45.Dispose();
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                        if ((key == "HashSet_MessagePackObjectField")) {
                                                                                                                                                                                                                            System.Collections.Generic.HashSet<MsgPack.MessagePackObject> nullable104 = default(System.Collections.Generic.HashSet<MsgPack.MessagePackObject>);
                                                                                                                                                                                                                            if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                nullable104 = this._serializer28.UnpackFrom(unpacker);
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                MsgPack.Unpacker disposable84 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                disposable84 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                    nullable104 = this._serializer28.UnpackFrom(disposable84);
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                finally {
                                                                                                                                                                                                                                    if (((disposable84 == null) 
                                                                                                                                                                                                                                                == false)) {
                                                                                                                                                                                                                                        disposable84.Dispose();
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (((nullable104 == null) 
                                                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                                                System.Collections.Generic.HashSet<MsgPack.MessagePackObject>.Enumerator enumerator44 = nullable104.GetEnumerator();
                                                                                                                                                                                                                                MsgPack.MessagePackObject current44;
                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                    for (
                                                                                                                                                                                                                                    ; enumerator44.MoveNext(); 
                                                                                                                                                                                                                                    ) {
                                                                                                                                                                                                                                        current44 = enumerator44.Current;
                                                                                                                                                                                                                                        result.HashSet_MessagePackObjectField.Add(current44);
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                finally {
                                                                                                                                                                                                                                    enumerator44.Dispose();
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                            if ((key == "GuidField")) {
                                                                                                                                                                                                                                System.Nullable<System.Guid> nullable103 = default(System.Nullable<System.Guid>);
                                                                                                                                                                                                                                if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                    nullable103 = this._serializer79.UnpackFrom(unpacker);
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                    MsgPack.Unpacker disposable83 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                    disposable83 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                        nullable103 = this._serializer79.UnpackFrom(disposable83);
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    finally {
                                                                                                                                                                                                                                        if (((disposable83 == null) 
                                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                                            disposable83.Dispose();
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if (nullable103.HasValue) {
                                                                                                                                                                                                                                    result.GuidField = nullable103.Value;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                if ((key == "FILETIMEField")) {
                                                                                                                                                                                                                                    System.Nullable<System.Runtime.InteropServices.ComTypes.FILETIME> nullable102 = default(System.Nullable<System.Runtime.InteropServices.ComTypes.FILETIME>);
                                                                                                                                                                                                                                    if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                        nullable102 = this._serializer78.UnpackFrom(unpacker);
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                        MsgPack.Unpacker disposable82 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                        disposable82 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                            nullable102 = this._serializer78.UnpackFrom(disposable82);
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        finally {
                                                                                                                                                                                                                                            if (((disposable82 == null) 
                                                                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                                                                disposable82.Dispose();
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if (nullable102.HasValue) {
                                                                                                                                                                                                                                        result.FILETIMEField = nullable102.Value;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                    if ((key == "FalseField")) {
                                                                                                                                                                                                                                        System.Nullable<bool> nullable101 = default(System.Nullable<bool>);
                                                                                                                                                                                                                                        nullable101 = MsgPack.Serialization.UnpackHelpers.UnpackNullableBooleanValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Boolean FalseField");
                                                                                                                                                                                                                                        if (nullable101.HasValue) {
                                                                                                                                                                                                                                            result.FalseField = nullable101.Value;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                        if ((key == "DictionaryStringDateTimeField")) {
                                                                                                                                                                                                                                            System.Collections.Generic.Dictionary<string, System.DateTime> nullable100 = default(System.Collections.Generic.Dictionary<string, System.DateTime>);
                                                                                                                                                                                                                                            if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                nullable100 = this._serializer24.UnpackFrom(unpacker);
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                                MsgPack.Unpacker disposable81 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                disposable81 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                                    nullable100 = this._serializer24.UnpackFrom(disposable81);
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                finally {
                                                                                                                                                                                                                                                    if (((disposable81 == null) 
                                                                                                                                                                                                                                                                == false)) {
                                                                                                                                                                                                                                                        disposable81.Dispose();
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            if (((nullable100 == null) 
                                                                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                                                                System.Collections.Generic.Dictionary<string, System.DateTime>.Enumerator enumerator43 = nullable100.GetEnumerator();
                                                                                                                                                                                                                                                System.Collections.Generic.KeyValuePair<string, System.DateTime> current43;
                                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                                    for (
                                                                                                                                                                                                                                                    ; enumerator43.MoveNext(); 
                                                                                                                                                                                                                                                    ) {
                                                                                                                                                                                                                                                        current43 = enumerator43.Current;
                                                                                                                                                                                                                                                        result.DictionaryStringDateTimeField.Add(current43.Key, current43.Value);
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                finally {
                                                                                                                                                                                                                                                    enumerator43.Dispose();
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                                            if ((key == "DictionaryObjectObjectField")) {
                                                                                                                                                                                                                                                System.Collections.Generic.Dictionary<object, object> nullable99 = default(System.Collections.Generic.Dictionary<object, object>);
                                                                                                                                                                                                                                                if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                    nullable99 = this._serializer23.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                    MsgPack.Unpacker disposable80 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                    disposable80 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                        nullable99 = this._serializer23.UnpackFrom(disposable80);
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    finally {
                                                                                                                                                                                                                                                        if (((disposable80 == null) 
                                                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                                                            disposable80.Dispose();
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                if (((nullable99 == null) 
                                                                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                                                                    System.Collections.Generic.Dictionary<object, object>.Enumerator enumerator42 = nullable99.GetEnumerator();
                                                                                                                                                                                                                                                    System.Collections.Generic.KeyValuePair<object, object> current42;
                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                        for (
                                                                                                                                                                                                                                                        ; enumerator42.MoveNext(); 
                                                                                                                                                                                                                                                        ) {
                                                                                                                                                                                                                                                            current42 = enumerator42.Current;
                                                                                                                                                                                                                                                            result.DictionaryObjectObjectField.Add(current42.Key, current42.Value);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    finally {
                                                                                                                                                                                                                                                        enumerator42.Dispose();
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                                if ((key == "DictionaryEntryField")) {
                                                                                                                                                                                                                                                    System.Nullable<System.Collections.DictionaryEntry> nullable98 = default(System.Nullable<System.Collections.DictionaryEntry>);
                                                                                                                                                                                                                                                    if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                        nullable98 = this._serializer77.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                                        MsgPack.Unpacker disposable79 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                        disposable79 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                                            nullable98 = this._serializer77.UnpackFrom(disposable79);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        finally {
                                                                                                                                                                                                                                                            if (((disposable79 == null) 
                                                                                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                                                                                disposable79.Dispose();
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    if (nullable98.HasValue) {
                                                                                                                                                                                                                                                        result.DictionaryEntryField = nullable98.Value;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                    if ((key == "Dictionary_MessagePackObject_MessagePackObjectField")) {
                                                                                                                                                                                                                                                        System.Collections.Generic.Dictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject> nullable97 = default(System.Collections.Generic.Dictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>);
                                                                                                                                                                                                                                                        if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                    && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                            nullable97 = this._serializer21.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                                                            MsgPack.Unpacker disposable78 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                            disposable78 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                                nullable97 = this._serializer21.UnpackFrom(disposable78);
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            finally {
                                                                                                                                                                                                                                                                if (((disposable78 == null) 
                                                                                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                                                                                    disposable78.Dispose();
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        if (((nullable97 == null) 
                                                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                                                            System.Collections.Generic.Dictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>.Enumerator enumerator41 = nullable97.GetEnumerator();
                                                                                                                                                                                                                                                            System.Collections.Generic.KeyValuePair<MsgPack.MessagePackObject, MsgPack.MessagePackObject> current41;
                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                                for (
                                                                                                                                                                                                                                                                ; enumerator41.MoveNext(); 
                                                                                                                                                                                                                                                                ) {
                                                                                                                                                                                                                                                                    current41 = enumerator41.Current;
                                                                                                                                                                                                                                                                    result.Dictionary_MessagePackObject_MessagePackObjectField.Add(current41.Key, current41.Value);
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            finally {
                                                                                                                                                                                                                                                                enumerator41.Dispose();
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                                        if ((key == "DecimalField")) {
                                                                                                                                                                                                                                                            System.Nullable<decimal> nullable96 = default(System.Nullable<decimal>);
                                                                                                                                                                                                                                                            if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                nullable96 = this._serializer76.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                                                MsgPack.Unpacker disposable77 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                disposable77 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                                                    nullable96 = this._serializer76.UnpackFrom(disposable77);
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                finally {
                                                                                                                                                                                                                                                                    if (((disposable77 == null) 
                                                                                                                                                                                                                                                                                == false)) {
                                                                                                                                                                                                                                                                        disposable77.Dispose();
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            if (nullable96.HasValue) {
                                                                                                                                                                                                                                                                result.DecimalField = nullable96.Value;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                                                            if ((key == "DateTimeOffsetField")) {
                                                                                                                                                                                                                                                                System.Nullable<System.DateTimeOffset> nullable95 = default(System.Nullable<System.DateTimeOffset>);
                                                                                                                                                                                                                                                                if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                    nullable95 = this._serializer75.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                                    MsgPack.Unpacker disposable76 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                    disposable76 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                                        nullable95 = this._serializer75.UnpackFrom(disposable76);
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    finally {
                                                                                                                                                                                                                                                                        if (((disposable76 == null) 
                                                                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                                                                            disposable76.Dispose();
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                if (nullable95.HasValue) {
                                                                                                                                                                                                                                                                    result.DateTimeOffsetField = nullable95.Value;
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                                                if ((key == "DateTimeField")) {
                                                                                                                                                                                                                                                                    System.Nullable<System.DateTime> nullable94 = default(System.Nullable<System.DateTime>);
                                                                                                                                                                                                                                                                    if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                        nullable94 = this._serializer74.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                                                        MsgPack.Unpacker disposable75 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                        disposable75 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                                                            nullable94 = this._serializer74.UnpackFrom(disposable75);
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        finally {
                                                                                                                                                                                                                                                                            if (((disposable75 == null) 
                                                                                                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                                                                                                disposable75.Dispose();
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    if (nullable94.HasValue) {
                                                                                                                                                                                                                                                                        result.DateTimeField = nullable94.Value;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                                    if ((key == "CurrentCultureField")) {
                                                                                                                                                                                                                                                                        System.Globalization.CultureInfo nullable93 = default(System.Globalization.CultureInfo);
                                                                                                                                                                                                                                                                        if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                    && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                            nullable93 = this._serializer17.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                                                                            MsgPack.Unpacker disposable74 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                            disposable74 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                                                nullable93 = this._serializer17.UnpackFrom(disposable74);
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            finally {
                                                                                                                                                                                                                                                                                if (((disposable74 == null) 
                                                                                                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                                                                                                    disposable74.Dispose();
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        if (((nullable93 == null) 
                                                                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                                                                            result.CurrentCultureField = nullable93;
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                                                        if ((key == "ComplexField")) {
                                                                                                                                                                                                                                                                            System.Nullable<System.Numerics.Complex> nullable92 = default(System.Nullable<System.Numerics.Complex>);
                                                                                                                                                                                                                                                                            if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                nullable92 = this._serializer73.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                                                                MsgPack.Unpacker disposable73 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                disposable73 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                                                                    nullable92 = this._serializer73.UnpackFrom(disposable73);
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                finally {
                                                                                                                                                                                                                                                                                    if (((disposable73 == null) 
                                                                                                                                                                                                                                                                                                == false)) {
                                                                                                                                                                                                                                                                                        disposable73.Dispose();
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            if (nullable92.HasValue) {
                                                                                                                                                                                                                                                                                result.ComplexField = nullable92.Value;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                                                                            if ((key == "CollectionObjectField")) {
                                                                                                                                                                                                                                                                                System.Collections.ObjectModel.Collection<object> nullable91 = default(System.Collections.ObjectModel.Collection<object>);
                                                                                                                                                                                                                                                                                if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                    nullable91 = this._serializer15.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                                                    MsgPack.Unpacker disposable72 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                    disposable72 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                                                        nullable91 = this._serializer15.UnpackFrom(disposable72);
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    finally {
                                                                                                                                                                                                                                                                                        if (((disposable72 == null) 
                                                                                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                                                                                            disposable72.Dispose();
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                if (((nullable91 == null) 
                                                                                                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                                                                                                    System.Collections.Generic.IEnumerator<object> enumerator40 = nullable91.GetEnumerator();
                                                                                                                                                                                                                                                                                    object current40;
                                                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                                                        for (
                                                                                                                                                                                                                                                                                        ; enumerator40.MoveNext(); 
                                                                                                                                                                                                                                                                                        ) {
                                                                                                                                                                                                                                                                                            current40 = enumerator40.Current;
                                                                                                                                                                                                                                                                                            result.CollectionObjectField.Add(current40);
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    finally {
                                                                                                                                                                                                                                                                                        enumerator40.Dispose();
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                                                                if ((key == "CollectionDateTimeField")) {
                                                                                                                                                                                                                                                                                    System.Collections.ObjectModel.Collection<System.DateTime> nullable90 = default(System.Collections.ObjectModel.Collection<System.DateTime>);
                                                                                                                                                                                                                                                                                    if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                                && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                        nullable90 = this._serializer14.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                                                                        MsgPack.Unpacker disposable71 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                        disposable71 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                                                                            nullable90 = this._serializer14.UnpackFrom(disposable71);
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        finally {
                                                                                                                                                                                                                                                                                            if (((disposable71 == null) 
                                                                                                                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                                                                                                                disposable71.Dispose();
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    if (((nullable90 == null) 
                                                                                                                                                                                                                                                                                                == false)) {
                                                                                                                                                                                                                                                                                        System.Collections.Generic.IEnumerator<System.DateTime> enumerator39 = nullable90.GetEnumerator();
                                                                                                                                                                                                                                                                                        System.DateTime current39;
                                                                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                                                                            for (
                                                                                                                                                                                                                                                                                            ; enumerator39.MoveNext(); 
                                                                                                                                                                                                                                                                                            ) {
                                                                                                                                                                                                                                                                                                current39 = enumerator39.Current;
                                                                                                                                                                                                                                                                                                result.CollectionDateTimeField.Add(current39);
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        finally {
                                                                                                                                                                                                                                                                                            enumerator39.Dispose();
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                                                    if ((key == "Collection_MessagePackObjectField")) {
                                                                                                                                                                                                                                                                                        System.Collections.ObjectModel.Collection<MsgPack.MessagePackObject> nullable89 = default(System.Collections.ObjectModel.Collection<MsgPack.MessagePackObject>);
                                                                                                                                                                                                                                                                                        if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                                    && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                            nullable89 = this._serializer13.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                                                                                            MsgPack.Unpacker disposable70 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                            disposable70 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                                                                nullable89 = this._serializer13.UnpackFrom(disposable70);
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            finally {
                                                                                                                                                                                                                                                                                                if (((disposable70 == null) 
                                                                                                                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                                                                                                                    disposable70.Dispose();
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        if (((nullable89 == null) 
                                                                                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                                                                                            System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator38 = nullable89.GetEnumerator();
                                                                                                                                                                                                                                                                                            MsgPack.MessagePackObject current38;
                                                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                                                                for (
                                                                                                                                                                                                                                                                                                ; enumerator38.MoveNext(); 
                                                                                                                                                                                                                                                                                                ) {
                                                                                                                                                                                                                                                                                                    current38 = enumerator38.Current;
                                                                                                                                                                                                                                                                                                    result.Collection_MessagePackObjectField.Add(current38);
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            finally {
                                                                                                                                                                                                                                                                                                enumerator38.Dispose();
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                                                                        if ((key == "CharField")) {
                                                                                                                                                                                                                                                                                            System.Nullable<char> nullable88 = default(System.Nullable<char>);
                                                                                                                                                                                                                                                                                            if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                                nullable88 = this._serializer72.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                                                                                MsgPack.Unpacker disposable69 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                                disposable69 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                                                                                    nullable88 = this._serializer72.UnpackFrom(disposable69);
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                finally {
                                                                                                                                                                                                                                                                                                    if (((disposable69 == null) 
                                                                                                                                                                                                                                                                                                                == false)) {
                                                                                                                                                                                                                                                                                                        disposable69.Dispose();
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            if (nullable88.HasValue) {
                                                                                                                                                                                                                                                                                                result.CharField = nullable88.Value;
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                                                                                            if ((key == "CharArrayField")) {
                                                                                                                                                                                                                                                                                                char[] nullable87 = default(char[]);
                                                                                                                                                                                                                                                                                                if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                                    nullable87 = this._serializer11.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                                                                    MsgPack.Unpacker disposable68 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                                    disposable68 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                                                                        nullable87 = this._serializer11.UnpackFrom(disposable68);
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    finally {
                                                                                                                                                                                                                                                                                                        if (((disposable68 == null) 
                                                                                                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                                                                                                            disposable68.Dispose();
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                if (((nullable87 == null) 
                                                                                                                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                                                                                                                    result.CharArrayField = nullable87;
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                                                                                if ((key == "ByteField")) {
                                                                                                                                                                                                                                                                                                    System.Nullable<byte> nullable86 = default(System.Nullable<byte>);
                                                                                                                                                                                                                                                                                                    nullable86 = MsgPack.Serialization.UnpackHelpers.UnpackNullableByteValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Byte ByteField");
                                                                                                                                                                                                                                                                                                    if (nullable86.HasValue) {
                                                                                                                                                                                                                                                                                                        result.ByteField = nullable86.Value;
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                                                                    if ((key == "ByteArrayField")) {
                                                                                                                                                                                                                                                                                                        byte[] nullable85 = default(byte[]);
                                                                                                                                                                                                                                                                                                        nullable85 = MsgPack.Serialization.UnpackHelpers.UnpackBinaryValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "Byte[] ByteArrayField");
                                                                                                                                                                                                                                                                                                        if (((nullable85 == null) 
                                                                                                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                                                                                                            result.ByteArrayField = nullable85;
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                                                                                        if ((key == "BigIntegerField")) {
                                                                                                                                                                                                                                                                                                            System.Nullable<System.Numerics.BigInteger> nullable84 = default(System.Nullable<System.Numerics.BigInteger>);
                                                                                                                                                                                                                                                                                                            if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                                                nullable84 = this._serializer71.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                                                                                                MsgPack.Unpacker disposable67 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                                                disposable67 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                                                                                                    nullable84 = this._serializer71.UnpackFrom(disposable67);
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                finally {
                                                                                                                                                                                                                                                                                                                    if (((disposable67 == null) 
                                                                                                                                                                                                                                                                                                                                == false)) {
                                                                                                                                                                                                                                                                                                                        disposable67.Dispose();
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            if (nullable84.HasValue) {
                                                                                                                                                                                                                                                                                                                result.BigIntegerField = nullable84.Value;
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                                                                                                            if ((key == "ArraySegmentInt32Field")) {
                                                                                                                                                                                                                                                                                                                System.Nullable<System.ArraySegment<int>> nullable83 = default(System.Nullable<System.ArraySegment<int>>);
                                                                                                                                                                                                                                                                                                                if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                                                    nullable83 = this._serializer70.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                                                                                    MsgPack.Unpacker disposable66 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                                                    disposable66 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                                                                                        nullable83 = this._serializer70.UnpackFrom(disposable66);
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    finally {
                                                                                                                                                                                                                                                                                                                        if (((disposable66 == null) 
                                                                                                                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                                                                                                                            disposable66.Dispose();
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                if (nullable83.HasValue) {
                                                                                                                                                                                                                                                                                                                    result.ArraySegmentInt32Field = nullable83.Value;
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                                                                                                if ((key == "ArraySegmentDecimalField")) {
                                                                                                                                                                                                                                                                                                                    System.Nullable<System.ArraySegment<decimal>> nullable82 = default(System.Nullable<System.ArraySegment<decimal>>);
                                                                                                                                                                                                                                                                                                                    if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                                                                && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                                                        nullable82 = this._serializer69.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                                                                                                        MsgPack.Unpacker disposable65 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                                                        disposable65 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                                                                                                            nullable82 = this._serializer69.UnpackFrom(disposable65);
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        finally {
                                                                                                                                                                                                                                                                                                                            if (((disposable65 == null) 
                                                                                                                                                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                                                                                                                                                disposable65.Dispose();
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    if (nullable82.HasValue) {
                                                                                                                                                                                                                                                                                                                        result.ArraySegmentDecimalField = nullable82.Value;
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                                                                                    if ((key == "ArraySegmentByteField")) {
                                                                                                                                                                                                                                                                                                                        System.Nullable<System.ArraySegment<byte>> nullable81 = default(System.Nullable<System.ArraySegment<byte>>);
                                                                                                                                                                                                                                                                                                                        if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                                                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                                                                    && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                                                            nullable81 = this._serializer68.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                                                                                                                            MsgPack.Unpacker disposable64 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                                                            disposable64 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                                                                                                nullable81 = this._serializer68.UnpackFrom(disposable64);
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            finally {
                                                                                                                                                                                                                                                                                                                                if (((disposable64 == null) 
                                                                                                                                                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                                                                                                                                                    disposable64.Dispose();
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        if (nullable81.HasValue) {
                                                                                                                                                                                                                                                                                                                            result.ArraySegmentByteField = nullable81.Value;
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                                                                                                        if ((key == "ArrayListField")) {
                                                                                                                                                                                                                                                                                                                            System.Collections.ArrayList nullable80 = default(System.Collections.ArrayList);
                                                                                                                                                                                                                                                                                                                            if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                                                                throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                                                                        && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                                                                nullable80 = this._serializer4.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                                                                                                                MsgPack.Unpacker disposable63 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                                                                disposable63 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                                                                                                                    nullable80 = this._serializer4.UnpackFrom(disposable63);
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                finally {
                                                                                                                                                                                                                                                                                                                                    if (((disposable63 == null) 
                                                                                                                                                                                                                                                                                                                                                == false)) {
                                                                                                                                                                                                                                                                                                                                        disposable63.Dispose();
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            if (((nullable80 == null) 
                                                                                                                                                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                                                                                                                                                System.Collections.IEnumerator enumerator37 = nullable80.GetEnumerator();
                                                                                                                                                                                                                                                                                                                                object current37;
                                                                                                                                                                                                                                                                                                                                for (
                                                                                                                                                                                                                                                                                                                                ; enumerator37.MoveNext(); 
                                                                                                                                                                                                                                                                                                                                ) {
                                                                                                                                                                                                                                                                                                                                    current37 = enumerator37.Current;
                                                                                                                                                                                                                                                                                                                                    result.ArrayListField.Add(current37);
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                                                                                                                            if ((key == "AddOnlyCollection_ObjectField")) {
                                                                                                                                                                                                                                                                                                                                MsgPack.Serialization.AddOnlyCollection<object> nullable79 = default(MsgPack.Serialization.AddOnlyCollection<object>);
                                                                                                                                                                                                                                                                                                                                if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                                                                    throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                                                                            && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                                                                    nullable79 = this._serializer3.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                                                                                                    MsgPack.Unpacker disposable62 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                                                                    disposable62 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                                                                                                        nullable79 = this._serializer3.UnpackFrom(disposable62);
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                    finally {
                                                                                                                                                                                                                                                                                                                                        if (((disposable62 == null) 
                                                                                                                                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                                                                                                                                            disposable62.Dispose();
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                if (((nullable79 == null) 
                                                                                                                                                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                                                                                                                                                    System.Collections.Generic.IEnumerator<object> enumerator36 = nullable79.GetEnumerator();
                                                                                                                                                                                                                                                                                                                                    object current36;
                                                                                                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                                                                                                        for (
                                                                                                                                                                                                                                                                                                                                        ; enumerator36.MoveNext(); 
                                                                                                                                                                                                                                                                                                                                        ) {
                                                                                                                                                                                                                                                                                                                                            current36 = enumerator36.Current;
                                                                                                                                                                                                                                                                                                                                            result.AddOnlyCollection_ObjectField.Add(current36);
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                    finally {
                                                                                                                                                                                                                                                                                                                                        enumerator36.Dispose();
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            else {
                                                                                                                                                                                                                                                                                                                                if ((key == "AddOnlyCollection_MessagePackObjectField")) {
                                                                                                                                                                                                                                                                                                                                    MsgPack.Serialization.AddOnlyCollection<MsgPack.MessagePackObject> nullable78 = default(MsgPack.Serialization.AddOnlyCollection<MsgPack.MessagePackObject>);
                                                                                                                                                                                                                                                                                                                                    if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                                                                        throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                    if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                                                                                && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                                                                        nullable78 = this._serializer2.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                                                                                                                        MsgPack.Unpacker disposable61 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                                                                        disposable61 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                                                                                                                            nullable78 = this._serializer2.UnpackFrom(disposable61);
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                        finally {
                                                                                                                                                                                                                                                                                                                                            if (((disposable61 == null) 
                                                                                                                                                                                                                                                                                                                                                        == false)) {
                                                                                                                                                                                                                                                                                                                                                disposable61.Dispose();
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                    if (((nullable78 == null) 
                                                                                                                                                                                                                                                                                                                                                == false)) {
                                                                                                                                                                                                                                                                                                                                        System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator35 = nullable78.GetEnumerator();
                                                                                                                                                                                                                                                                                                                                        MsgPack.MessagePackObject current35;
                                                                                                                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                                                                                                                            for (
                                                                                                                                                                                                                                                                                                                                            ; enumerator35.MoveNext(); 
                                                                                                                                                                                                                                                                                                                                            ) {
                                                                                                                                                                                                                                                                                                                                                current35 = enumerator35.Current;
                                                                                                                                                                                                                                                                                                                                                result.AddOnlyCollection_MessagePackObjectField.Add(current35);
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                        finally {
                                                                                                                                                                                                                                                                                                                                            enumerator35.Dispose();
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                else {
                                                                                                                                                                                                                                                                                                                                    if ((key == "AddOnlyCollection_DateTimeField")) {
                                                                                                                                                                                                                                                                                                                                        MsgPack.Serialization.AddOnlyCollection<System.DateTime> nullable77 = default(MsgPack.Serialization.AddOnlyCollection<System.DateTime>);
                                                                                                                                                                                                                                                                                                                                        if ((unpacker.Read() == false)) {
                                                                                                                                                                                                                                                                                                                                            throw MsgPack.Serialization.SerializationExceptions.NewMissingItem(i);
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                        if (((unpacker.IsArrayHeader == false) 
                                                                                                                                                                                                                                                                                                                                                    && (unpacker.IsMapHeader == false))) {
                                                                                                                                                                                                                                                                                                                                            nullable77 = this._serializer1.UnpackFrom(unpacker);
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                        else {
                                                                                                                                                                                                                                                                                                                                            MsgPack.Unpacker disposable60 = default(MsgPack.Unpacker);
                                                                                                                                                                                                                                                                                                                                            disposable60 = unpacker.ReadSubtree();
                                                                                                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                                                                                                                nullable77 = this._serializer1.UnpackFrom(disposable60);
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                            finally {
                                                                                                                                                                                                                                                                                                                                                if (((disposable60 == null) 
                                                                                                                                                                                                                                                                                                                                                            == false)) {
                                                                                                                                                                                                                                                                                                                                                    disposable60.Dispose();
                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                        if (((nullable77 == null) 
                                                                                                                                                                                                                                                                                                                                                    == false)) {
                                                                                                                                                                                                                                                                                                                                            System.Collections.Generic.IEnumerator<System.DateTime> enumerator34 = nullable77.GetEnumerator();
                                                                                                                                                                                                                                                                                                                                            System.DateTime current34;
                                                                                                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                                                                                                                for (
                                                                                                                                                                                                                                                                                                                                                ; enumerator34.MoveNext(); 
                                                                                                                                                                                                                                                                                                                                                ) {
                                                                                                                                                                                                                                                                                                                                                    current34 = enumerator34.Current;
                                                                                                                                                                                                                                                                                                                                                    result.AddOnlyCollection_DateTimeField.Add(current34);
                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                            finally {
                                                                                                                                                                                                                                                                                                                                                enumerator34.Dispose();
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                    else {
                                                                                                                                                                                                                                                                                                                                        unpacker.Skip();
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            return result;
        }
    }
}
