//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MsgPack.Serialization.GeneratedSerializers {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MsgPack.Serialization.CodeDomSerializers.CodeDomSerializerBuilder", "0.7.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class MsgPack_Serialization_GenericNonCollectionTypeSerializer : MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.GenericNonCollectionType> {
        
        private MsgPack.Serialization.MessagePackSerializer<int> _serializer0;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType> this_PackValueOfPropertyDelegate;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType>> _packOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType>> _packOperationTable;
        
        private System.Func<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType, System.Threading.CancellationToken, System.Threading.Tasks.Task> this_PackValueOfPropertyAsyncDelegate;
        
        private System.Collections.Generic.IList<System.Func<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType, System.Threading.CancellationToken, System.Threading.Tasks.Task>> _packOperationListAsync;
        
        private System.Collections.Generic.IDictionary<string, System.Func<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType, System.Threading.CancellationToken, System.Threading.Tasks.Task>> _packOperationTableAsync;
        
        private System.Action<MsgPack.Serialization.GenericNonCollectionType, int> this_SetUnpackedValueOfPropertyDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, int> MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int> this_UnpackValueOfPropertyDelegate;
        
        private System.Collections.Generic.IList<string> _memberNames;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int>> _unpackOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int>> _unpackOperationTable;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, System.Threading.CancellationToken, System.Threading.Tasks.Task<int>> MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueAsyncDelegate;
        
        private System.Func<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int, System.Threading.CancellationToken, System.Threading.Tasks.Task> this_UnpackValueOfPropertyAsyncDelegate;
        
        private System.Collections.Generic.IList<System.Func<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int, System.Threading.CancellationToken, System.Threading.Tasks.Task>> _unpackOperationListAsync;
        
        private System.Collections.Generic.IDictionary<string, System.Func<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int, System.Threading.CancellationToken, System.Threading.Tasks.Task>> _unpackOperationTableAsync;
        
        public MsgPack_Serialization_GenericNonCollectionTypeSerializer(MsgPack.Serialization.SerializationContext context) : 
                base(context) {
            MsgPack.Serialization.PolymorphismSchema schema0 = default(MsgPack.Serialization.PolymorphismSchema);
            schema0 = null;
            this._serializer0 = context.GetSerializer<int>(schema0);
            System.Action<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType>[] packOperationList = default(System.Action<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType>[]);
            packOperationList = new System.Action<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType>[1];
            packOperationList[0] = new System.Action<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType>(this.PackValueOfProperty);
            this._packOperationList = packOperationList;
            System.Func<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType, System.Threading.CancellationToken, System.Threading.Tasks.Task>[] packOperationListAsync = default(System.Func<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType, System.Threading.CancellationToken, System.Threading.Tasks.Task>[]);
            packOperationListAsync = new System.Func<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType, System.Threading.CancellationToken, System.Threading.Tasks.Task>[1];
            packOperationListAsync[0] = new System.Func<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType, System.Threading.CancellationToken, System.Threading.Tasks.Task>(this.PackValueOfPropertyAsync);
            this._packOperationListAsync = packOperationListAsync;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType>> packOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType>>);
            packOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType>>(1);
            packOperationTable["Property"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType>(this.PackValueOfProperty);
            this._packOperationTable = packOperationTable;
            System.Collections.Generic.Dictionary<string, System.Func<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType, System.Threading.CancellationToken, System.Threading.Tasks.Task>> packOperationTableAsync = default(System.Collections.Generic.Dictionary<string, System.Func<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType, System.Threading.CancellationToken, System.Threading.Tasks.Task>>);
            packOperationTableAsync = new System.Collections.Generic.Dictionary<string, System.Func<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType, System.Threading.CancellationToken, System.Threading.Tasks.Task>>(1);
            packOperationTableAsync["Property"] = new System.Func<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType, System.Threading.CancellationToken, System.Threading.Tasks.Task>(this.PackValueOfPropertyAsync);
            this._packOperationTableAsync = packOperationTableAsync;
            System.Action<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int>[] unpackOperationList = default(System.Action<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int>[]);
            unpackOperationList = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int>[1];
            unpackOperationList[0] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int>(this.UnpackValueOfProperty);
            this._unpackOperationList = unpackOperationList;
            System.Func<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int, System.Threading.CancellationToken, System.Threading.Tasks.Task>[] unpackOperationListAsync = default(System.Func<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int, System.Threading.CancellationToken, System.Threading.Tasks.Task>[]);
            unpackOperationListAsync = new System.Func<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int, System.Threading.CancellationToken, System.Threading.Tasks.Task>[1];
            unpackOperationListAsync[0] = new System.Func<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int, System.Threading.CancellationToken, System.Threading.Tasks.Task>(this.UnpackValueOfPropertyAsync);
            this._unpackOperationListAsync = unpackOperationListAsync;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int>> unpackOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int>>);
            unpackOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int>>(1);
            unpackOperationTable["Property"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int>(this.UnpackValueOfProperty);
            this._unpackOperationTable = unpackOperationTable;
            System.Collections.Generic.Dictionary<string, System.Func<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int, System.Threading.CancellationToken, System.Threading.Tasks.Task>> unpackOperationTableAsync = default(System.Collections.Generic.Dictionary<string, System.Func<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int, System.Threading.CancellationToken, System.Threading.Tasks.Task>>);
            unpackOperationTableAsync = new System.Collections.Generic.Dictionary<string, System.Func<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int, System.Threading.CancellationToken, System.Threading.Tasks.Task>>(1);
            unpackOperationTableAsync["Property"] = new System.Func<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int, System.Threading.CancellationToken, System.Threading.Tasks.Task>(this.UnpackValueOfPropertyAsync);
            this._unpackOperationTableAsync = unpackOperationTableAsync;
            this._memberNames = new string[] {
                    "Property"};
            this.this_PackValueOfPropertyDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType>(this.PackValueOfProperty);
            this.this_PackValueOfPropertyAsyncDelegate = new System.Func<MsgPack.Packer, MsgPack.Serialization.GenericNonCollectionType, System.Threading.CancellationToken, System.Threading.Tasks.Task>(this.PackValueOfPropertyAsync);
            this.this_SetUnpackedValueOfPropertyDelegate = new System.Action<MsgPack.Serialization.GenericNonCollectionType, int>(this.SetUnpackedValueOfProperty);
            this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, int>(MsgPack.Serialization.UnpackHelpers.UnpackInt32Value);
            this.this_UnpackValueOfPropertyDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int>(this.UnpackValueOfProperty);
            this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueAsyncDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, System.Threading.CancellationToken, System.Threading.Tasks.Task<int>>(MsgPack.Serialization.UnpackHelpers.UnpackInt32ValueAsync);
            this.this_UnpackValueOfPropertyAsyncDelegate = new System.Func<MsgPack.Unpacker, MsgPack.Serialization.GenericNonCollectionType, int, int, System.Threading.CancellationToken, System.Threading.Tasks.Task>(this.UnpackValueOfPropertyAsync);
        }
        
        private void PackValueOfProperty(MsgPack.Packer packer, MsgPack.Serialization.GenericNonCollectionType objectTree) {
            this._serializer0.PackTo(packer, objectTree.Property);
        }
        
        protected internal override void PackToCore(MsgPack.Packer packer, MsgPack.Serialization.GenericNonCollectionType objectTree) {
            if ((this.OwnerContext.SerializationMethod == MsgPack.Serialization.SerializationMethod.Array)) {
                MsgPack.Serialization.PackHelpers.PackToArray(packer, objectTree, this._packOperationList);
            }
            else {
                MsgPack.Serialization.PackHelpers.PackToMap(packer, objectTree, this._packOperationTable);
            }
        }
        
        private System.Threading.Tasks.Task PackValueOfPropertyAsync(MsgPack.Packer packer, MsgPack.Serialization.GenericNonCollectionType objectTree, System.Threading.CancellationToken cancellationToken) {
            return this._serializer0.PackToAsync(packer, objectTree.Property, cancellationToken);
        }
        
        protected internal override System.Threading.Tasks.Task PackToAsyncCore(MsgPack.Packer packer, MsgPack.Serialization.GenericNonCollectionType objectTree, System.Threading.CancellationToken cancellationToken) {
            if ((this.OwnerContext.SerializationMethod == MsgPack.Serialization.SerializationMethod.Array)) {
                return MsgPack.Serialization.PackHelpers.PackToArrayAsync(packer, objectTree, this._packOperationListAsync, cancellationToken);
            }
            else {
                return MsgPack.Serialization.PackHelpers.PackToMapAsync(packer, objectTree, this._packOperationTableAsync, cancellationToken);
            }
        }
        
        private void SetUnpackedValueOfProperty(MsgPack.Serialization.GenericNonCollectionType unpackingContext, int unpackedValue) {
            unpackingContext.Property = unpackedValue;
        }
        
        private void UnpackValueOfProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.GenericNonCollectionType unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "Property", this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate, this.this_SetUnpackedValueOfPropertyDelegate);
        }
        
        protected internal override MsgPack.Serialization.GenericNonCollectionType UnpackFromCore(MsgPack.Unpacker unpacker) {
            MsgPack.Serialization.GenericNonCollectionType result = default(MsgPack.Serialization.GenericNonCollectionType);
            result = new MsgPack.Serialization.GenericNonCollectionType();
            if (unpacker.IsArrayHeader) {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromArray(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<MsgPack.Serialization.GenericNonCollectionType>(), this._memberNames, this._unpackOperationList);
            }
            else {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromMap(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<MsgPack.Serialization.GenericNonCollectionType>(), this._unpackOperationTable);
            }
        }
        
        private System.Threading.Tasks.Task UnpackValueOfPropertyAsync(MsgPack.Unpacker unpacker, MsgPack.Serialization.GenericNonCollectionType unpackingContext, int indexOfItem, int itemsCount, System.Threading.CancellationToken cancellationToken) {
            return MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValueAsync(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "Property", this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueAsyncDelegate, this.this_SetUnpackedValueOfPropertyDelegate, cancellationToken);
        }
        
        protected internal override System.Threading.Tasks.Task<MsgPack.Serialization.GenericNonCollectionType> UnpackFromAsyncCore(MsgPack.Unpacker unpacker, System.Threading.CancellationToken cancellationToken) {
            MsgPack.Serialization.GenericNonCollectionType result = default(MsgPack.Serialization.GenericNonCollectionType);
            result = new MsgPack.Serialization.GenericNonCollectionType();
            if (unpacker.IsArrayHeader) {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromArrayAsync(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<MsgPack.Serialization.GenericNonCollectionType>(), this._memberNames, this._unpackOperationListAsync, cancellationToken);
            }
            else {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromMapAsync(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<MsgPack.Serialization.GenericNonCollectionType>(), this._unpackOperationTableAsync, cancellationToken);
            }
        }
    }
}
