//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MsgPack.Serialization.GeneratedSerializers {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MsgPack.Serialization.CodeDomSerializers.CodeDomSerializerBuilder", "0.7.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class MsgPack_Serialization_AnnotatedClassSerializer : MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.AnnotatedClass> {
        
        private MsgPack.Serialization.MessagePackSerializer<int> _serializer0;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass> this_PackValueOfAliasPackValueOfAliasDelegate;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass> this_PackValueOfPublicFieldPackValueOfPublicFieldDelegate;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass> this_PackMemberPlaceHolderPackMemberPlaceHolderDelegate;
        
        private System.Reflection.MethodBase _methodBaseAnnotatedClass_get_NonPublicProperty0;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass> this_PackValueOfNonPublicPropertyPackValueOfNonPublicPropertyDelegate;
        
        private System.Reflection.FieldInfo _fieldAnnotatedClass_NonPublicField0;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass> this_PackValueOfNonPublicFieldPackValueOfNonPublicFieldDelegate;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass> this_PackValueOfNonSerializedPublicFieldPackValueOfNonSerializedPublicFieldDelegate;
        
        private System.Reflection.FieldInfo _fieldAnnotatedClass_NonSerializedNonPublicField1;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass> this_PackValueOfNonSerializedNonPublicFieldPackValueOfNonSerializedNonPublicFieldDelegate;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.List<int>> _serializer1;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass> this_PackValueOfCollectionReadOnlyPropertyPackValueOfCollectionReadOnlyPropertyDelegate;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>> _packOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>> _packOperationTable;
        
        private System.Action<MsgPack.Serialization.AnnotatedClass, int> this_SetUnpackedValueOfPublicPropertySetUnpackedValueOfPublicPropertyDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, int> MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueUnpackInt32ValueDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int> this_UnpackValueOfAliasUnpackValueOfAliasDelegate;
        
        private System.Action<MsgPack.Serialization.AnnotatedClass, int> this_SetUnpackedValueOfPublicFieldSetUnpackedValueOfPublicFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int> this_UnpackValueOfPublicFieldUnpackValueOfPublicFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int> this_UnpackMemberPlaceHolderUnpackMemberPlaceHolderDelegate;
        
        private System.Reflection.MethodBase _methodBaseAnnotatedClass_set_NonPublicProperty1;
        
        private System.Action<MsgPack.Serialization.AnnotatedClass, int> this_SetUnpackedValueOfNonPublicPropertySetUnpackedValueOfNonPublicPropertyDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int> this_UnpackValueOfNonPublicPropertyUnpackValueOfNonPublicPropertyDelegate;
        
        private System.Action<MsgPack.Serialization.AnnotatedClass, int> this_SetUnpackedValueOfNonPublicFieldSetUnpackedValueOfNonPublicFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int> this_UnpackValueOfNonPublicFieldUnpackValueOfNonPublicFieldDelegate;
        
        private System.Action<MsgPack.Serialization.AnnotatedClass, int> this_SetUnpackedValueOfNonSerializedPublicFieldSetUnpackedValueOfNonSerializedPublicFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int> this_UnpackValueOfNonSerializedPublicFieldUnpackValueOfNonSerializedPublicFieldDelegate;
        
        private System.Action<MsgPack.Serialization.AnnotatedClass, int> this_SetUnpackedValueOfNonSerializedNonPublicFieldSetUnpackedValueOfNonSerializedNonPublicFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int> this_UnpackValueOfNonSerializedNonPublicFieldUnpackValueOfNonSerializedNonPublicFieldDelegate;
        
        private System.Action<MsgPack.Serialization.AnnotatedClass, System.Collections.Generic.List<int>> this_SetUnpackedValueOfCollectionReadOnlyPropertySetUnpackedValueOfCollectionReadOnlyPropertyDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int> this_UnpackValueOfCollectionReadOnlyPropertyUnpackValueOfCollectionReadOnlyPropertyDelegate;
        
        private System.Collections.Generic.IList<string> _memberNames;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>> _unpackOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>> _unpackOperationTable;
        
        public MsgPack_Serialization_AnnotatedClassSerializer(MsgPack.Serialization.SerializationContext context) : 
                base(context) {
            MsgPack.Serialization.PolymorphismSchema schema0 = default(MsgPack.Serialization.PolymorphismSchema);
            schema0 = null;
            this._serializer0 = context.GetSerializer<int>(schema0);
            MsgPack.Serialization.PolymorphismSchema schema1 = default(MsgPack.Serialization.PolymorphismSchema);
            schema1 = null;
            this._serializer1 = context.GetSerializer<System.Collections.Generic.List<int>>(schema1);
            this._fieldAnnotatedClass_NonPublicField0 = typeof(MsgPack.Serialization.AnnotatedClass).GetField("NonPublicField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            this._fieldAnnotatedClass_NonSerializedNonPublicField1 = typeof(MsgPack.Serialization.AnnotatedClass).GetField("NonSerializedNonPublicField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            this._methodBaseAnnotatedClass_get_NonPublicProperty0 = typeof(MsgPack.Serialization.AnnotatedClass).GetMethod("get_NonPublicProperty", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)), null, new System.Type[0], null);
            this._methodBaseAnnotatedClass_set_NonPublicProperty1 = typeof(MsgPack.Serialization.AnnotatedClass).GetMethod("set_NonPublicProperty", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)), null, new System.Type[] {
                        typeof(int)}, null);
            System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>[] packOperationList = default(System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>[]);
            packOperationList = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>[10];
            packOperationList[0] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfAlias);
            packOperationList[1] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfPublicField);
            packOperationList[2] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackMemberPlaceHolder);
            packOperationList[3] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackMemberPlaceHolder);
            packOperationList[4] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfNonPublicProperty);
            packOperationList[5] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfNonPublicField);
            packOperationList[6] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfNonSerializedPublicField);
            packOperationList[7] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackMemberPlaceHolder);
            packOperationList[8] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfNonSerializedNonPublicField);
            packOperationList[9] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfCollectionReadOnlyProperty);
            this._packOperationList = packOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>> packOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>>);
            packOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>>(7);
            packOperationTable["Alias"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfAlias);
            packOperationTable["PublicField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfPublicField);
            packOperationTable["NonPublicProperty"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfNonPublicProperty);
            packOperationTable["NonPublicField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfNonPublicField);
            packOperationTable["NonSerializedPublicField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfNonSerializedPublicField);
            packOperationTable["NonSerializedNonPublicField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfNonSerializedNonPublicField);
            packOperationTable["CollectionReadOnlyProperty"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfCollectionReadOnlyProperty);
            this._packOperationTable = packOperationTable;
            System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>[] unpackOperationList = default(System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>[]);
            unpackOperationList = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>[10];
            unpackOperationList[0] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfAlias);
            unpackOperationList[1] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfPublicField);
            unpackOperationList[2] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackMemberPlaceHolder);
            unpackOperationList[3] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackMemberPlaceHolder);
            unpackOperationList[4] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfNonPublicProperty);
            unpackOperationList[5] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfNonPublicField);
            unpackOperationList[6] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfNonSerializedPublicField);
            unpackOperationList[7] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackMemberPlaceHolder);
            unpackOperationList[8] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfNonSerializedNonPublicField);
            unpackOperationList[9] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfCollectionReadOnlyProperty);
            this._unpackOperationList = unpackOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>> unpackOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>>);
            unpackOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>>(7);
            unpackOperationTable["Alias"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfAlias);
            unpackOperationTable["PublicField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfPublicField);
            unpackOperationTable["NonPublicProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfNonPublicProperty);
            unpackOperationTable["NonPublicField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfNonPublicField);
            unpackOperationTable["NonSerializedPublicField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfNonSerializedPublicField);
            unpackOperationTable["NonSerializedNonPublicField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfNonSerializedNonPublicField);
            unpackOperationTable["CollectionReadOnlyProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfCollectionReadOnlyProperty);
            this._unpackOperationTable = unpackOperationTable;
            this._memberNames = new string[] {
                    "Alias",
                    "PublicField",
                    null,
                    null,
                    "NonPublicProperty",
                    "NonPublicField",
                    "NonSerializedPublicField",
                    null,
                    "NonSerializedNonPublicField",
                    "CollectionReadOnlyProperty"};
            this.this_PackValueOfAliasPackValueOfAliasDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfAlias);
            this.this_PackValueOfPublicFieldPackValueOfPublicFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfPublicField);
            this.this_PackMemberPlaceHolderPackMemberPlaceHolderDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackMemberPlaceHolder);
            this.this_PackValueOfNonPublicPropertyPackValueOfNonPublicPropertyDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfNonPublicProperty);
            this.this_PackValueOfNonPublicFieldPackValueOfNonPublicFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfNonPublicField);
            this.this_PackValueOfNonSerializedPublicFieldPackValueOfNonSerializedPublicFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfNonSerializedPublicField);
            this.this_PackValueOfNonSerializedNonPublicFieldPackValueOfNonSerializedNonPublicFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfNonSerializedNonPublicField);
            this.this_PackValueOfCollectionReadOnlyPropertyPackValueOfCollectionReadOnlyPropertyDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.AnnotatedClass>(this.PackValueOfCollectionReadOnlyProperty);
            this.this_SetUnpackedValueOfPublicPropertySetUnpackedValueOfPublicPropertyDelegate = new System.Action<MsgPack.Serialization.AnnotatedClass, int>(this.SetUnpackedValueOfPublicProperty);
            this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueUnpackInt32ValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, int>(MsgPack.Serialization.UnpackHelpers.UnpackInt32Value);
            this.this_UnpackValueOfAliasUnpackValueOfAliasDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfAlias);
            this.this_SetUnpackedValueOfPublicFieldSetUnpackedValueOfPublicFieldDelegate = new System.Action<MsgPack.Serialization.AnnotatedClass, int>(this.SetUnpackedValueOfPublicField);
            this.this_UnpackValueOfPublicFieldUnpackValueOfPublicFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfPublicField);
            this.this_UnpackMemberPlaceHolderUnpackMemberPlaceHolderDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackMemberPlaceHolder);
            this.this_SetUnpackedValueOfNonPublicPropertySetUnpackedValueOfNonPublicPropertyDelegate = new System.Action<MsgPack.Serialization.AnnotatedClass, int>(this.SetUnpackedValueOfNonPublicProperty);
            this.this_UnpackValueOfNonPublicPropertyUnpackValueOfNonPublicPropertyDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfNonPublicProperty);
            this.this_SetUnpackedValueOfNonPublicFieldSetUnpackedValueOfNonPublicFieldDelegate = new System.Action<MsgPack.Serialization.AnnotatedClass, int>(this.SetUnpackedValueOfNonPublicField);
            this.this_UnpackValueOfNonPublicFieldUnpackValueOfNonPublicFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfNonPublicField);
            this.this_SetUnpackedValueOfNonSerializedPublicFieldSetUnpackedValueOfNonSerializedPublicFieldDelegate = new System.Action<MsgPack.Serialization.AnnotatedClass, int>(this.SetUnpackedValueOfNonSerializedPublicField);
            this.this_UnpackValueOfNonSerializedPublicFieldUnpackValueOfNonSerializedPublicFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfNonSerializedPublicField);
            this.this_SetUnpackedValueOfNonSerializedNonPublicFieldSetUnpackedValueOfNonSerializedNonPublicFieldDelegate = new System.Action<MsgPack.Serialization.AnnotatedClass, int>(this.SetUnpackedValueOfNonSerializedNonPublicField);
            this.this_UnpackValueOfNonSerializedNonPublicFieldUnpackValueOfNonSerializedNonPublicFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfNonSerializedNonPublicField);
            this.this_SetUnpackedValueOfCollectionReadOnlyPropertySetUnpackedValueOfCollectionReadOnlyPropertyDelegate = new System.Action<MsgPack.Serialization.AnnotatedClass, System.Collections.Generic.List<int>>(this.SetUnpackedValueOfCollectionReadOnlyProperty);
            this.this_UnpackValueOfCollectionReadOnlyPropertyUnpackValueOfCollectionReadOnlyPropertyDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.AnnotatedClass, int, int>(this.UnpackValueOfCollectionReadOnlyProperty);
        }
        
        private void PackValueOfAlias(MsgPack.Packer packer, MsgPack.Serialization.AnnotatedClass objectTree) {
            this._serializer0.PackTo(packer, objectTree.PublicProperty);
        }
        
        private void PackValueOfPublicField(MsgPack.Packer packer, MsgPack.Serialization.AnnotatedClass objectTree) {
            this._serializer0.PackTo(packer, objectTree.PublicField);
        }
        
        private void PackMemberPlaceHolder(MsgPack.Packer packer, MsgPack.Serialization.AnnotatedClass objectTree) {
            packer.PackNull();
        }
        
        private void PackValueOfNonPublicProperty(MsgPack.Packer packer, MsgPack.Serialization.AnnotatedClass objectTree) {
            this._serializer0.PackTo(packer, ((int)(this._methodBaseAnnotatedClass_get_NonPublicProperty0.Invoke(objectTree, null))));
        }
        
        private void PackValueOfNonPublicField(MsgPack.Packer packer, MsgPack.Serialization.AnnotatedClass objectTree) {
            this._serializer0.PackTo(packer, ((int)(this._fieldAnnotatedClass_NonPublicField0.GetValue(objectTree))));
        }
        
        private void PackValueOfNonSerializedPublicField(MsgPack.Packer packer, MsgPack.Serialization.AnnotatedClass objectTree) {
            this._serializer0.PackTo(packer, objectTree.NonSerializedPublicField);
        }
        
        private void PackValueOfNonSerializedNonPublicField(MsgPack.Packer packer, MsgPack.Serialization.AnnotatedClass objectTree) {
            this._serializer0.PackTo(packer, ((int)(this._fieldAnnotatedClass_NonSerializedNonPublicField1.GetValue(objectTree))));
        }
        
        private void PackValueOfCollectionReadOnlyProperty(MsgPack.Packer packer, MsgPack.Serialization.AnnotatedClass objectTree) {
            this._serializer1.PackTo(packer, objectTree.CollectionReadOnlyProperty);
        }
        
        protected internal override void PackToCore(MsgPack.Packer packer, MsgPack.Serialization.AnnotatedClass objectTree) {
            if ((this.OwnerContext.SerializationMethod == MsgPack.Serialization.SerializationMethod.Array)) {
                MsgPack.Serialization.PackHelpers.PackToArray(packer, objectTree, this._packOperationList);
            }
            else {
                MsgPack.Serialization.PackHelpers.PackToMap(packer, objectTree, this._packOperationTable);
            }
        }
        
        private void SetUnpackedValueOfPublicProperty(MsgPack.Serialization.AnnotatedClass unpackingContext, int unpackedValue) {
            unpackingContext.PublicProperty = unpackedValue;
        }
        
        private void UnpackValueOfAlias(MsgPack.Unpacker unpacker, MsgPack.Serialization.AnnotatedClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "Alias", MsgPack.Serialization.NilImplication.MemberDefault, this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueUnpackInt32ValueDelegate, this.this_SetUnpackedValueOfPublicPropertySetUnpackedValueOfPublicPropertyDelegate);
        }
        
        private void SetUnpackedValueOfPublicField(MsgPack.Serialization.AnnotatedClass unpackingContext, int unpackedValue) {
            unpackingContext.PublicField = unpackedValue;
        }
        
        private void UnpackValueOfPublicField(MsgPack.Unpacker unpacker, MsgPack.Serialization.AnnotatedClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "PublicField", MsgPack.Serialization.NilImplication.MemberDefault, this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueUnpackInt32ValueDelegate, this.this_SetUnpackedValueOfPublicFieldSetUnpackedValueOfPublicFieldDelegate);
        }
        
        private void UnpackMemberPlaceHolder(MsgPack.Unpacker unpacker, MsgPack.Serialization.AnnotatedClass unpackingContext, int indexOfItem, int itemsCount) {
            unpacker.Read();
        }
        
        private void SetUnpackedValueOfNonPublicProperty(MsgPack.Serialization.AnnotatedClass unpackingContext, int unpackedValue) {
            this._methodBaseAnnotatedClass_set_NonPublicProperty1.Invoke(unpackingContext, new object[] {
                        ((object)(unpackedValue))});
        }
        
        private void UnpackValueOfNonPublicProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.AnnotatedClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "NonPublicProperty", MsgPack.Serialization.NilImplication.MemberDefault, this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueUnpackInt32ValueDelegate, this.this_SetUnpackedValueOfNonPublicPropertySetUnpackedValueOfNonPublicPropertyDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicField(MsgPack.Serialization.AnnotatedClass unpackingContext, int unpackedValue) {
            this._fieldAnnotatedClass_NonPublicField0.SetValue(unpackingContext, ((object)(unpackedValue)));
        }
        
        private void UnpackValueOfNonPublicField(MsgPack.Unpacker unpacker, MsgPack.Serialization.AnnotatedClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "NonPublicField", MsgPack.Serialization.NilImplication.MemberDefault, this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueUnpackInt32ValueDelegate, this.this_SetUnpackedValueOfNonPublicFieldSetUnpackedValueOfNonPublicFieldDelegate);
        }
        
        private void SetUnpackedValueOfNonSerializedPublicField(MsgPack.Serialization.AnnotatedClass unpackingContext, int unpackedValue) {
            unpackingContext.NonSerializedPublicField = unpackedValue;
        }
        
        private void UnpackValueOfNonSerializedPublicField(MsgPack.Unpacker unpacker, MsgPack.Serialization.AnnotatedClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "NonSerializedPublicField", MsgPack.Serialization.NilImplication.MemberDefault, this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueUnpackInt32ValueDelegate, this.this_SetUnpackedValueOfNonSerializedPublicFieldSetUnpackedValueOfNonSerializedPublicFieldDelegate);
        }
        
        private void SetUnpackedValueOfNonSerializedNonPublicField(MsgPack.Serialization.AnnotatedClass unpackingContext, int unpackedValue) {
            this._fieldAnnotatedClass_NonSerializedNonPublicField1.SetValue(unpackingContext, ((object)(unpackedValue)));
        }
        
        private void UnpackValueOfNonSerializedNonPublicField(MsgPack.Unpacker unpacker, MsgPack.Serialization.AnnotatedClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "NonSerializedNonPublicField", MsgPack.Serialization.NilImplication.MemberDefault, this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueUnpackInt32ValueDelegate, this.this_SetUnpackedValueOfNonSerializedNonPublicFieldSetUnpackedValueOfNonSerializedNonPublicFieldDelegate);
        }
        
        private void SetUnpackedValueOfCollectionReadOnlyProperty(MsgPack.Serialization.AnnotatedClass unpackingContext, System.Collections.Generic.List<int> unpackedValue) {
            System.Collections.Generic.List<int>.Enumerator enumerator = unpackedValue.GetEnumerator();
            int current;
            try {
                for (
                ; enumerator.MoveNext(); 
                ) {
                    current = enumerator.Current;
                    unpackingContext.CollectionReadOnlyProperty.Add(current);
                }
            }
            finally {
                enumerator.Dispose();
            }
        }
        
        private void UnpackValueOfCollectionReadOnlyProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.AnnotatedClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer1, itemsCount, indexOfItem, typeof(System.Collections.Generic.List<int>), "CollectionReadOnlyProperty", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfCollectionReadOnlyPropertySetUnpackedValueOfCollectionReadOnlyPropertyDelegate);
        }
        
        protected internal override MsgPack.Serialization.AnnotatedClass UnpackFromCore(MsgPack.Unpacker unpacker) {
            MsgPack.Serialization.AnnotatedClass result = default(MsgPack.Serialization.AnnotatedClass);
            result = new MsgPack.Serialization.AnnotatedClass();
            if (unpacker.IsArrayHeader) {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromArray(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<MsgPack.Serialization.AnnotatedClass>(), this._memberNames, this._unpackOperationList);
            }
            else {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromMap(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<MsgPack.Serialization.AnnotatedClass>(), this._unpackOperationTable);
            }
        }
    }
}
