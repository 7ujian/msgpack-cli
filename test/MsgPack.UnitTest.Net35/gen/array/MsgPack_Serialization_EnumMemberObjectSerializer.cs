//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.8670
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MsgPack.Serialization.GeneratedSerializers.ArrayBased {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MsgPack.Serialization.CodeDomSerializers.CodeDomSerializerBuilder", "0.6.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class MsgPack_Serialization_EnumMemberObjectSerializer : MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.EnumMemberObject> {
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.EnumByName> _serializer0;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.EnumByName> _serializer1;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.EnumByName> _serializer2;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.EnumByUnderlyingValue> _serializer3;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.EnumByUnderlyingValue> _serializer4;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.EnumByUnderlyingValue> _serializer5;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.EnumDefault> _serializer6;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.EnumDefault> _serializer7;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.EnumDefault> _serializer8;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Packer, MsgPack.Serialization.EnumMemberObject>> _packOperationList;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<MsgPack.Serialization.EnumByName>> _serializer9;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<MsgPack.Serialization.EnumByName>> _serializer10;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<MsgPack.Serialization.EnumByName>> _serializer11;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<MsgPack.Serialization.EnumByUnderlyingValue>> _serializer12;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<MsgPack.Serialization.EnumByUnderlyingValue>> _serializer13;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<MsgPack.Serialization.EnumByUnderlyingValue>> _serializer14;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<MsgPack.Serialization.EnumDefault>> _serializer15;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<MsgPack.Serialization.EnumDefault>> _serializer16;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<MsgPack.Serialization.EnumDefault>> _serializer17;
        
        private System.Collections.Generic.IList<string> _memberNames;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>> _unpackOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>> _unpackOperationTable;
        
        public MsgPack_Serialization_EnumMemberObjectSerializer(MsgPack.Serialization.SerializationContext context) : 
                base(context) {
            this._serializer0 = context.GetSerializer<MsgPack.Serialization.EnumByName>(MsgPack.Serialization.EnumMessagePackSerializerHelpers.DetermineEnumSerializationMethod(context, typeof(MsgPack.Serialization.EnumByName), MsgPack.Serialization.EnumMemberSerializationMethod.ByName));
            this._serializer1 = context.GetSerializer<MsgPack.Serialization.EnumByName>(MsgPack.Serialization.EnumMessagePackSerializerHelpers.DetermineEnumSerializationMethod(context, typeof(MsgPack.Serialization.EnumByName), MsgPack.Serialization.EnumMemberSerializationMethod.ByUnderlyingValue));
            this._serializer2 = context.GetSerializer<MsgPack.Serialization.EnumByName>(MsgPack.Serialization.EnumMessagePackSerializerHelpers.DetermineEnumSerializationMethod(context, typeof(MsgPack.Serialization.EnumByName), MsgPack.Serialization.EnumMemberSerializationMethod.Default));
            this._serializer3 = context.GetSerializer<MsgPack.Serialization.EnumByUnderlyingValue>(MsgPack.Serialization.EnumMessagePackSerializerHelpers.DetermineEnumSerializationMethod(context, typeof(MsgPack.Serialization.EnumByUnderlyingValue), MsgPack.Serialization.EnumMemberSerializationMethod.ByName));
            this._serializer4 = context.GetSerializer<MsgPack.Serialization.EnumByUnderlyingValue>(MsgPack.Serialization.EnumMessagePackSerializerHelpers.DetermineEnumSerializationMethod(context, typeof(MsgPack.Serialization.EnumByUnderlyingValue), MsgPack.Serialization.EnumMemberSerializationMethod.ByUnderlyingValue));
            this._serializer5 = context.GetSerializer<MsgPack.Serialization.EnumByUnderlyingValue>(MsgPack.Serialization.EnumMessagePackSerializerHelpers.DetermineEnumSerializationMethod(context, typeof(MsgPack.Serialization.EnumByUnderlyingValue), MsgPack.Serialization.EnumMemberSerializationMethod.Default));
            this._serializer6 = context.GetSerializer<MsgPack.Serialization.EnumDefault>(MsgPack.Serialization.EnumMessagePackSerializerHelpers.DetermineEnumSerializationMethod(context, typeof(MsgPack.Serialization.EnumDefault), MsgPack.Serialization.EnumMemberSerializationMethod.ByName));
            this._serializer7 = context.GetSerializer<MsgPack.Serialization.EnumDefault>(MsgPack.Serialization.EnumMessagePackSerializerHelpers.DetermineEnumSerializationMethod(context, typeof(MsgPack.Serialization.EnumDefault), MsgPack.Serialization.EnumMemberSerializationMethod.ByUnderlyingValue));
            this._serializer8 = context.GetSerializer<MsgPack.Serialization.EnumDefault>(MsgPack.Serialization.EnumMessagePackSerializerHelpers.DetermineEnumSerializationMethod(context, typeof(MsgPack.Serialization.EnumDefault), MsgPack.Serialization.EnumMemberSerializationMethod.Default));
            MsgPack.Serialization.PolymorphismSchema schema0 = default(MsgPack.Serialization.PolymorphismSchema);
            schema0 = null;
            this._serializer9 = context.GetSerializer<System.Nullable<MsgPack.Serialization.EnumByName>>(schema0);
            MsgPack.Serialization.PolymorphismSchema schema1 = default(MsgPack.Serialization.PolymorphismSchema);
            schema1 = null;
            this._serializer10 = context.GetSerializer<System.Nullable<MsgPack.Serialization.EnumByName>>(schema1);
            MsgPack.Serialization.PolymorphismSchema schema2 = default(MsgPack.Serialization.PolymorphismSchema);
            schema2 = null;
            this._serializer11 = context.GetSerializer<System.Nullable<MsgPack.Serialization.EnumByName>>(schema2);
            MsgPack.Serialization.PolymorphismSchema schema3 = default(MsgPack.Serialization.PolymorphismSchema);
            schema3 = null;
            this._serializer12 = context.GetSerializer<System.Nullable<MsgPack.Serialization.EnumByUnderlyingValue>>(schema3);
            MsgPack.Serialization.PolymorphismSchema schema4 = default(MsgPack.Serialization.PolymorphismSchema);
            schema4 = null;
            this._serializer13 = context.GetSerializer<System.Nullable<MsgPack.Serialization.EnumByUnderlyingValue>>(schema4);
            MsgPack.Serialization.PolymorphismSchema schema5 = default(MsgPack.Serialization.PolymorphismSchema);
            schema5 = null;
            this._serializer14 = context.GetSerializer<System.Nullable<MsgPack.Serialization.EnumByUnderlyingValue>>(schema5);
            MsgPack.Serialization.PolymorphismSchema schema6 = default(MsgPack.Serialization.PolymorphismSchema);
            schema6 = null;
            this._serializer15 = context.GetSerializer<System.Nullable<MsgPack.Serialization.EnumDefault>>(schema6);
            MsgPack.Serialization.PolymorphismSchema schema7 = default(MsgPack.Serialization.PolymorphismSchema);
            schema7 = null;
            this._serializer16 = context.GetSerializer<System.Nullable<MsgPack.Serialization.EnumDefault>>(schema7);
            MsgPack.Serialization.PolymorphismSchema schema8 = default(MsgPack.Serialization.PolymorphismSchema);
            schema8 = null;
            this._serializer17 = context.GetSerializer<System.Nullable<MsgPack.Serialization.EnumDefault>>(schema8);
            System.Action<MsgPack.Packer, MsgPack.Serialization.EnumMemberObject>[] packOperationList = default(System.Action<MsgPack.Packer, MsgPack.Serialization.EnumMemberObject>[]);
            packOperationList = new System.Action<MsgPack.Packer, MsgPack.Serialization.EnumMemberObject>[9];
            packOperationList[0] = new System.Action<MsgPack.Packer, MsgPack.Serialization.EnumMemberObject>(this.PackValueOfByNameByNameProperty);
            packOperationList[1] = new System.Action<MsgPack.Packer, MsgPack.Serialization.EnumMemberObject>(this.PackValueOfByNameByUnderlyingValueProperty);
            packOperationList[2] = new System.Action<MsgPack.Packer, MsgPack.Serialization.EnumMemberObject>(this.PackValueOfByNameDefaultProperty);
            packOperationList[3] = new System.Action<MsgPack.Packer, MsgPack.Serialization.EnumMemberObject>(this.PackValueOfByUnderlyingValueByNameProperty);
            packOperationList[4] = new System.Action<MsgPack.Packer, MsgPack.Serialization.EnumMemberObject>(this.PackValueOfByUnderlyingValueByUnderlyingValueProperty);
            packOperationList[5] = new System.Action<MsgPack.Packer, MsgPack.Serialization.EnumMemberObject>(this.PackValueOfByUnderlyingValueDefaultProperty);
            packOperationList[6] = new System.Action<MsgPack.Packer, MsgPack.Serialization.EnumMemberObject>(this.PackValueOfDefaultByNameProperty);
            packOperationList[7] = new System.Action<MsgPack.Packer, MsgPack.Serialization.EnumMemberObject>(this.PackValueOfDefaultByUnderlyingValueProperty);
            packOperationList[8] = new System.Action<MsgPack.Packer, MsgPack.Serialization.EnumMemberObject>(this.PackValueOfDefaultDefaultProperty);
            this._packOperationList = packOperationList;
            System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>[] unpackOperationList = default(System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>[]);
            unpackOperationList = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>[9];
            unpackOperationList[0] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfByNameByNameProperty);
            unpackOperationList[1] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfByNameByUnderlyingValueProperty);
            unpackOperationList[2] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfByNameDefaultProperty);
            unpackOperationList[3] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfByUnderlyingValueByNameProperty);
            unpackOperationList[4] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfByUnderlyingValueByUnderlyingValueProperty);
            unpackOperationList[5] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfByUnderlyingValueDefaultProperty);
            unpackOperationList[6] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfDefaultByNameProperty);
            unpackOperationList[7] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfDefaultByUnderlyingValueProperty);
            unpackOperationList[8] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfDefaultDefaultProperty);
            this._unpackOperationList = unpackOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>> unpackOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>>);
            unpackOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>>(9);
            unpackOperationTable["ByNameByNameProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfByNameByNameProperty);
            unpackOperationTable["ByNameByUnderlyingValueProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfByNameByUnderlyingValueProperty);
            unpackOperationTable["ByNameDefaultProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfByNameDefaultProperty);
            unpackOperationTable["ByUnderlyingValueByNameProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfByUnderlyingValueByNameProperty);
            unpackOperationTable["ByUnderlyingValueByUnderlyingValueProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfByUnderlyingValueByUnderlyingValueProperty);
            unpackOperationTable["ByUnderlyingValueDefaultProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfByUnderlyingValueDefaultProperty);
            unpackOperationTable["DefaultByNameProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfDefaultByNameProperty);
            unpackOperationTable["DefaultByUnderlyingValueProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfDefaultByUnderlyingValueProperty);
            unpackOperationTable["DefaultDefaultProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.EnumMemberObject, int>(this.UnpackValueOfDefaultDefaultProperty);
            this._unpackOperationTable = unpackOperationTable;
            this._memberNames = new string[] {
                    "ByNameByNameProperty",
                    "ByNameByUnderlyingValueProperty",
                    "ByNameDefaultProperty",
                    "ByUnderlyingValueByNameProperty",
                    "ByUnderlyingValueByUnderlyingValueProperty",
                    "ByUnderlyingValueDefaultProperty",
                    "DefaultByNameProperty",
                    "DefaultByUnderlyingValueProperty",
                    "DefaultDefaultProperty"};
        }
        
        private void PackValueOfByNameByNameProperty(MsgPack.Packer packer, MsgPack.Serialization.EnumMemberObject objectTree) {
            this._serializer0.PackTo(packer, objectTree.ByNameByNameProperty);
        }
        
        private void PackValueOfByNameByUnderlyingValueProperty(MsgPack.Packer packer, MsgPack.Serialization.EnumMemberObject objectTree) {
            this._serializer1.PackTo(packer, objectTree.ByNameByUnderlyingValueProperty);
        }
        
        private void PackValueOfByNameDefaultProperty(MsgPack.Packer packer, MsgPack.Serialization.EnumMemberObject objectTree) {
            this._serializer2.PackTo(packer, objectTree.ByNameDefaultProperty);
        }
        
        private void PackValueOfByUnderlyingValueByNameProperty(MsgPack.Packer packer, MsgPack.Serialization.EnumMemberObject objectTree) {
            this._serializer3.PackTo(packer, objectTree.ByUnderlyingValueByNameProperty);
        }
        
        private void PackValueOfByUnderlyingValueByUnderlyingValueProperty(MsgPack.Packer packer, MsgPack.Serialization.EnumMemberObject objectTree) {
            this._serializer4.PackTo(packer, objectTree.ByUnderlyingValueByUnderlyingValueProperty);
        }
        
        private void PackValueOfByUnderlyingValueDefaultProperty(MsgPack.Packer packer, MsgPack.Serialization.EnumMemberObject objectTree) {
            this._serializer5.PackTo(packer, objectTree.ByUnderlyingValueDefaultProperty);
        }
        
        private void PackValueOfDefaultByNameProperty(MsgPack.Packer packer, MsgPack.Serialization.EnumMemberObject objectTree) {
            this._serializer6.PackTo(packer, objectTree.DefaultByNameProperty);
        }
        
        private void PackValueOfDefaultByUnderlyingValueProperty(MsgPack.Packer packer, MsgPack.Serialization.EnumMemberObject objectTree) {
            this._serializer7.PackTo(packer, objectTree.DefaultByUnderlyingValueProperty);
        }
        
        private void PackValueOfDefaultDefaultProperty(MsgPack.Packer packer, MsgPack.Serialization.EnumMemberObject objectTree) {
            this._serializer8.PackTo(packer, objectTree.DefaultDefaultProperty);
        }
        
        protected internal override void PackToCore(MsgPack.Packer packer, MsgPack.Serialization.EnumMemberObject objectTree) {
            MsgPack.Serialization.PackHelpers.PackToArray(packer, objectTree, this._packOperationList);
        }
        
        private void UnpackValueOfByNameByNameProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.EnumMemberObject unpackingContext, int indexOfItem) {
            System.Nullable<MsgPack.Serialization.EnumByName> nullable = default(System.Nullable<MsgPack.Serialization.EnumByName>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ByNameByNameProperty", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable = this._serializer9.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable = default(MsgPack.Unpacker);
                disposable = unpacker.ReadSubtree();
                try {
                    nullable = this._serializer9.UnpackFrom(disposable);
                }
                finally {
                    if (((disposable == null) 
                                == false)) {
                        disposable.Dispose();
                    }
                }
            }
            if (nullable.HasValue) {
                unpackingContext.ByNameByNameProperty = nullable.Value;
            }
        }
        
        private void UnpackValueOfByNameByUnderlyingValueProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.EnumMemberObject unpackingContext, int indexOfItem) {
            System.Nullable<MsgPack.Serialization.EnumByName> nullable0 = default(System.Nullable<MsgPack.Serialization.EnumByName>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ByNameByUnderlyingValueProperty", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable0 = this._serializer10.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable0 = default(MsgPack.Unpacker);
                disposable0 = unpacker.ReadSubtree();
                try {
                    nullable0 = this._serializer10.UnpackFrom(disposable0);
                }
                finally {
                    if (((disposable0 == null) 
                                == false)) {
                        disposable0.Dispose();
                    }
                }
            }
            if (nullable0.HasValue) {
                unpackingContext.ByNameByUnderlyingValueProperty = nullable0.Value;
            }
        }
        
        private void UnpackValueOfByNameDefaultProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.EnumMemberObject unpackingContext, int indexOfItem) {
            System.Nullable<MsgPack.Serialization.EnumByName> nullable1 = default(System.Nullable<MsgPack.Serialization.EnumByName>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ByNameDefaultProperty", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable1 = this._serializer11.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable1 = default(MsgPack.Unpacker);
                disposable1 = unpacker.ReadSubtree();
                try {
                    nullable1 = this._serializer11.UnpackFrom(disposable1);
                }
                finally {
                    if (((disposable1 == null) 
                                == false)) {
                        disposable1.Dispose();
                    }
                }
            }
            if (nullable1.HasValue) {
                unpackingContext.ByNameDefaultProperty = nullable1.Value;
            }
        }
        
        private void UnpackValueOfByUnderlyingValueByNameProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.EnumMemberObject unpackingContext, int indexOfItem) {
            System.Nullable<MsgPack.Serialization.EnumByUnderlyingValue> nullable2 = default(System.Nullable<MsgPack.Serialization.EnumByUnderlyingValue>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ByUnderlyingValueByNameProperty", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable2 = this._serializer12.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable2 = default(MsgPack.Unpacker);
                disposable2 = unpacker.ReadSubtree();
                try {
                    nullable2 = this._serializer12.UnpackFrom(disposable2);
                }
                finally {
                    if (((disposable2 == null) 
                                == false)) {
                        disposable2.Dispose();
                    }
                }
            }
            if (nullable2.HasValue) {
                unpackingContext.ByUnderlyingValueByNameProperty = nullable2.Value;
            }
        }
        
        private void UnpackValueOfByUnderlyingValueByUnderlyingValueProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.EnumMemberObject unpackingContext, int indexOfItem) {
            System.Nullable<MsgPack.Serialization.EnumByUnderlyingValue> nullable3 = default(System.Nullable<MsgPack.Serialization.EnumByUnderlyingValue>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ByUnderlyingValueByUnderlyingValueProperty", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable3 = this._serializer13.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable3 = default(MsgPack.Unpacker);
                disposable3 = unpacker.ReadSubtree();
                try {
                    nullable3 = this._serializer13.UnpackFrom(disposable3);
                }
                finally {
                    if (((disposable3 == null) 
                                == false)) {
                        disposable3.Dispose();
                    }
                }
            }
            if (nullable3.HasValue) {
                unpackingContext.ByUnderlyingValueByUnderlyingValueProperty = nullable3.Value;
            }
        }
        
        private void UnpackValueOfByUnderlyingValueDefaultProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.EnumMemberObject unpackingContext, int indexOfItem) {
            System.Nullable<MsgPack.Serialization.EnumByUnderlyingValue> nullable4 = default(System.Nullable<MsgPack.Serialization.EnumByUnderlyingValue>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ByUnderlyingValueDefaultProperty", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable4 = this._serializer14.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable4 = default(MsgPack.Unpacker);
                disposable4 = unpacker.ReadSubtree();
                try {
                    nullable4 = this._serializer14.UnpackFrom(disposable4);
                }
                finally {
                    if (((disposable4 == null) 
                                == false)) {
                        disposable4.Dispose();
                    }
                }
            }
            if (nullable4.HasValue) {
                unpackingContext.ByUnderlyingValueDefaultProperty = nullable4.Value;
            }
        }
        
        private void UnpackValueOfDefaultByNameProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.EnumMemberObject unpackingContext, int indexOfItem) {
            System.Nullable<MsgPack.Serialization.EnumDefault> nullable5 = default(System.Nullable<MsgPack.Serialization.EnumDefault>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "DefaultByNameProperty", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable5 = this._serializer15.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable5 = default(MsgPack.Unpacker);
                disposable5 = unpacker.ReadSubtree();
                try {
                    nullable5 = this._serializer15.UnpackFrom(disposable5);
                }
                finally {
                    if (((disposable5 == null) 
                                == false)) {
                        disposable5.Dispose();
                    }
                }
            }
            if (nullable5.HasValue) {
                unpackingContext.DefaultByNameProperty = nullable5.Value;
            }
        }
        
        private void UnpackValueOfDefaultByUnderlyingValueProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.EnumMemberObject unpackingContext, int indexOfItem) {
            System.Nullable<MsgPack.Serialization.EnumDefault> nullable6 = default(System.Nullable<MsgPack.Serialization.EnumDefault>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "DefaultByUnderlyingValueProperty", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable6 = this._serializer16.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable6 = default(MsgPack.Unpacker);
                disposable6 = unpacker.ReadSubtree();
                try {
                    nullable6 = this._serializer16.UnpackFrom(disposable6);
                }
                finally {
                    if (((disposable6 == null) 
                                == false)) {
                        disposable6.Dispose();
                    }
                }
            }
            if (nullable6.HasValue) {
                unpackingContext.DefaultByUnderlyingValueProperty = nullable6.Value;
            }
        }
        
        private void UnpackValueOfDefaultDefaultProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.EnumMemberObject unpackingContext, int indexOfItem) {
            System.Nullable<MsgPack.Serialization.EnumDefault> nullable7 = default(System.Nullable<MsgPack.Serialization.EnumDefault>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "DefaultDefaultProperty", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable7 = this._serializer17.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable7 = default(MsgPack.Unpacker);
                disposable7 = unpacker.ReadSubtree();
                try {
                    nullable7 = this._serializer17.UnpackFrom(disposable7);
                }
                finally {
                    if (((disposable7 == null) 
                                == false)) {
                        disposable7.Dispose();
                    }
                }
            }
            if (nullable7.HasValue) {
                unpackingContext.DefaultDefaultProperty = nullable7.Value;
            }
        }
        
        protected internal override MsgPack.Serialization.EnumMemberObject UnpackFromCore(MsgPack.Unpacker unpacker) {
            MsgPack.Serialization.EnumMemberObject result = default(MsgPack.Serialization.EnumMemberObject);
            result = new MsgPack.Serialization.EnumMemberObject();
            if (unpacker.IsArrayHeader) {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromArray(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<MsgPack.Serialization.EnumMemberObject>(), this._memberNames, this._unpackOperationList);
            }
            else {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromMap(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<MsgPack.Serialization.EnumMemberObject>(), this._unpackOperationTable);
            }
        }
    }
}
