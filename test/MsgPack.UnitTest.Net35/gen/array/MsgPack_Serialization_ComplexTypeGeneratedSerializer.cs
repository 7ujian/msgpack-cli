//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.8670
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MsgPack.Serialization.GeneratedSerializers.ArrayBased {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MsgPack.Serialization.CodeDomSerializers.CodeDomSerializerBuilder", "0.6.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class MsgPack_Serialization_ComplexTypeGeneratedSerializer : MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.ComplexTypeGenerated> {
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.AddOnlyCollection<System.DateTime>> _serializer0;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.AddOnlyCollection<MsgPack.MessagePackObject>> _serializer1;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.AddOnlyCollection<object>> _serializer2;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.ArrayList> _serializer3;
        
        private MsgPack.Serialization.MessagePackSerializer<System.ArraySegment<byte>> _serializer4;
        
        private MsgPack.Serialization.MessagePackSerializer<System.ArraySegment<decimal>> _serializer5;
        
        private MsgPack.Serialization.MessagePackSerializer<System.ArraySegment<int>> _serializer6;
        
        private MsgPack.Serialization.MessagePackSerializer<byte[]> _serializer7;
        
        private MsgPack.Serialization.MessagePackSerializer<byte> _serializer8;
        
        private MsgPack.Serialization.MessagePackSerializer<char[]> _serializer9;
        
        private MsgPack.Serialization.MessagePackSerializer<char> _serializer10;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.ObjectModel.Collection<MsgPack.MessagePackObject>> _serializer11;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.ObjectModel.Collection<System.DateTime>> _serializer12;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.ObjectModel.Collection<object>> _serializer13;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Globalization.CultureInfo> _serializer14;
        
        private MsgPack.Serialization.MessagePackSerializer<System.DateTime> _serializer15;
        
        private MsgPack.Serialization.MessagePackSerializer<System.DateTimeOffset> _serializer16;
        
        private MsgPack.Serialization.MessagePackSerializer<decimal> _serializer17;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.Dictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>> _serializer18;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.DictionaryEntry> _serializer19;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.Dictionary<object, object>> _serializer20;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.Dictionary<string, System.DateTime>> _serializer21;
        
        private MsgPack.Serialization.MessagePackSerializer<bool> _serializer22;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Runtime.InteropServices.ComTypes.FILETIME> _serializer23;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Guid> _serializer24;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.HashSet<MsgPack.MessagePackObject>> _serializer25;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.HashSet<System.DateTime>> _serializer26;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.HashSet<object>> _serializer27;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Hashtable> _serializer28;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.ICollection<MsgPack.MessagePackObject>> _serializer29;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.ICollection<System.DateTime>> _serializer30;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.ICollection<object>> _serializer31;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.IDictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>> _serializer32;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.IDictionary<object, object>> _serializer33;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.IDictionary<string, System.DateTime>> _serializer34;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.IList<MsgPack.MessagePackObject>> _serializer35;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.IList<System.DateTime>> _serializer36;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.IList<object>> _serializer37;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Image> _serializer38;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>> _serializer39;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.List<MsgPack.MessagePackObject>> _serializer40;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.List<System.DateTime>> _serializer41;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.List<object>> _serializer42;
        
        private MsgPack.Serialization.MessagePackSerializer<int> _serializer43;
        
        private MsgPack.Serialization.MessagePackSerializer<long> _serializer44;
        
        private MsgPack.Serialization.MessagePackSerializer<ushort> _serializer45;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.MessagePackObject> _serializer46;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.MessagePackObject[]> _serializer47;
        
        private MsgPack.Serialization.MessagePackSerializer<object> _serializer48;
        
        private MsgPack.Serialization.MessagePackSerializer<object[]> _serializer49;
        
        private MsgPack.Serialization.MessagePackSerializer<string> _serializer50;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.StringKeyedCollection<System.DateTime>> _serializer51;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.StringKeyedCollection<MsgPack.MessagePackObject>> _serializer52;
        
        private MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.StringKeyedCollection<object>> _serializer53;
        
        private MsgPack.Serialization.MessagePackSerializer<System.TimeSpan> _serializer54;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Uri> _serializer55;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Version> _serializer56;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>> _packOperationList;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.ArraySegment<byte>>> _serializer57;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.ArraySegment<decimal>>> _serializer58;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.ArraySegment<int>>> _serializer59;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<char>> _serializer60;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.DateTime>> _serializer61;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.DateTimeOffset>> _serializer62;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<decimal>> _serializer63;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.Collections.DictionaryEntry>> _serializer64;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.Runtime.InteropServices.ComTypes.FILETIME>> _serializer65;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.Guid>> _serializer66;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>>> _serializer67;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Nullable<System.TimeSpan>> _serializer68;
        
        private System.Collections.Generic.IList<string> _memberNames;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>> _unpackOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>> _unpackOperationTable;
        
        public MsgPack_Serialization_ComplexTypeGeneratedSerializer(MsgPack.Serialization.SerializationContext context) : 
                base(context) {
            MsgPack.Serialization.PolymorphismSchema schema0 = default(MsgPack.Serialization.PolymorphismSchema);
            schema0 = null;
            this._serializer0 = context.GetSerializer<MsgPack.Serialization.AddOnlyCollection<System.DateTime>>(schema0);
            MsgPack.Serialization.PolymorphismSchema schema1 = default(MsgPack.Serialization.PolymorphismSchema);
            schema1 = null;
            this._serializer1 = context.GetSerializer<MsgPack.Serialization.AddOnlyCollection<MsgPack.MessagePackObject>>(schema1);
            MsgPack.Serialization.PolymorphismSchema schema2 = default(MsgPack.Serialization.PolymorphismSchema);
            schema2 = null;
            this._serializer2 = context.GetSerializer<MsgPack.Serialization.AddOnlyCollection<object>>(schema2);
            MsgPack.Serialization.PolymorphismSchema schema3 = default(MsgPack.Serialization.PolymorphismSchema);
            schema3 = null;
            this._serializer3 = context.GetSerializer<System.Collections.ArrayList>(schema3);
            MsgPack.Serialization.PolymorphismSchema schema4 = default(MsgPack.Serialization.PolymorphismSchema);
            schema4 = null;
            this._serializer4 = context.GetSerializer<System.ArraySegment<byte>>(schema4);
            MsgPack.Serialization.PolymorphismSchema schema5 = default(MsgPack.Serialization.PolymorphismSchema);
            schema5 = null;
            this._serializer5 = context.GetSerializer<System.ArraySegment<decimal>>(schema5);
            MsgPack.Serialization.PolymorphismSchema schema6 = default(MsgPack.Serialization.PolymorphismSchema);
            schema6 = null;
            this._serializer6 = context.GetSerializer<System.ArraySegment<int>>(schema6);
            MsgPack.Serialization.PolymorphismSchema schema7 = default(MsgPack.Serialization.PolymorphismSchema);
            schema7 = null;
            this._serializer7 = context.GetSerializer<byte[]>(schema7);
            MsgPack.Serialization.PolymorphismSchema schema8 = default(MsgPack.Serialization.PolymorphismSchema);
            schema8 = null;
            this._serializer8 = context.GetSerializer<byte>(schema8);
            MsgPack.Serialization.PolymorphismSchema schema9 = default(MsgPack.Serialization.PolymorphismSchema);
            schema9 = null;
            this._serializer9 = context.GetSerializer<char[]>(schema9);
            MsgPack.Serialization.PolymorphismSchema schema10 = default(MsgPack.Serialization.PolymorphismSchema);
            schema10 = null;
            this._serializer10 = context.GetSerializer<char>(schema10);
            MsgPack.Serialization.PolymorphismSchema schema11 = default(MsgPack.Serialization.PolymorphismSchema);
            schema11 = null;
            this._serializer11 = context.GetSerializer<System.Collections.ObjectModel.Collection<MsgPack.MessagePackObject>>(schema11);
            MsgPack.Serialization.PolymorphismSchema schema12 = default(MsgPack.Serialization.PolymorphismSchema);
            schema12 = null;
            this._serializer12 = context.GetSerializer<System.Collections.ObjectModel.Collection<System.DateTime>>(schema12);
            MsgPack.Serialization.PolymorphismSchema schema13 = default(MsgPack.Serialization.PolymorphismSchema);
            schema13 = null;
            this._serializer13 = context.GetSerializer<System.Collections.ObjectModel.Collection<object>>(schema13);
            MsgPack.Serialization.PolymorphismSchema schema14 = default(MsgPack.Serialization.PolymorphismSchema);
            schema14 = null;
            this._serializer14 = context.GetSerializer<System.Globalization.CultureInfo>(schema14);
            this._serializer15 = context.GetSerializer<System.DateTime>(MsgPack.Serialization.DateTimeMessagePackSerializerHelpers.DetermineDateTimeConversionMethod(context, MsgPack.Serialization.DateTimeMemberConversionMethod.Default));
            this._serializer16 = context.GetSerializer<System.DateTimeOffset>(MsgPack.Serialization.DateTimeMessagePackSerializerHelpers.DetermineDateTimeConversionMethod(context, MsgPack.Serialization.DateTimeMemberConversionMethod.Default));
            MsgPack.Serialization.PolymorphismSchema schema15 = default(MsgPack.Serialization.PolymorphismSchema);
            schema15 = null;
            this._serializer17 = context.GetSerializer<decimal>(schema15);
            MsgPack.Serialization.PolymorphismSchema schema16 = default(MsgPack.Serialization.PolymorphismSchema);
            schema16 = null;
            this._serializer18 = context.GetSerializer<System.Collections.Generic.Dictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>>(schema16);
            MsgPack.Serialization.PolymorphismSchema schema17 = default(MsgPack.Serialization.PolymorphismSchema);
            schema17 = null;
            this._serializer19 = context.GetSerializer<System.Collections.DictionaryEntry>(schema17);
            MsgPack.Serialization.PolymorphismSchema schema18 = default(MsgPack.Serialization.PolymorphismSchema);
            schema18 = null;
            this._serializer20 = context.GetSerializer<System.Collections.Generic.Dictionary<object, object>>(schema18);
            MsgPack.Serialization.PolymorphismSchema schema19 = default(MsgPack.Serialization.PolymorphismSchema);
            schema19 = null;
            this._serializer21 = context.GetSerializer<System.Collections.Generic.Dictionary<string, System.DateTime>>(schema19);
            MsgPack.Serialization.PolymorphismSchema schema20 = default(MsgPack.Serialization.PolymorphismSchema);
            schema20 = null;
            this._serializer22 = context.GetSerializer<bool>(schema20);
            this._serializer23 = context.GetSerializer<System.Runtime.InteropServices.ComTypes.FILETIME>(MsgPack.Serialization.DateTimeMessagePackSerializerHelpers.DetermineDateTimeConversionMethod(context, MsgPack.Serialization.DateTimeMemberConversionMethod.Default));
            MsgPack.Serialization.PolymorphismSchema schema21 = default(MsgPack.Serialization.PolymorphismSchema);
            schema21 = null;
            this._serializer24 = context.GetSerializer<System.Guid>(schema21);
            MsgPack.Serialization.PolymorphismSchema schema22 = default(MsgPack.Serialization.PolymorphismSchema);
            schema22 = null;
            this._serializer25 = context.GetSerializer<System.Collections.Generic.HashSet<MsgPack.MessagePackObject>>(schema22);
            MsgPack.Serialization.PolymorphismSchema schema23 = default(MsgPack.Serialization.PolymorphismSchema);
            schema23 = null;
            this._serializer26 = context.GetSerializer<System.Collections.Generic.HashSet<System.DateTime>>(schema23);
            MsgPack.Serialization.PolymorphismSchema schema24 = default(MsgPack.Serialization.PolymorphismSchema);
            schema24 = null;
            this._serializer27 = context.GetSerializer<System.Collections.Generic.HashSet<object>>(schema24);
            MsgPack.Serialization.PolymorphismSchema schema25 = default(MsgPack.Serialization.PolymorphismSchema);
            schema25 = null;
            this._serializer28 = context.GetSerializer<System.Collections.Hashtable>(schema25);
            MsgPack.Serialization.PolymorphismSchema schema26 = default(MsgPack.Serialization.PolymorphismSchema);
            schema26 = null;
            this._serializer29 = context.GetSerializer<System.Collections.Generic.ICollection<MsgPack.MessagePackObject>>(schema26);
            MsgPack.Serialization.PolymorphismSchema schema27 = default(MsgPack.Serialization.PolymorphismSchema);
            schema27 = null;
            this._serializer30 = context.GetSerializer<System.Collections.Generic.ICollection<System.DateTime>>(schema27);
            MsgPack.Serialization.PolymorphismSchema schema28 = default(MsgPack.Serialization.PolymorphismSchema);
            schema28 = null;
            this._serializer31 = context.GetSerializer<System.Collections.Generic.ICollection<object>>(schema28);
            MsgPack.Serialization.PolymorphismSchema schema29 = default(MsgPack.Serialization.PolymorphismSchema);
            schema29 = null;
            this._serializer32 = context.GetSerializer<System.Collections.Generic.IDictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>>(schema29);
            MsgPack.Serialization.PolymorphismSchema schema30 = default(MsgPack.Serialization.PolymorphismSchema);
            schema30 = null;
            this._serializer33 = context.GetSerializer<System.Collections.Generic.IDictionary<object, object>>(schema30);
            MsgPack.Serialization.PolymorphismSchema schema31 = default(MsgPack.Serialization.PolymorphismSchema);
            schema31 = null;
            this._serializer34 = context.GetSerializer<System.Collections.Generic.IDictionary<string, System.DateTime>>(schema31);
            MsgPack.Serialization.PolymorphismSchema schema32 = default(MsgPack.Serialization.PolymorphismSchema);
            schema32 = null;
            this._serializer35 = context.GetSerializer<System.Collections.Generic.IList<MsgPack.MessagePackObject>>(schema32);
            MsgPack.Serialization.PolymorphismSchema schema33 = default(MsgPack.Serialization.PolymorphismSchema);
            schema33 = null;
            this._serializer36 = context.GetSerializer<System.Collections.Generic.IList<System.DateTime>>(schema33);
            MsgPack.Serialization.PolymorphismSchema schema34 = default(MsgPack.Serialization.PolymorphismSchema);
            schema34 = null;
            this._serializer37 = context.GetSerializer<System.Collections.Generic.IList<object>>(schema34);
            MsgPack.Serialization.PolymorphismSchema schema35 = default(MsgPack.Serialization.PolymorphismSchema);
            schema35 = null;
            this._serializer38 = context.GetSerializer<MsgPack.Image>(schema35);
            MsgPack.Serialization.PolymorphismSchema schema36 = default(MsgPack.Serialization.PolymorphismSchema);
            schema36 = null;
            this._serializer39 = context.GetSerializer<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>>(schema36);
            MsgPack.Serialization.PolymorphismSchema schema37 = default(MsgPack.Serialization.PolymorphismSchema);
            schema37 = null;
            this._serializer40 = context.GetSerializer<System.Collections.Generic.List<MsgPack.MessagePackObject>>(schema37);
            MsgPack.Serialization.PolymorphismSchema schema38 = default(MsgPack.Serialization.PolymorphismSchema);
            schema38 = null;
            this._serializer41 = context.GetSerializer<System.Collections.Generic.List<System.DateTime>>(schema38);
            MsgPack.Serialization.PolymorphismSchema schema39 = default(MsgPack.Serialization.PolymorphismSchema);
            schema39 = null;
            this._serializer42 = context.GetSerializer<System.Collections.Generic.List<object>>(schema39);
            MsgPack.Serialization.PolymorphismSchema schema40 = default(MsgPack.Serialization.PolymorphismSchema);
            schema40 = null;
            this._serializer43 = context.GetSerializer<int>(schema40);
            MsgPack.Serialization.PolymorphismSchema schema41 = default(MsgPack.Serialization.PolymorphismSchema);
            schema41 = null;
            this._serializer44 = context.GetSerializer<long>(schema41);
            MsgPack.Serialization.PolymorphismSchema schema42 = default(MsgPack.Serialization.PolymorphismSchema);
            schema42 = null;
            this._serializer45 = context.GetSerializer<ushort>(schema42);
            MsgPack.Serialization.PolymorphismSchema schema43 = default(MsgPack.Serialization.PolymorphismSchema);
            schema43 = null;
            this._serializer46 = context.GetSerializer<MsgPack.MessagePackObject>(schema43);
            MsgPack.Serialization.PolymorphismSchema schema44 = default(MsgPack.Serialization.PolymorphismSchema);
            schema44 = null;
            this._serializer47 = context.GetSerializer<MsgPack.MessagePackObject[]>(schema44);
            MsgPack.Serialization.PolymorphismSchema schema45 = default(MsgPack.Serialization.PolymorphismSchema);
            schema45 = null;
            this._serializer48 = context.GetSerializer<object>(schema45);
            MsgPack.Serialization.PolymorphismSchema schema46 = default(MsgPack.Serialization.PolymorphismSchema);
            schema46 = null;
            this._serializer49 = context.GetSerializer<object[]>(schema46);
            MsgPack.Serialization.PolymorphismSchema schema47 = default(MsgPack.Serialization.PolymorphismSchema);
            schema47 = null;
            this._serializer50 = context.GetSerializer<string>(schema47);
            MsgPack.Serialization.PolymorphismSchema schema48 = default(MsgPack.Serialization.PolymorphismSchema);
            schema48 = null;
            this._serializer51 = context.GetSerializer<MsgPack.Serialization.StringKeyedCollection<System.DateTime>>(schema48);
            MsgPack.Serialization.PolymorphismSchema schema49 = default(MsgPack.Serialization.PolymorphismSchema);
            schema49 = null;
            this._serializer52 = context.GetSerializer<MsgPack.Serialization.StringKeyedCollection<MsgPack.MessagePackObject>>(schema49);
            MsgPack.Serialization.PolymorphismSchema schema50 = default(MsgPack.Serialization.PolymorphismSchema);
            schema50 = null;
            this._serializer53 = context.GetSerializer<MsgPack.Serialization.StringKeyedCollection<object>>(schema50);
            MsgPack.Serialization.PolymorphismSchema schema51 = default(MsgPack.Serialization.PolymorphismSchema);
            schema51 = null;
            this._serializer54 = context.GetSerializer<System.TimeSpan>(schema51);
            MsgPack.Serialization.PolymorphismSchema schema52 = default(MsgPack.Serialization.PolymorphismSchema);
            schema52 = null;
            this._serializer55 = context.GetSerializer<System.Uri>(schema52);
            MsgPack.Serialization.PolymorphismSchema schema53 = default(MsgPack.Serialization.PolymorphismSchema);
            schema53 = null;
            this._serializer56 = context.GetSerializer<System.Version>(schema53);
            MsgPack.Serialization.PolymorphismSchema schema54 = default(MsgPack.Serialization.PolymorphismSchema);
            schema54 = null;
            this._serializer57 = context.GetSerializer<System.Nullable<System.ArraySegment<byte>>>(schema54);
            MsgPack.Serialization.PolymorphismSchema schema55 = default(MsgPack.Serialization.PolymorphismSchema);
            schema55 = null;
            this._serializer58 = context.GetSerializer<System.Nullable<System.ArraySegment<decimal>>>(schema55);
            MsgPack.Serialization.PolymorphismSchema schema56 = default(MsgPack.Serialization.PolymorphismSchema);
            schema56 = null;
            this._serializer59 = context.GetSerializer<System.Nullable<System.ArraySegment<int>>>(schema56);
            MsgPack.Serialization.PolymorphismSchema schema57 = default(MsgPack.Serialization.PolymorphismSchema);
            schema57 = null;
            this._serializer60 = context.GetSerializer<System.Nullable<char>>(schema57);
            this._serializer61 = context.GetSerializer<System.Nullable<System.DateTime>>(MsgPack.Serialization.DateTimeMessagePackSerializerHelpers.DetermineDateTimeConversionMethod(context, MsgPack.Serialization.DateTimeMemberConversionMethod.Default));
            MsgPack.Serialization.PolymorphismSchema schema58 = default(MsgPack.Serialization.PolymorphismSchema);
            schema58 = null;
            this._serializer62 = context.GetSerializer<System.Nullable<System.DateTimeOffset>>(schema58);
            MsgPack.Serialization.PolymorphismSchema schema59 = default(MsgPack.Serialization.PolymorphismSchema);
            schema59 = null;
            this._serializer63 = context.GetSerializer<System.Nullable<decimal>>(schema59);
            MsgPack.Serialization.PolymorphismSchema schema60 = default(MsgPack.Serialization.PolymorphismSchema);
            schema60 = null;
            this._serializer64 = context.GetSerializer<System.Nullable<System.Collections.DictionaryEntry>>(schema60);
            this._serializer65 = context.GetSerializer<System.Nullable<System.Runtime.InteropServices.ComTypes.FILETIME>>(MsgPack.Serialization.DateTimeMessagePackSerializerHelpers.DetermineDateTimeConversionMethod(context, MsgPack.Serialization.DateTimeMemberConversionMethod.Default));
            MsgPack.Serialization.PolymorphismSchema schema61 = default(MsgPack.Serialization.PolymorphismSchema);
            schema61 = null;
            this._serializer66 = context.GetSerializer<System.Nullable<System.Guid>>(schema61);
            MsgPack.Serialization.PolymorphismSchema schema62 = default(MsgPack.Serialization.PolymorphismSchema);
            schema62 = null;
            this._serializer67 = context.GetSerializer<System.Nullable<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>>>(schema62);
            MsgPack.Serialization.PolymorphismSchema schema63 = default(MsgPack.Serialization.PolymorphismSchema);
            schema63 = null;
            this._serializer68 = context.GetSerializer<System.Nullable<System.TimeSpan>>(schema63);
            System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>[] packOperationList = default(System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>[]);
            packOperationList = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>[67];
            packOperationList[0] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfAddOnlyCollection_DateTimeField);
            packOperationList[1] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfAddOnlyCollection_MessagePackObjectField);
            packOperationList[2] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfAddOnlyCollection_ObjectField);
            packOperationList[3] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfArrayListField);
            packOperationList[4] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfArraySegmentByteField);
            packOperationList[5] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfArraySegmentDecimalField);
            packOperationList[6] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfArraySegmentInt32Field);
            packOperationList[7] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfByteArrayField);
            packOperationList[8] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfByteField);
            packOperationList[9] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfCharArrayField);
            packOperationList[10] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfCharField);
            packOperationList[11] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfCollection_MessagePackObjectField);
            packOperationList[12] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfCollectionDateTimeField);
            packOperationList[13] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfCollectionObjectField);
            packOperationList[14] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfCurrentCultureField);
            packOperationList[15] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfDateTimeField);
            packOperationList[16] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfDateTimeOffsetField);
            packOperationList[17] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfDecimalField);
            packOperationList[18] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfDictionary_MessagePackObject_MessagePackObjectField);
            packOperationList[19] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfDictionaryEntryField);
            packOperationList[20] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfDictionaryObjectObjectField);
            packOperationList[21] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfDictionaryStringDateTimeField);
            packOperationList[22] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfFalseField);
            packOperationList[23] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfFILETIMEField);
            packOperationList[24] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfGuidField);
            packOperationList[25] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfHashSet_MessagePackObjectField);
            packOperationList[26] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfHashSetDateTimeField);
            packOperationList[27] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfHashSetObjectField);
            packOperationList[28] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfHashtableField);
            packOperationList[29] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfICollection_MessagePackObjectField);
            packOperationList[30] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfICollectionDateTimeField);
            packOperationList[31] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfICollectionObjectField);
            packOperationList[32] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfIDictionary_MessagePackObject_MessagePackObjectField);
            packOperationList[33] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfIDictionaryObjectObjectField);
            packOperationList[34] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfIDictionaryStringDateTimeField);
            packOperationList[35] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfIList_MessagePackObjectField);
            packOperationList[36] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfIListDateTimeField);
            packOperationList[37] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfIListObjectField);
            packOperationList[38] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfImage_Field);
            packOperationList[39] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfInvariantCultureField);
            packOperationList[40] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfKeyValuePairStringDateTimeOffsetField);
            packOperationList[41] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfList_MessagePackObjectField);
            packOperationList[42] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfListDateTimeField);
            packOperationList[43] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfListObjectField);
            packOperationList[44] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfMaxByteField);
            packOperationList[45] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfMaxInt32Field);
            packOperationList[46] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfMaxInt64Field);
            packOperationList[47] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfMaxUInt16Field);
            packOperationList[48] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfMessagePackObject_Field);
            packOperationList[49] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfMessagePackObjectArray_Field);
            packOperationList[50] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfMinInt32Field);
            packOperationList[51] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfMinInt64Field);
            packOperationList[52] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfNullField);
            packOperationList[53] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfObjectArrayField);
            packOperationList[54] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfObjectField);
            packOperationList[55] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfStringField);
            packOperationList[56] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfStringKeyedCollection_DateTimeField);
            packOperationList[57] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfStringKeyedCollection_MessagePackObjectField);
            packOperationList[58] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfStringKeyedCollection_ObjectField);
            packOperationList[59] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfTimeSpanField);
            packOperationList[60] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfTinyByteField);
            packOperationList[61] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfTinyInt32Field);
            packOperationList[62] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfTinyInt64Field);
            packOperationList[63] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfTinyUInt16Field);
            packOperationList[64] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfTrueField);
            packOperationList[65] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfUriField);
            packOperationList[66] = new System.Action<MsgPack.Packer, MsgPack.Serialization.ComplexTypeGenerated>(this.PackValueOfVersionField);
            this._packOperationList = packOperationList;
            System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>[] unpackOperationList = default(System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>[]);
            unpackOperationList = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>[67];
            unpackOperationList[0] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfAddOnlyCollection_DateTimeField);
            unpackOperationList[1] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfAddOnlyCollection_MessagePackObjectField);
            unpackOperationList[2] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfAddOnlyCollection_ObjectField);
            unpackOperationList[3] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfArrayListField);
            unpackOperationList[4] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfArraySegmentByteField);
            unpackOperationList[5] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfArraySegmentDecimalField);
            unpackOperationList[6] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfArraySegmentInt32Field);
            unpackOperationList[7] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfByteArrayField);
            unpackOperationList[8] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfByteField);
            unpackOperationList[9] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfCharArrayField);
            unpackOperationList[10] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfCharField);
            unpackOperationList[11] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfCollection_MessagePackObjectField);
            unpackOperationList[12] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfCollectionDateTimeField);
            unpackOperationList[13] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfCollectionObjectField);
            unpackOperationList[14] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfCurrentCultureField);
            unpackOperationList[15] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDateTimeField);
            unpackOperationList[16] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDateTimeOffsetField);
            unpackOperationList[17] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDecimalField);
            unpackOperationList[18] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDictionary_MessagePackObject_MessagePackObjectField);
            unpackOperationList[19] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDictionaryEntryField);
            unpackOperationList[20] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDictionaryObjectObjectField);
            unpackOperationList[21] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDictionaryStringDateTimeField);
            unpackOperationList[22] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfFalseField);
            unpackOperationList[23] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfFILETIMEField);
            unpackOperationList[24] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfGuidField);
            unpackOperationList[25] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfHashSet_MessagePackObjectField);
            unpackOperationList[26] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfHashSetDateTimeField);
            unpackOperationList[27] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfHashSetObjectField);
            unpackOperationList[28] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfHashtableField);
            unpackOperationList[29] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfICollection_MessagePackObjectField);
            unpackOperationList[30] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfICollectionDateTimeField);
            unpackOperationList[31] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfICollectionObjectField);
            unpackOperationList[32] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfIDictionary_MessagePackObject_MessagePackObjectField);
            unpackOperationList[33] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfIDictionaryObjectObjectField);
            unpackOperationList[34] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfIDictionaryStringDateTimeField);
            unpackOperationList[35] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfIList_MessagePackObjectField);
            unpackOperationList[36] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfIListDateTimeField);
            unpackOperationList[37] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfIListObjectField);
            unpackOperationList[38] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfImage_Field);
            unpackOperationList[39] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfInvariantCultureField);
            unpackOperationList[40] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfKeyValuePairStringDateTimeOffsetField);
            unpackOperationList[41] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfList_MessagePackObjectField);
            unpackOperationList[42] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfListDateTimeField);
            unpackOperationList[43] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfListObjectField);
            unpackOperationList[44] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMaxByteField);
            unpackOperationList[45] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMaxInt32Field);
            unpackOperationList[46] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMaxInt64Field);
            unpackOperationList[47] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMaxUInt16Field);
            unpackOperationList[48] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMessagePackObject_Field);
            unpackOperationList[49] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMessagePackObjectArray_Field);
            unpackOperationList[50] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMinInt32Field);
            unpackOperationList[51] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMinInt64Field);
            unpackOperationList[52] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfNullField);
            unpackOperationList[53] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfObjectArrayField);
            unpackOperationList[54] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfObjectField);
            unpackOperationList[55] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfStringField);
            unpackOperationList[56] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfStringKeyedCollection_DateTimeField);
            unpackOperationList[57] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfStringKeyedCollection_MessagePackObjectField);
            unpackOperationList[58] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfStringKeyedCollection_ObjectField);
            unpackOperationList[59] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfTimeSpanField);
            unpackOperationList[60] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfTinyByteField);
            unpackOperationList[61] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfTinyInt32Field);
            unpackOperationList[62] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfTinyInt64Field);
            unpackOperationList[63] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfTinyUInt16Field);
            unpackOperationList[64] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfTrueField);
            unpackOperationList[65] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfUriField);
            unpackOperationList[66] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfVersionField);
            this._unpackOperationList = unpackOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>> unpackOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>>);
            unpackOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>>(67);
            unpackOperationTable["AddOnlyCollection_DateTimeField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfAddOnlyCollection_DateTimeField);
            unpackOperationTable["AddOnlyCollection_MessagePackObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfAddOnlyCollection_MessagePackObjectField);
            unpackOperationTable["AddOnlyCollection_ObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfAddOnlyCollection_ObjectField);
            unpackOperationTable["ArrayListField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfArrayListField);
            unpackOperationTable["ArraySegmentByteField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfArraySegmentByteField);
            unpackOperationTable["ArraySegmentDecimalField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfArraySegmentDecimalField);
            unpackOperationTable["ArraySegmentInt32Field"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfArraySegmentInt32Field);
            unpackOperationTable["ByteArrayField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfByteArrayField);
            unpackOperationTable["ByteField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfByteField);
            unpackOperationTable["CharArrayField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfCharArrayField);
            unpackOperationTable["CharField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfCharField);
            unpackOperationTable["Collection_MessagePackObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfCollection_MessagePackObjectField);
            unpackOperationTable["CollectionDateTimeField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfCollectionDateTimeField);
            unpackOperationTable["CollectionObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfCollectionObjectField);
            unpackOperationTable["CurrentCultureField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfCurrentCultureField);
            unpackOperationTable["DateTimeField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDateTimeField);
            unpackOperationTable["DateTimeOffsetField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDateTimeOffsetField);
            unpackOperationTable["DecimalField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDecimalField);
            unpackOperationTable["Dictionary_MessagePackObject_MessagePackObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDictionary_MessagePackObject_MessagePackObjectField);
            unpackOperationTable["DictionaryEntryField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDictionaryEntryField);
            unpackOperationTable["DictionaryObjectObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDictionaryObjectObjectField);
            unpackOperationTable["DictionaryStringDateTimeField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfDictionaryStringDateTimeField);
            unpackOperationTable["FalseField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfFalseField);
            unpackOperationTable["FILETIMEField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfFILETIMEField);
            unpackOperationTable["GuidField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfGuidField);
            unpackOperationTable["HashSet_MessagePackObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfHashSet_MessagePackObjectField);
            unpackOperationTable["HashSetDateTimeField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfHashSetDateTimeField);
            unpackOperationTable["HashSetObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfHashSetObjectField);
            unpackOperationTable["HashtableField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfHashtableField);
            unpackOperationTable["ICollection_MessagePackObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfICollection_MessagePackObjectField);
            unpackOperationTable["ICollectionDateTimeField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfICollectionDateTimeField);
            unpackOperationTable["ICollectionObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfICollectionObjectField);
            unpackOperationTable["IDictionary_MessagePackObject_MessagePackObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfIDictionary_MessagePackObject_MessagePackObjectField);
            unpackOperationTable["IDictionaryObjectObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfIDictionaryObjectObjectField);
            unpackOperationTable["IDictionaryStringDateTimeField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfIDictionaryStringDateTimeField);
            unpackOperationTable["IList_MessagePackObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfIList_MessagePackObjectField);
            unpackOperationTable["IListDateTimeField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfIListDateTimeField);
            unpackOperationTable["IListObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfIListObjectField);
            unpackOperationTable["Image_Field"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfImage_Field);
            unpackOperationTable["InvariantCultureField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfInvariantCultureField);
            unpackOperationTable["KeyValuePairStringDateTimeOffsetField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfKeyValuePairStringDateTimeOffsetField);
            unpackOperationTable["List_MessagePackObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfList_MessagePackObjectField);
            unpackOperationTable["ListDateTimeField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfListDateTimeField);
            unpackOperationTable["ListObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfListObjectField);
            unpackOperationTable["MaxByteField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMaxByteField);
            unpackOperationTable["MaxInt32Field"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMaxInt32Field);
            unpackOperationTable["MaxInt64Field"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMaxInt64Field);
            unpackOperationTable["MaxUInt16Field"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMaxUInt16Field);
            unpackOperationTable["MessagePackObject_Field"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMessagePackObject_Field);
            unpackOperationTable["MessagePackObjectArray_Field"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMessagePackObjectArray_Field);
            unpackOperationTable["MinInt32Field"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMinInt32Field);
            unpackOperationTable["MinInt64Field"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfMinInt64Field);
            unpackOperationTable["NullField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfNullField);
            unpackOperationTable["ObjectArrayField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfObjectArrayField);
            unpackOperationTable["ObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfObjectField);
            unpackOperationTable["StringField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfStringField);
            unpackOperationTable["StringKeyedCollection_DateTimeField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfStringKeyedCollection_DateTimeField);
            unpackOperationTable["StringKeyedCollection_MessagePackObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfStringKeyedCollection_MessagePackObjectField);
            unpackOperationTable["StringKeyedCollection_ObjectField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfStringKeyedCollection_ObjectField);
            unpackOperationTable["TimeSpanField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfTimeSpanField);
            unpackOperationTable["TinyByteField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfTinyByteField);
            unpackOperationTable["TinyInt32Field"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfTinyInt32Field);
            unpackOperationTable["TinyInt64Field"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfTinyInt64Field);
            unpackOperationTable["TinyUInt16Field"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfTinyUInt16Field);
            unpackOperationTable["TrueField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfTrueField);
            unpackOperationTable["UriField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfUriField);
            unpackOperationTable["VersionField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.ComplexTypeGenerated, int>(this.UnpackValueOfVersionField);
            this._unpackOperationTable = unpackOperationTable;
            this._memberNames = new string[] {
                    "AddOnlyCollection_DateTimeField",
                    "AddOnlyCollection_MessagePackObjectField",
                    "AddOnlyCollection_ObjectField",
                    "ArrayListField",
                    "ArraySegmentByteField",
                    "ArraySegmentDecimalField",
                    "ArraySegmentInt32Field",
                    "ByteArrayField",
                    "ByteField",
                    "CharArrayField",
                    "CharField",
                    "Collection_MessagePackObjectField",
                    "CollectionDateTimeField",
                    "CollectionObjectField",
                    "CurrentCultureField",
                    "DateTimeField",
                    "DateTimeOffsetField",
                    "DecimalField",
                    "Dictionary_MessagePackObject_MessagePackObjectField",
                    "DictionaryEntryField",
                    "DictionaryObjectObjectField",
                    "DictionaryStringDateTimeField",
                    "FalseField",
                    "FILETIMEField",
                    "GuidField",
                    "HashSet_MessagePackObjectField",
                    "HashSetDateTimeField",
                    "HashSetObjectField",
                    "HashtableField",
                    "ICollection_MessagePackObjectField",
                    "ICollectionDateTimeField",
                    "ICollectionObjectField",
                    "IDictionary_MessagePackObject_MessagePackObjectField",
                    "IDictionaryObjectObjectField",
                    "IDictionaryStringDateTimeField",
                    "IList_MessagePackObjectField",
                    "IListDateTimeField",
                    "IListObjectField",
                    "Image_Field",
                    "InvariantCultureField",
                    "KeyValuePairStringDateTimeOffsetField",
                    "List_MessagePackObjectField",
                    "ListDateTimeField",
                    "ListObjectField",
                    "MaxByteField",
                    "MaxInt32Field",
                    "MaxInt64Field",
                    "MaxUInt16Field",
                    "MessagePackObject_Field",
                    "MessagePackObjectArray_Field",
                    "MinInt32Field",
                    "MinInt64Field",
                    "NullField",
                    "ObjectArrayField",
                    "ObjectField",
                    "StringField",
                    "StringKeyedCollection_DateTimeField",
                    "StringKeyedCollection_MessagePackObjectField",
                    "StringKeyedCollection_ObjectField",
                    "TimeSpanField",
                    "TinyByteField",
                    "TinyInt32Field",
                    "TinyInt64Field",
                    "TinyUInt16Field",
                    "TrueField",
                    "UriField",
                    "VersionField"};
        }
        
        private void PackValueOfAddOnlyCollection_DateTimeField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer0.PackTo(packer, objectTree.AddOnlyCollection_DateTimeField);
        }
        
        private void PackValueOfAddOnlyCollection_MessagePackObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer1.PackTo(packer, objectTree.AddOnlyCollection_MessagePackObjectField);
        }
        
        private void PackValueOfAddOnlyCollection_ObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer2.PackTo(packer, objectTree.AddOnlyCollection_ObjectField);
        }
        
        private void PackValueOfArrayListField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer3.PackTo(packer, objectTree.ArrayListField);
        }
        
        private void PackValueOfArraySegmentByteField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer4.PackTo(packer, objectTree.ArraySegmentByteField);
        }
        
        private void PackValueOfArraySegmentDecimalField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer5.PackTo(packer, objectTree.ArraySegmentDecimalField);
        }
        
        private void PackValueOfArraySegmentInt32Field(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer6.PackTo(packer, objectTree.ArraySegmentInt32Field);
        }
        
        private void PackValueOfByteArrayField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer7.PackTo(packer, objectTree.ByteArrayField);
        }
        
        private void PackValueOfByteField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer8.PackTo(packer, objectTree.ByteField);
        }
        
        private void PackValueOfCharArrayField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer9.PackTo(packer, objectTree.CharArrayField);
        }
        
        private void PackValueOfCharField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer10.PackTo(packer, objectTree.CharField);
        }
        
        private void PackValueOfCollection_MessagePackObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer11.PackTo(packer, objectTree.Collection_MessagePackObjectField);
        }
        
        private void PackValueOfCollectionDateTimeField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer12.PackTo(packer, objectTree.CollectionDateTimeField);
        }
        
        private void PackValueOfCollectionObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer13.PackTo(packer, objectTree.CollectionObjectField);
        }
        
        private void PackValueOfCurrentCultureField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer14.PackTo(packer, objectTree.CurrentCultureField);
        }
        
        private void PackValueOfDateTimeField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer15.PackTo(packer, objectTree.DateTimeField);
        }
        
        private void PackValueOfDateTimeOffsetField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer16.PackTo(packer, objectTree.DateTimeOffsetField);
        }
        
        private void PackValueOfDecimalField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer17.PackTo(packer, objectTree.DecimalField);
        }
        
        private void PackValueOfDictionary_MessagePackObject_MessagePackObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer18.PackTo(packer, objectTree.Dictionary_MessagePackObject_MessagePackObjectField);
        }
        
        private void PackValueOfDictionaryEntryField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer19.PackTo(packer, objectTree.DictionaryEntryField);
        }
        
        private void PackValueOfDictionaryObjectObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer20.PackTo(packer, objectTree.DictionaryObjectObjectField);
        }
        
        private void PackValueOfDictionaryStringDateTimeField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer21.PackTo(packer, objectTree.DictionaryStringDateTimeField);
        }
        
        private void PackValueOfFalseField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer22.PackTo(packer, objectTree.FalseField);
        }
        
        private void PackValueOfFILETIMEField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer23.PackTo(packer, objectTree.FILETIMEField);
        }
        
        private void PackValueOfGuidField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer24.PackTo(packer, objectTree.GuidField);
        }
        
        private void PackValueOfHashSet_MessagePackObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer25.PackTo(packer, objectTree.HashSet_MessagePackObjectField);
        }
        
        private void PackValueOfHashSetDateTimeField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer26.PackTo(packer, objectTree.HashSetDateTimeField);
        }
        
        private void PackValueOfHashSetObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer27.PackTo(packer, objectTree.HashSetObjectField);
        }
        
        private void PackValueOfHashtableField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer28.PackTo(packer, objectTree.HashtableField);
        }
        
        private void PackValueOfICollection_MessagePackObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer29.PackTo(packer, objectTree.ICollection_MessagePackObjectField);
        }
        
        private void PackValueOfICollectionDateTimeField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer30.PackTo(packer, objectTree.ICollectionDateTimeField);
        }
        
        private void PackValueOfICollectionObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer31.PackTo(packer, objectTree.ICollectionObjectField);
        }
        
        private void PackValueOfIDictionary_MessagePackObject_MessagePackObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer32.PackTo(packer, objectTree.IDictionary_MessagePackObject_MessagePackObjectField);
        }
        
        private void PackValueOfIDictionaryObjectObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer33.PackTo(packer, objectTree.IDictionaryObjectObjectField);
        }
        
        private void PackValueOfIDictionaryStringDateTimeField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer34.PackTo(packer, objectTree.IDictionaryStringDateTimeField);
        }
        
        private void PackValueOfIList_MessagePackObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer35.PackTo(packer, objectTree.IList_MessagePackObjectField);
        }
        
        private void PackValueOfIListDateTimeField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer36.PackTo(packer, objectTree.IListDateTimeField);
        }
        
        private void PackValueOfIListObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer37.PackTo(packer, objectTree.IListObjectField);
        }
        
        private void PackValueOfImage_Field(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer38.PackTo(packer, objectTree.Image_Field);
        }
        
        private void PackValueOfInvariantCultureField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer14.PackTo(packer, objectTree.InvariantCultureField);
        }
        
        private void PackValueOfKeyValuePairStringDateTimeOffsetField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer39.PackTo(packer, objectTree.KeyValuePairStringDateTimeOffsetField);
        }
        
        private void PackValueOfList_MessagePackObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer40.PackTo(packer, objectTree.List_MessagePackObjectField);
        }
        
        private void PackValueOfListDateTimeField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer41.PackTo(packer, objectTree.ListDateTimeField);
        }
        
        private void PackValueOfListObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer42.PackTo(packer, objectTree.ListObjectField);
        }
        
        private void PackValueOfMaxByteField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer8.PackTo(packer, objectTree.MaxByteField);
        }
        
        private void PackValueOfMaxInt32Field(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer43.PackTo(packer, objectTree.MaxInt32Field);
        }
        
        private void PackValueOfMaxInt64Field(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer44.PackTo(packer, objectTree.MaxInt64Field);
        }
        
        private void PackValueOfMaxUInt16Field(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer45.PackTo(packer, objectTree.MaxUInt16Field);
        }
        
        private void PackValueOfMessagePackObject_Field(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer46.PackTo(packer, objectTree.MessagePackObject_Field);
        }
        
        private void PackValueOfMessagePackObjectArray_Field(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer47.PackTo(packer, objectTree.MessagePackObjectArray_Field);
        }
        
        private void PackValueOfMinInt32Field(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer43.PackTo(packer, objectTree.MinInt32Field);
        }
        
        private void PackValueOfMinInt64Field(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer44.PackTo(packer, objectTree.MinInt64Field);
        }
        
        private void PackValueOfNullField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer48.PackTo(packer, objectTree.NullField);
        }
        
        private void PackValueOfObjectArrayField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer49.PackTo(packer, objectTree.ObjectArrayField);
        }
        
        private void PackValueOfObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer48.PackTo(packer, objectTree.ObjectField);
        }
        
        private void PackValueOfStringField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer50.PackTo(packer, objectTree.StringField);
        }
        
        private void PackValueOfStringKeyedCollection_DateTimeField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer51.PackTo(packer, objectTree.StringKeyedCollection_DateTimeField);
        }
        
        private void PackValueOfStringKeyedCollection_MessagePackObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer52.PackTo(packer, objectTree.StringKeyedCollection_MessagePackObjectField);
        }
        
        private void PackValueOfStringKeyedCollection_ObjectField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer53.PackTo(packer, objectTree.StringKeyedCollection_ObjectField);
        }
        
        private void PackValueOfTimeSpanField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer54.PackTo(packer, objectTree.TimeSpanField);
        }
        
        private void PackValueOfTinyByteField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer8.PackTo(packer, objectTree.TinyByteField);
        }
        
        private void PackValueOfTinyInt32Field(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer43.PackTo(packer, objectTree.TinyInt32Field);
        }
        
        private void PackValueOfTinyInt64Field(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer44.PackTo(packer, objectTree.TinyInt64Field);
        }
        
        private void PackValueOfTinyUInt16Field(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer45.PackTo(packer, objectTree.TinyUInt16Field);
        }
        
        private void PackValueOfTrueField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer22.PackTo(packer, objectTree.TrueField);
        }
        
        private void PackValueOfUriField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer55.PackTo(packer, objectTree.UriField);
        }
        
        private void PackValueOfVersionField(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            this._serializer56.PackTo(packer, objectTree.VersionField);
        }
        
        protected internal override void PackToCore(MsgPack.Packer packer, MsgPack.Serialization.ComplexTypeGenerated objectTree) {
            MsgPack.Serialization.PackHelpers.PackToArray(packer, objectTree, this._packOperationList);
        }
        
        private void UnpackValueOfAddOnlyCollection_DateTimeField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            MsgPack.Serialization.AddOnlyCollection<System.DateTime> nullable = default(MsgPack.Serialization.AddOnlyCollection<System.DateTime>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "AddOnlyCollection_DateTimeField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable = this._serializer0.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable = default(MsgPack.Unpacker);
                disposable = unpacker.ReadSubtree();
                try {
                    nullable = this._serializer0.UnpackFrom(disposable);
                }
                finally {
                    if (((disposable == null) 
                                == false)) {
                        disposable.Dispose();
                    }
                }
            }
            if (((nullable == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<System.DateTime> enumerator = nullable.GetEnumerator();
                System.DateTime current;
                try {
                    for (
                    ; enumerator.MoveNext(); 
                    ) {
                        current = enumerator.Current;
                        unpackingContext.AddOnlyCollection_DateTimeField.Add(current);
                    }
                }
                finally {
                    enumerator.Dispose();
                }
            }
        }
        
        private void UnpackValueOfAddOnlyCollection_MessagePackObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            MsgPack.Serialization.AddOnlyCollection<MsgPack.MessagePackObject> nullable0 = default(MsgPack.Serialization.AddOnlyCollection<MsgPack.MessagePackObject>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "AddOnlyCollection_MessagePackObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable0 = this._serializer1.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable0 = default(MsgPack.Unpacker);
                disposable0 = unpacker.ReadSubtree();
                try {
                    nullable0 = this._serializer1.UnpackFrom(disposable0);
                }
                finally {
                    if (((disposable0 == null) 
                                == false)) {
                        disposable0.Dispose();
                    }
                }
            }
            if (((nullable0 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator0 = nullable0.GetEnumerator();
                MsgPack.MessagePackObject current0;
                try {
                    for (
                    ; enumerator0.MoveNext(); 
                    ) {
                        current0 = enumerator0.Current;
                        unpackingContext.AddOnlyCollection_MessagePackObjectField.Add(current0);
                    }
                }
                finally {
                    enumerator0.Dispose();
                }
            }
        }
        
        private void UnpackValueOfAddOnlyCollection_ObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            MsgPack.Serialization.AddOnlyCollection<object> nullable1 = default(MsgPack.Serialization.AddOnlyCollection<object>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "AddOnlyCollection_ObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable1 = this._serializer2.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable1 = default(MsgPack.Unpacker);
                disposable1 = unpacker.ReadSubtree();
                try {
                    nullable1 = this._serializer2.UnpackFrom(disposable1);
                }
                finally {
                    if (((disposable1 == null) 
                                == false)) {
                        disposable1.Dispose();
                    }
                }
            }
            if (((nullable1 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<object> enumerator1 = nullable1.GetEnumerator();
                object current1;
                try {
                    for (
                    ; enumerator1.MoveNext(); 
                    ) {
                        current1 = enumerator1.Current;
                        unpackingContext.AddOnlyCollection_ObjectField.Add(current1);
                    }
                }
                finally {
                    enumerator1.Dispose();
                }
            }
        }
        
        private void UnpackValueOfArrayListField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.ArrayList nullable2 = default(System.Collections.ArrayList);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ArrayListField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable2 = this._serializer3.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable2 = default(MsgPack.Unpacker);
                disposable2 = unpacker.ReadSubtree();
                try {
                    nullable2 = this._serializer3.UnpackFrom(disposable2);
                }
                finally {
                    if (((disposable2 == null) 
                                == false)) {
                        disposable2.Dispose();
                    }
                }
            }
            if (((nullable2 == null) 
                        == false)) {
                System.Collections.IEnumerator enumerator2 = nullable2.GetEnumerator();
                object current2;
                for (
                ; enumerator2.MoveNext(); 
                ) {
                    current2 = enumerator2.Current;
                    unpackingContext.ArrayListField.Add(current2);
                }
            }
        }
        
        private void UnpackValueOfArraySegmentByteField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<System.ArraySegment<byte>> nullable3 = default(System.Nullable<System.ArraySegment<byte>>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ArraySegmentByteField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable3 = this._serializer57.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable3 = default(MsgPack.Unpacker);
                disposable3 = unpacker.ReadSubtree();
                try {
                    nullable3 = this._serializer57.UnpackFrom(disposable3);
                }
                finally {
                    if (((disposable3 == null) 
                                == false)) {
                        disposable3.Dispose();
                    }
                }
            }
            if (nullable3.HasValue) {
                unpackingContext.ArraySegmentByteField = nullable3.Value;
            }
        }
        
        private void UnpackValueOfArraySegmentDecimalField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<System.ArraySegment<decimal>> nullable4 = default(System.Nullable<System.ArraySegment<decimal>>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ArraySegmentDecimalField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable4 = this._serializer58.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable4 = default(MsgPack.Unpacker);
                disposable4 = unpacker.ReadSubtree();
                try {
                    nullable4 = this._serializer58.UnpackFrom(disposable4);
                }
                finally {
                    if (((disposable4 == null) 
                                == false)) {
                        disposable4.Dispose();
                    }
                }
            }
            if (nullable4.HasValue) {
                unpackingContext.ArraySegmentDecimalField = nullable4.Value;
            }
        }
        
        private void UnpackValueOfArraySegmentInt32Field(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<System.ArraySegment<int>> nullable5 = default(System.Nullable<System.ArraySegment<int>>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ArraySegmentInt32Field", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable5 = this._serializer59.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable5 = default(MsgPack.Unpacker);
                disposable5 = unpacker.ReadSubtree();
                try {
                    nullable5 = this._serializer59.UnpackFrom(disposable5);
                }
                finally {
                    if (((disposable5 == null) 
                                == false)) {
                        disposable5.Dispose();
                    }
                }
            }
            if (nullable5.HasValue) {
                unpackingContext.ArraySegmentInt32Field = nullable5.Value;
            }
        }
        
        private void UnpackValueOfByteArrayField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            byte[] nullable6 = default(byte[]);
            nullable6 = MsgPack.Serialization.UnpackHelpers.UnpackBinaryValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "ByteArrayField");
            if (((nullable6 == null) 
                        == false)) {
                unpackingContext.ByteArrayField = nullable6;
            }
        }
        
        private void UnpackValueOfByteField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<byte> nullable7 = default(System.Nullable<byte>);
            nullable7 = MsgPack.Serialization.UnpackHelpers.UnpackNullableByteValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "ByteField");
            if (nullable7.HasValue) {
                unpackingContext.ByteField = nullable7.Value;
            }
        }
        
        private void UnpackValueOfCharArrayField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            char[] nullable8 = default(char[]);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "CharArrayField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable8 = this._serializer9.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable6 = default(MsgPack.Unpacker);
                disposable6 = unpacker.ReadSubtree();
                try {
                    nullable8 = this._serializer9.UnpackFrom(disposable6);
                }
                finally {
                    if (((disposable6 == null) 
                                == false)) {
                        disposable6.Dispose();
                    }
                }
            }
            if (((nullable8 == null) 
                        == false)) {
                unpackingContext.CharArrayField = nullable8;
            }
        }
        
        private void UnpackValueOfCharField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<char> nullable9 = default(System.Nullable<char>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "CharField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable9 = this._serializer60.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable7 = default(MsgPack.Unpacker);
                disposable7 = unpacker.ReadSubtree();
                try {
                    nullable9 = this._serializer60.UnpackFrom(disposable7);
                }
                finally {
                    if (((disposable7 == null) 
                                == false)) {
                        disposable7.Dispose();
                    }
                }
            }
            if (nullable9.HasValue) {
                unpackingContext.CharField = nullable9.Value;
            }
        }
        
        private void UnpackValueOfCollection_MessagePackObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.ObjectModel.Collection<MsgPack.MessagePackObject> nullable10 = default(System.Collections.ObjectModel.Collection<MsgPack.MessagePackObject>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "Collection_MessagePackObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable10 = this._serializer11.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable8 = default(MsgPack.Unpacker);
                disposable8 = unpacker.ReadSubtree();
                try {
                    nullable10 = this._serializer11.UnpackFrom(disposable8);
                }
                finally {
                    if (((disposable8 == null) 
                                == false)) {
                        disposable8.Dispose();
                    }
                }
            }
            if (((nullable10 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator3 = nullable10.GetEnumerator();
                MsgPack.MessagePackObject current3;
                try {
                    for (
                    ; enumerator3.MoveNext(); 
                    ) {
                        current3 = enumerator3.Current;
                        unpackingContext.Collection_MessagePackObjectField.Add(current3);
                    }
                }
                finally {
                    enumerator3.Dispose();
                }
            }
        }
        
        private void UnpackValueOfCollectionDateTimeField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.ObjectModel.Collection<System.DateTime> nullable11 = default(System.Collections.ObjectModel.Collection<System.DateTime>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "CollectionDateTimeField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable11 = this._serializer12.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable9 = default(MsgPack.Unpacker);
                disposable9 = unpacker.ReadSubtree();
                try {
                    nullable11 = this._serializer12.UnpackFrom(disposable9);
                }
                finally {
                    if (((disposable9 == null) 
                                == false)) {
                        disposable9.Dispose();
                    }
                }
            }
            if (((nullable11 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<System.DateTime> enumerator4 = nullable11.GetEnumerator();
                System.DateTime current4;
                try {
                    for (
                    ; enumerator4.MoveNext(); 
                    ) {
                        current4 = enumerator4.Current;
                        unpackingContext.CollectionDateTimeField.Add(current4);
                    }
                }
                finally {
                    enumerator4.Dispose();
                }
            }
        }
        
        private void UnpackValueOfCollectionObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.ObjectModel.Collection<object> nullable12 = default(System.Collections.ObjectModel.Collection<object>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "CollectionObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable12 = this._serializer13.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable10 = default(MsgPack.Unpacker);
                disposable10 = unpacker.ReadSubtree();
                try {
                    nullable12 = this._serializer13.UnpackFrom(disposable10);
                }
                finally {
                    if (((disposable10 == null) 
                                == false)) {
                        disposable10.Dispose();
                    }
                }
            }
            if (((nullable12 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<object> enumerator5 = nullable12.GetEnumerator();
                object current5;
                try {
                    for (
                    ; enumerator5.MoveNext(); 
                    ) {
                        current5 = enumerator5.Current;
                        unpackingContext.CollectionObjectField.Add(current5);
                    }
                }
                finally {
                    enumerator5.Dispose();
                }
            }
        }
        
        private void UnpackValueOfCurrentCultureField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Globalization.CultureInfo nullable13 = default(System.Globalization.CultureInfo);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "CurrentCultureField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable13 = this._serializer14.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable11 = default(MsgPack.Unpacker);
                disposable11 = unpacker.ReadSubtree();
                try {
                    nullable13 = this._serializer14.UnpackFrom(disposable11);
                }
                finally {
                    if (((disposable11 == null) 
                                == false)) {
                        disposable11.Dispose();
                    }
                }
            }
            if (((nullable13 == null) 
                        == false)) {
                unpackingContext.CurrentCultureField = nullable13;
            }
        }
        
        private void UnpackValueOfDateTimeField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<System.DateTime> nullable14 = default(System.Nullable<System.DateTime>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "DateTimeField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable14 = this._serializer61.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable12 = default(MsgPack.Unpacker);
                disposable12 = unpacker.ReadSubtree();
                try {
                    nullable14 = this._serializer61.UnpackFrom(disposable12);
                }
                finally {
                    if (((disposable12 == null) 
                                == false)) {
                        disposable12.Dispose();
                    }
                }
            }
            if (nullable14.HasValue) {
                unpackingContext.DateTimeField = nullable14.Value;
            }
        }
        
        private void UnpackValueOfDateTimeOffsetField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<System.DateTimeOffset> nullable15 = default(System.Nullable<System.DateTimeOffset>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "DateTimeOffsetField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable15 = this._serializer62.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable13 = default(MsgPack.Unpacker);
                disposable13 = unpacker.ReadSubtree();
                try {
                    nullable15 = this._serializer62.UnpackFrom(disposable13);
                }
                finally {
                    if (((disposable13 == null) 
                                == false)) {
                        disposable13.Dispose();
                    }
                }
            }
            if (nullable15.HasValue) {
                unpackingContext.DateTimeOffsetField = nullable15.Value;
            }
        }
        
        private void UnpackValueOfDecimalField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<decimal> nullable16 = default(System.Nullable<decimal>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "DecimalField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable16 = this._serializer63.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable14 = default(MsgPack.Unpacker);
                disposable14 = unpacker.ReadSubtree();
                try {
                    nullable16 = this._serializer63.UnpackFrom(disposable14);
                }
                finally {
                    if (((disposable14 == null) 
                                == false)) {
                        disposable14.Dispose();
                    }
                }
            }
            if (nullable16.HasValue) {
                unpackingContext.DecimalField = nullable16.Value;
            }
        }
        
        private void UnpackValueOfDictionary_MessagePackObject_MessagePackObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.Dictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject> nullable17 = default(System.Collections.Generic.Dictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "Dictionary_MessagePackObject_MessagePackObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable17 = this._serializer18.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable15 = default(MsgPack.Unpacker);
                disposable15 = unpacker.ReadSubtree();
                try {
                    nullable17 = this._serializer18.UnpackFrom(disposable15);
                }
                finally {
                    if (((disposable15 == null) 
                                == false)) {
                        disposable15.Dispose();
                    }
                }
            }
            if (((nullable17 == null) 
                        == false)) {
                System.Collections.Generic.Dictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>.Enumerator enumerator6 = nullable17.GetEnumerator();
                System.Collections.Generic.KeyValuePair<MsgPack.MessagePackObject, MsgPack.MessagePackObject> current6;
                try {
                    for (
                    ; enumerator6.MoveNext(); 
                    ) {
                        current6 = enumerator6.Current;
                        unpackingContext.Dictionary_MessagePackObject_MessagePackObjectField.Add(current6.Key, current6.Value);
                    }
                }
                finally {
                    enumerator6.Dispose();
                }
            }
        }
        
        private void UnpackValueOfDictionaryEntryField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<System.Collections.DictionaryEntry> nullable18 = default(System.Nullable<System.Collections.DictionaryEntry>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "DictionaryEntryField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable18 = this._serializer64.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable16 = default(MsgPack.Unpacker);
                disposable16 = unpacker.ReadSubtree();
                try {
                    nullable18 = this._serializer64.UnpackFrom(disposable16);
                }
                finally {
                    if (((disposable16 == null) 
                                == false)) {
                        disposable16.Dispose();
                    }
                }
            }
            if (nullable18.HasValue) {
                unpackingContext.DictionaryEntryField = nullable18.Value;
            }
        }
        
        private void UnpackValueOfDictionaryObjectObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.Dictionary<object, object> nullable19 = default(System.Collections.Generic.Dictionary<object, object>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "DictionaryObjectObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable19 = this._serializer20.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable17 = default(MsgPack.Unpacker);
                disposable17 = unpacker.ReadSubtree();
                try {
                    nullable19 = this._serializer20.UnpackFrom(disposable17);
                }
                finally {
                    if (((disposable17 == null) 
                                == false)) {
                        disposable17.Dispose();
                    }
                }
            }
            if (((nullable19 == null) 
                        == false)) {
                System.Collections.Generic.Dictionary<object, object>.Enumerator enumerator7 = nullable19.GetEnumerator();
                System.Collections.Generic.KeyValuePair<object, object> current7;
                try {
                    for (
                    ; enumerator7.MoveNext(); 
                    ) {
                        current7 = enumerator7.Current;
                        unpackingContext.DictionaryObjectObjectField.Add(current7.Key, current7.Value);
                    }
                }
                finally {
                    enumerator7.Dispose();
                }
            }
        }
        
        private void UnpackValueOfDictionaryStringDateTimeField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.Dictionary<string, System.DateTime> nullable20 = default(System.Collections.Generic.Dictionary<string, System.DateTime>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "DictionaryStringDateTimeField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable20 = this._serializer21.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable18 = default(MsgPack.Unpacker);
                disposable18 = unpacker.ReadSubtree();
                try {
                    nullable20 = this._serializer21.UnpackFrom(disposable18);
                }
                finally {
                    if (((disposable18 == null) 
                                == false)) {
                        disposable18.Dispose();
                    }
                }
            }
            if (((nullable20 == null) 
                        == false)) {
                System.Collections.Generic.Dictionary<string, System.DateTime>.Enumerator enumerator8 = nullable20.GetEnumerator();
                System.Collections.Generic.KeyValuePair<string, System.DateTime> current8;
                try {
                    for (
                    ; enumerator8.MoveNext(); 
                    ) {
                        current8 = enumerator8.Current;
                        unpackingContext.DictionaryStringDateTimeField.Add(current8.Key, current8.Value);
                    }
                }
                finally {
                    enumerator8.Dispose();
                }
            }
        }
        
        private void UnpackValueOfFalseField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<bool> nullable21 = default(System.Nullable<bool>);
            nullable21 = MsgPack.Serialization.UnpackHelpers.UnpackNullableBooleanValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "FalseField");
            if (nullable21.HasValue) {
                unpackingContext.FalseField = nullable21.Value;
            }
        }
        
        private void UnpackValueOfFILETIMEField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<System.Runtime.InteropServices.ComTypes.FILETIME> nullable22 = default(System.Nullable<System.Runtime.InteropServices.ComTypes.FILETIME>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "FILETIMEField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable22 = this._serializer65.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable19 = default(MsgPack.Unpacker);
                disposable19 = unpacker.ReadSubtree();
                try {
                    nullable22 = this._serializer65.UnpackFrom(disposable19);
                }
                finally {
                    if (((disposable19 == null) 
                                == false)) {
                        disposable19.Dispose();
                    }
                }
            }
            if (nullable22.HasValue) {
                unpackingContext.FILETIMEField = nullable22.Value;
            }
        }
        
        private void UnpackValueOfGuidField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<System.Guid> nullable23 = default(System.Nullable<System.Guid>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "GuidField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable23 = this._serializer66.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable20 = default(MsgPack.Unpacker);
                disposable20 = unpacker.ReadSubtree();
                try {
                    nullable23 = this._serializer66.UnpackFrom(disposable20);
                }
                finally {
                    if (((disposable20 == null) 
                                == false)) {
                        disposable20.Dispose();
                    }
                }
            }
            if (nullable23.HasValue) {
                unpackingContext.GuidField = nullable23.Value;
            }
        }
        
        private void UnpackValueOfHashSet_MessagePackObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.HashSet<MsgPack.MessagePackObject> nullable24 = default(System.Collections.Generic.HashSet<MsgPack.MessagePackObject>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "HashSet_MessagePackObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable24 = this._serializer25.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable21 = default(MsgPack.Unpacker);
                disposable21 = unpacker.ReadSubtree();
                try {
                    nullable24 = this._serializer25.UnpackFrom(disposable21);
                }
                finally {
                    if (((disposable21 == null) 
                                == false)) {
                        disposable21.Dispose();
                    }
                }
            }
            if (((nullable24 == null) 
                        == false)) {
                System.Collections.Generic.HashSet<MsgPack.MessagePackObject>.Enumerator enumerator9 = nullable24.GetEnumerator();
                MsgPack.MessagePackObject current9;
                try {
                    for (
                    ; enumerator9.MoveNext(); 
                    ) {
                        current9 = enumerator9.Current;
                        unpackingContext.HashSet_MessagePackObjectField.Add(current9);
                    }
                }
                finally {
                    enumerator9.Dispose();
                }
            }
        }
        
        private void UnpackValueOfHashSetDateTimeField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.HashSet<System.DateTime> nullable25 = default(System.Collections.Generic.HashSet<System.DateTime>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "HashSetDateTimeField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable25 = this._serializer26.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable22 = default(MsgPack.Unpacker);
                disposable22 = unpacker.ReadSubtree();
                try {
                    nullable25 = this._serializer26.UnpackFrom(disposable22);
                }
                finally {
                    if (((disposable22 == null) 
                                == false)) {
                        disposable22.Dispose();
                    }
                }
            }
            if (((nullable25 == null) 
                        == false)) {
                System.Collections.Generic.HashSet<System.DateTime>.Enumerator enumerator10 = nullable25.GetEnumerator();
                System.DateTime current10;
                try {
                    for (
                    ; enumerator10.MoveNext(); 
                    ) {
                        current10 = enumerator10.Current;
                        unpackingContext.HashSetDateTimeField.Add(current10);
                    }
                }
                finally {
                    enumerator10.Dispose();
                }
            }
        }
        
        private void UnpackValueOfHashSetObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.HashSet<object> nullable26 = default(System.Collections.Generic.HashSet<object>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "HashSetObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable26 = this._serializer27.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable23 = default(MsgPack.Unpacker);
                disposable23 = unpacker.ReadSubtree();
                try {
                    nullable26 = this._serializer27.UnpackFrom(disposable23);
                }
                finally {
                    if (((disposable23 == null) 
                                == false)) {
                        disposable23.Dispose();
                    }
                }
            }
            if (((nullable26 == null) 
                        == false)) {
                System.Collections.Generic.HashSet<object>.Enumerator enumerator11 = nullable26.GetEnumerator();
                object current11;
                try {
                    for (
                    ; enumerator11.MoveNext(); 
                    ) {
                        current11 = enumerator11.Current;
                        unpackingContext.HashSetObjectField.Add(current11);
                    }
                }
                finally {
                    enumerator11.Dispose();
                }
            }
        }
        
        private void UnpackValueOfHashtableField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Hashtable nullable27 = default(System.Collections.Hashtable);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "HashtableField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable27 = this._serializer28.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable24 = default(MsgPack.Unpacker);
                disposable24 = unpacker.ReadSubtree();
                try {
                    nullable27 = this._serializer28.UnpackFrom(disposable24);
                }
                finally {
                    if (((disposable24 == null) 
                                == false)) {
                        disposable24.Dispose();
                    }
                }
            }
            if (((nullable27 == null) 
                        == false)) {
                System.Collections.IDictionaryEnumerator enumerator12 = nullable27.GetEnumerator();
                System.Collections.DictionaryEntry current12;
                for (
                ; enumerator12.MoveNext(); 
                ) {
                    current12 = enumerator12.Entry;
                    unpackingContext.HashtableField.Add(current12.Key, current12.Value);
                }
            }
        }
        
        private void UnpackValueOfICollection_MessagePackObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.ICollection<MsgPack.MessagePackObject> nullable28 = default(System.Collections.Generic.ICollection<MsgPack.MessagePackObject>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ICollection_MessagePackObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable28 = this._serializer29.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable25 = default(MsgPack.Unpacker);
                disposable25 = unpacker.ReadSubtree();
                try {
                    nullable28 = this._serializer29.UnpackFrom(disposable25);
                }
                finally {
                    if (((disposable25 == null) 
                                == false)) {
                        disposable25.Dispose();
                    }
                }
            }
            if (((nullable28 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator13 = nullable28.GetEnumerator();
                MsgPack.MessagePackObject current13;
                try {
                    for (
                    ; enumerator13.MoveNext(); 
                    ) {
                        current13 = enumerator13.Current;
                        unpackingContext.ICollection_MessagePackObjectField.Add(current13);
                    }
                }
                finally {
                    enumerator13.Dispose();
                }
            }
        }
        
        private void UnpackValueOfICollectionDateTimeField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.ICollection<System.DateTime> nullable29 = default(System.Collections.Generic.ICollection<System.DateTime>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ICollectionDateTimeField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable29 = this._serializer30.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable26 = default(MsgPack.Unpacker);
                disposable26 = unpacker.ReadSubtree();
                try {
                    nullable29 = this._serializer30.UnpackFrom(disposable26);
                }
                finally {
                    if (((disposable26 == null) 
                                == false)) {
                        disposable26.Dispose();
                    }
                }
            }
            if (((nullable29 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<System.DateTime> enumerator14 = nullable29.GetEnumerator();
                System.DateTime current14;
                try {
                    for (
                    ; enumerator14.MoveNext(); 
                    ) {
                        current14 = enumerator14.Current;
                        unpackingContext.ICollectionDateTimeField.Add(current14);
                    }
                }
                finally {
                    enumerator14.Dispose();
                }
            }
        }
        
        private void UnpackValueOfICollectionObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.ICollection<object> nullable30 = default(System.Collections.Generic.ICollection<object>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ICollectionObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable30 = this._serializer31.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable27 = default(MsgPack.Unpacker);
                disposable27 = unpacker.ReadSubtree();
                try {
                    nullable30 = this._serializer31.UnpackFrom(disposable27);
                }
                finally {
                    if (((disposable27 == null) 
                                == false)) {
                        disposable27.Dispose();
                    }
                }
            }
            if (((nullable30 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<object> enumerator15 = nullable30.GetEnumerator();
                object current15;
                try {
                    for (
                    ; enumerator15.MoveNext(); 
                    ) {
                        current15 = enumerator15.Current;
                        unpackingContext.ICollectionObjectField.Add(current15);
                    }
                }
                finally {
                    enumerator15.Dispose();
                }
            }
        }
        
        private void UnpackValueOfIDictionary_MessagePackObject_MessagePackObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.IDictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject> nullable31 = default(System.Collections.Generic.IDictionary<MsgPack.MessagePackObject, MsgPack.MessagePackObject>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "IDictionary_MessagePackObject_MessagePackObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable31 = this._serializer32.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable28 = default(MsgPack.Unpacker);
                disposable28 = unpacker.ReadSubtree();
                try {
                    nullable31 = this._serializer32.UnpackFrom(disposable28);
                }
                finally {
                    if (((disposable28 == null) 
                                == false)) {
                        disposable28.Dispose();
                    }
                }
            }
            if (((nullable31 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<MsgPack.MessagePackObject, MsgPack.MessagePackObject>> enumerator16 = nullable31.GetEnumerator();
                System.Collections.Generic.KeyValuePair<MsgPack.MessagePackObject, MsgPack.MessagePackObject> current16;
                try {
                    for (
                    ; enumerator16.MoveNext(); 
                    ) {
                        current16 = enumerator16.Current;
                        unpackingContext.IDictionary_MessagePackObject_MessagePackObjectField.Add(current16.Key, current16.Value);
                    }
                }
                finally {
                    enumerator16.Dispose();
                }
            }
        }
        
        private void UnpackValueOfIDictionaryObjectObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.IDictionary<object, object> nullable32 = default(System.Collections.Generic.IDictionary<object, object>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "IDictionaryObjectObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable32 = this._serializer33.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable29 = default(MsgPack.Unpacker);
                disposable29 = unpacker.ReadSubtree();
                try {
                    nullable32 = this._serializer33.UnpackFrom(disposable29);
                }
                finally {
                    if (((disposable29 == null) 
                                == false)) {
                        disposable29.Dispose();
                    }
                }
            }
            if (((nullable32 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<object, object>> enumerator17 = nullable32.GetEnumerator();
                System.Collections.Generic.KeyValuePair<object, object> current17;
                try {
                    for (
                    ; enumerator17.MoveNext(); 
                    ) {
                        current17 = enumerator17.Current;
                        unpackingContext.IDictionaryObjectObjectField.Add(current17.Key, current17.Value);
                    }
                }
                finally {
                    enumerator17.Dispose();
                }
            }
        }
        
        private void UnpackValueOfIDictionaryStringDateTimeField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.IDictionary<string, System.DateTime> nullable33 = default(System.Collections.Generic.IDictionary<string, System.DateTime>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "IDictionaryStringDateTimeField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable33 = this._serializer34.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable30 = default(MsgPack.Unpacker);
                disposable30 = unpacker.ReadSubtree();
                try {
                    nullable33 = this._serializer34.UnpackFrom(disposable30);
                }
                finally {
                    if (((disposable30 == null) 
                                == false)) {
                        disposable30.Dispose();
                    }
                }
            }
            if (((nullable33 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, System.DateTime>> enumerator18 = nullable33.GetEnumerator();
                System.Collections.Generic.KeyValuePair<string, System.DateTime> current18;
                try {
                    for (
                    ; enumerator18.MoveNext(); 
                    ) {
                        current18 = enumerator18.Current;
                        unpackingContext.IDictionaryStringDateTimeField.Add(current18.Key, current18.Value);
                    }
                }
                finally {
                    enumerator18.Dispose();
                }
            }
        }
        
        private void UnpackValueOfIList_MessagePackObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.IList<MsgPack.MessagePackObject> nullable34 = default(System.Collections.Generic.IList<MsgPack.MessagePackObject>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "IList_MessagePackObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable34 = this._serializer35.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable31 = default(MsgPack.Unpacker);
                disposable31 = unpacker.ReadSubtree();
                try {
                    nullable34 = this._serializer35.UnpackFrom(disposable31);
                }
                finally {
                    if (((disposable31 == null) 
                                == false)) {
                        disposable31.Dispose();
                    }
                }
            }
            if (((nullable34 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator19 = nullable34.GetEnumerator();
                MsgPack.MessagePackObject current19;
                try {
                    for (
                    ; enumerator19.MoveNext(); 
                    ) {
                        current19 = enumerator19.Current;
                        unpackingContext.IList_MessagePackObjectField.Add(current19);
                    }
                }
                finally {
                    enumerator19.Dispose();
                }
            }
        }
        
        private void UnpackValueOfIListDateTimeField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.IList<System.DateTime> nullable35 = default(System.Collections.Generic.IList<System.DateTime>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "IListDateTimeField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable35 = this._serializer36.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable32 = default(MsgPack.Unpacker);
                disposable32 = unpacker.ReadSubtree();
                try {
                    nullable35 = this._serializer36.UnpackFrom(disposable32);
                }
                finally {
                    if (((disposable32 == null) 
                                == false)) {
                        disposable32.Dispose();
                    }
                }
            }
            if (((nullable35 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<System.DateTime> enumerator20 = nullable35.GetEnumerator();
                System.DateTime current20;
                try {
                    for (
                    ; enumerator20.MoveNext(); 
                    ) {
                        current20 = enumerator20.Current;
                        unpackingContext.IListDateTimeField.Add(current20);
                    }
                }
                finally {
                    enumerator20.Dispose();
                }
            }
        }
        
        private void UnpackValueOfIListObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.IList<object> nullable36 = default(System.Collections.Generic.IList<object>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "IListObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable36 = this._serializer37.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable33 = default(MsgPack.Unpacker);
                disposable33 = unpacker.ReadSubtree();
                try {
                    nullable36 = this._serializer37.UnpackFrom(disposable33);
                }
                finally {
                    if (((disposable33 == null) 
                                == false)) {
                        disposable33.Dispose();
                    }
                }
            }
            if (((nullable36 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<object> enumerator21 = nullable36.GetEnumerator();
                object current21;
                try {
                    for (
                    ; enumerator21.MoveNext(); 
                    ) {
                        current21 = enumerator21.Current;
                        unpackingContext.IListObjectField.Add(current21);
                    }
                }
                finally {
                    enumerator21.Dispose();
                }
            }
        }
        
        private void UnpackValueOfImage_Field(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            MsgPack.Image nullable37 = default(MsgPack.Image);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "Image_Field", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable37 = this._serializer38.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable34 = default(MsgPack.Unpacker);
                disposable34 = unpacker.ReadSubtree();
                try {
                    nullable37 = this._serializer38.UnpackFrom(disposable34);
                }
                finally {
                    if (((disposable34 == null) 
                                == false)) {
                        disposable34.Dispose();
                    }
                }
            }
            if (((nullable37 == null) 
                        == false)) {
                unpackingContext.Image_Field = nullable37;
            }
        }
        
        private void UnpackValueOfInvariantCultureField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Globalization.CultureInfo nullable38 = default(System.Globalization.CultureInfo);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "InvariantCultureField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable38 = this._serializer14.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable35 = default(MsgPack.Unpacker);
                disposable35 = unpacker.ReadSubtree();
                try {
                    nullable38 = this._serializer14.UnpackFrom(disposable35);
                }
                finally {
                    if (((disposable35 == null) 
                                == false)) {
                        disposable35.Dispose();
                    }
                }
            }
            if (((nullable38 == null) 
                        == false)) {
                unpackingContext.InvariantCultureField = nullable38;
            }
        }
        
        private void UnpackValueOfKeyValuePairStringDateTimeOffsetField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>> nullable39 = default(System.Nullable<System.Collections.Generic.KeyValuePair<string, System.DateTimeOffset>>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "KeyValuePairStringDateTimeOffsetField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable39 = this._serializer67.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable36 = default(MsgPack.Unpacker);
                disposable36 = unpacker.ReadSubtree();
                try {
                    nullable39 = this._serializer67.UnpackFrom(disposable36);
                }
                finally {
                    if (((disposable36 == null) 
                                == false)) {
                        disposable36.Dispose();
                    }
                }
            }
            if (nullable39.HasValue) {
                unpackingContext.KeyValuePairStringDateTimeOffsetField = nullable39.Value;
            }
        }
        
        private void UnpackValueOfList_MessagePackObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.List<MsgPack.MessagePackObject> nullable40 = default(System.Collections.Generic.List<MsgPack.MessagePackObject>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "List_MessagePackObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable40 = this._serializer40.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable37 = default(MsgPack.Unpacker);
                disposable37 = unpacker.ReadSubtree();
                try {
                    nullable40 = this._serializer40.UnpackFrom(disposable37);
                }
                finally {
                    if (((disposable37 == null) 
                                == false)) {
                        disposable37.Dispose();
                    }
                }
            }
            if (((nullable40 == null) 
                        == false)) {
                System.Collections.Generic.List<MsgPack.MessagePackObject>.Enumerator enumerator22 = nullable40.GetEnumerator();
                MsgPack.MessagePackObject current22;
                try {
                    for (
                    ; enumerator22.MoveNext(); 
                    ) {
                        current22 = enumerator22.Current;
                        unpackingContext.List_MessagePackObjectField.Add(current22);
                    }
                }
                finally {
                    enumerator22.Dispose();
                }
            }
        }
        
        private void UnpackValueOfListDateTimeField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.List<System.DateTime> nullable41 = default(System.Collections.Generic.List<System.DateTime>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ListDateTimeField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable41 = this._serializer41.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable38 = default(MsgPack.Unpacker);
                disposable38 = unpacker.ReadSubtree();
                try {
                    nullable41 = this._serializer41.UnpackFrom(disposable38);
                }
                finally {
                    if (((disposable38 == null) 
                                == false)) {
                        disposable38.Dispose();
                    }
                }
            }
            if (((nullable41 == null) 
                        == false)) {
                System.Collections.Generic.List<System.DateTime>.Enumerator enumerator23 = nullable41.GetEnumerator();
                System.DateTime current23;
                try {
                    for (
                    ; enumerator23.MoveNext(); 
                    ) {
                        current23 = enumerator23.Current;
                        unpackingContext.ListDateTimeField.Add(current23);
                    }
                }
                finally {
                    enumerator23.Dispose();
                }
            }
        }
        
        private void UnpackValueOfListObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Collections.Generic.List<object> nullable42 = default(System.Collections.Generic.List<object>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ListObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable42 = this._serializer42.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable39 = default(MsgPack.Unpacker);
                disposable39 = unpacker.ReadSubtree();
                try {
                    nullable42 = this._serializer42.UnpackFrom(disposable39);
                }
                finally {
                    if (((disposable39 == null) 
                                == false)) {
                        disposable39.Dispose();
                    }
                }
            }
            if (((nullable42 == null) 
                        == false)) {
                System.Collections.Generic.List<object>.Enumerator enumerator24 = nullable42.GetEnumerator();
                object current24;
                try {
                    for (
                    ; enumerator24.MoveNext(); 
                    ) {
                        current24 = enumerator24.Current;
                        unpackingContext.ListObjectField.Add(current24);
                    }
                }
                finally {
                    enumerator24.Dispose();
                }
            }
        }
        
        private void UnpackValueOfMaxByteField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<byte> nullable43 = default(System.Nullable<byte>);
            nullable43 = MsgPack.Serialization.UnpackHelpers.UnpackNullableByteValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "MaxByteField");
            if (nullable43.HasValue) {
                unpackingContext.MaxByteField = nullable43.Value;
            }
        }
        
        private void UnpackValueOfMaxInt32Field(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<int> nullable44 = default(System.Nullable<int>);
            nullable44 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt32Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "MaxInt32Field");
            if (nullable44.HasValue) {
                unpackingContext.MaxInt32Field = nullable44.Value;
            }
        }
        
        private void UnpackValueOfMaxInt64Field(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<long> nullable45 = default(System.Nullable<long>);
            nullable45 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt64Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "MaxInt64Field");
            if (nullable45.HasValue) {
                unpackingContext.MaxInt64Field = nullable45.Value;
            }
        }
        
        private void UnpackValueOfMaxUInt16Field(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<ushort> nullable46 = default(System.Nullable<ushort>);
            nullable46 = MsgPack.Serialization.UnpackHelpers.UnpackNullableUInt16Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "MaxUInt16Field");
            if (nullable46.HasValue) {
                unpackingContext.MaxUInt16Field = nullable46.Value;
            }
        }
        
        private void UnpackValueOfMessagePackObject_Field(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            MsgPack.MessagePackObject nullable47 = default(MsgPack.MessagePackObject);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "MessagePackObject_Field", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable47 = unpacker.LastReadData;
            }
            else {
                nullable47 = unpacker.UnpackSubtreeData();
            }
            if ((nullable47.IsNil == false)) {
                unpackingContext.MessagePackObject_Field = nullable47;
            }
        }
        
        private void UnpackValueOfMessagePackObjectArray_Field(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            MsgPack.MessagePackObject[] nullable48 = default(MsgPack.MessagePackObject[]);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "MessagePackObjectArray_Field", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable48 = this._serializer47.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable40 = default(MsgPack.Unpacker);
                disposable40 = unpacker.ReadSubtree();
                try {
                    nullable48 = this._serializer47.UnpackFrom(disposable40);
                }
                finally {
                    if (((disposable40 == null) 
                                == false)) {
                        disposable40.Dispose();
                    }
                }
            }
            if (((nullable48 == null) 
                        == false)) {
                unpackingContext.MessagePackObjectArray_Field = nullable48;
            }
        }
        
        private void UnpackValueOfMinInt32Field(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<int> nullable49 = default(System.Nullable<int>);
            nullable49 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt32Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "MinInt32Field");
            if (nullable49.HasValue) {
                unpackingContext.MinInt32Field = nullable49.Value;
            }
        }
        
        private void UnpackValueOfMinInt64Field(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<long> nullable50 = default(System.Nullable<long>);
            nullable50 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt64Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "MinInt64Field");
            if (nullable50.HasValue) {
                unpackingContext.MinInt64Field = nullable50.Value;
            }
        }
        
        private void UnpackValueOfNullField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            object nullable51 = default(object);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "NullField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable51 = this._serializer48.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable41 = default(MsgPack.Unpacker);
                disposable41 = unpacker.ReadSubtree();
                try {
                    nullable51 = this._serializer48.UnpackFrom(disposable41);
                }
                finally {
                    if (((disposable41 == null) 
                                == false)) {
                        disposable41.Dispose();
                    }
                }
            }
            if (((nullable51 == null) 
                        == false)) {
                unpackingContext.NullField = nullable51;
            }
        }
        
        private void UnpackValueOfObjectArrayField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            object[] nullable52 = default(object[]);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ObjectArrayField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable52 = this._serializer49.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable42 = default(MsgPack.Unpacker);
                disposable42 = unpacker.ReadSubtree();
                try {
                    nullable52 = this._serializer49.UnpackFrom(disposable42);
                }
                finally {
                    if (((disposable42 == null) 
                                == false)) {
                        disposable42.Dispose();
                    }
                }
            }
            if (((nullable52 == null) 
                        == false)) {
                unpackingContext.ObjectArrayField = nullable52;
            }
        }
        
        private void UnpackValueOfObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            object nullable53 = default(object);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "ObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable53 = this._serializer48.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable43 = default(MsgPack.Unpacker);
                disposable43 = unpacker.ReadSubtree();
                try {
                    nullable53 = this._serializer48.UnpackFrom(disposable43);
                }
                finally {
                    if (((disposable43 == null) 
                                == false)) {
                        disposable43.Dispose();
                    }
                }
            }
            if (((nullable53 == null) 
                        == false)) {
                unpackingContext.ObjectField = nullable53;
            }
        }
        
        private void UnpackValueOfStringField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            string nullable54 = default(string);
            nullable54 = MsgPack.Serialization.UnpackHelpers.UnpackStringValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "StringField");
            if (((nullable54 == null) 
                        == false)) {
                unpackingContext.StringField = nullable54;
            }
        }
        
        private void UnpackValueOfStringKeyedCollection_DateTimeField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            MsgPack.Serialization.StringKeyedCollection<System.DateTime> nullable55 = default(MsgPack.Serialization.StringKeyedCollection<System.DateTime>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "StringKeyedCollection_DateTimeField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable55 = this._serializer51.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable44 = default(MsgPack.Unpacker);
                disposable44 = unpacker.ReadSubtree();
                try {
                    nullable55 = this._serializer51.UnpackFrom(disposable44);
                }
                finally {
                    if (((disposable44 == null) 
                                == false)) {
                        disposable44.Dispose();
                    }
                }
            }
            if (((nullable55 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<System.DateTime> enumerator25 = nullable55.GetEnumerator();
                System.DateTime current25;
                try {
                    for (
                    ; enumerator25.MoveNext(); 
                    ) {
                        current25 = enumerator25.Current;
                        unpackingContext.StringKeyedCollection_DateTimeField.Add(current25);
                    }
                }
                finally {
                    enumerator25.Dispose();
                }
            }
        }
        
        private void UnpackValueOfStringKeyedCollection_MessagePackObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            MsgPack.Serialization.StringKeyedCollection<MsgPack.MessagePackObject> nullable56 = default(MsgPack.Serialization.StringKeyedCollection<MsgPack.MessagePackObject>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "StringKeyedCollection_MessagePackObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable56 = this._serializer52.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable45 = default(MsgPack.Unpacker);
                disposable45 = unpacker.ReadSubtree();
                try {
                    nullable56 = this._serializer52.UnpackFrom(disposable45);
                }
                finally {
                    if (((disposable45 == null) 
                                == false)) {
                        disposable45.Dispose();
                    }
                }
            }
            if (((nullable56 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<MsgPack.MessagePackObject> enumerator26 = nullable56.GetEnumerator();
                MsgPack.MessagePackObject current26;
                try {
                    for (
                    ; enumerator26.MoveNext(); 
                    ) {
                        current26 = enumerator26.Current;
                        unpackingContext.StringKeyedCollection_MessagePackObjectField.Add(current26);
                    }
                }
                finally {
                    enumerator26.Dispose();
                }
            }
        }
        
        private void UnpackValueOfStringKeyedCollection_ObjectField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            MsgPack.Serialization.StringKeyedCollection<object> nullable57 = default(MsgPack.Serialization.StringKeyedCollection<object>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "StringKeyedCollection_ObjectField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable57 = this._serializer53.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable46 = default(MsgPack.Unpacker);
                disposable46 = unpacker.ReadSubtree();
                try {
                    nullable57 = this._serializer53.UnpackFrom(disposable46);
                }
                finally {
                    if (((disposable46 == null) 
                                == false)) {
                        disposable46.Dispose();
                    }
                }
            }
            if (((nullable57 == null) 
                        == false)) {
                System.Collections.Generic.IEnumerator<object> enumerator27 = nullable57.GetEnumerator();
                object current27;
                try {
                    for (
                    ; enumerator27.MoveNext(); 
                    ) {
                        current27 = enumerator27.Current;
                        unpackingContext.StringKeyedCollection_ObjectField.Add(current27);
                    }
                }
                finally {
                    enumerator27.Dispose();
                }
            }
        }
        
        private void UnpackValueOfTimeSpanField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<System.TimeSpan> nullable58 = default(System.Nullable<System.TimeSpan>);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "TimeSpanField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable58 = this._serializer68.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable47 = default(MsgPack.Unpacker);
                disposable47 = unpacker.ReadSubtree();
                try {
                    nullable58 = this._serializer68.UnpackFrom(disposable47);
                }
                finally {
                    if (((disposable47 == null) 
                                == false)) {
                        disposable47.Dispose();
                    }
                }
            }
            if (nullable58.HasValue) {
                unpackingContext.TimeSpanField = nullable58.Value;
            }
        }
        
        private void UnpackValueOfTinyByteField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<byte> nullable59 = default(System.Nullable<byte>);
            nullable59 = MsgPack.Serialization.UnpackHelpers.UnpackNullableByteValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "TinyByteField");
            if (nullable59.HasValue) {
                unpackingContext.TinyByteField = nullable59.Value;
            }
        }
        
        private void UnpackValueOfTinyInt32Field(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<int> nullable60 = default(System.Nullable<int>);
            nullable60 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt32Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "TinyInt32Field");
            if (nullable60.HasValue) {
                unpackingContext.TinyInt32Field = nullable60.Value;
            }
        }
        
        private void UnpackValueOfTinyInt64Field(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<long> nullable61 = default(System.Nullable<long>);
            nullable61 = MsgPack.Serialization.UnpackHelpers.UnpackNullableInt64Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "TinyInt64Field");
            if (nullable61.HasValue) {
                unpackingContext.TinyInt64Field = nullable61.Value;
            }
        }
        
        private void UnpackValueOfTinyUInt16Field(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<ushort> nullable62 = default(System.Nullable<ushort>);
            nullable62 = MsgPack.Serialization.UnpackHelpers.UnpackNullableUInt16Value(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "TinyUInt16Field");
            if (nullable62.HasValue) {
                unpackingContext.TinyUInt16Field = nullable62.Value;
            }
        }
        
        private void UnpackValueOfTrueField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Nullable<bool> nullable63 = default(System.Nullable<bool>);
            nullable63 = MsgPack.Serialization.UnpackHelpers.UnpackNullableBooleanValue(unpacker, typeof(MsgPack.Serialization.ComplexTypeGenerated), "TrueField");
            if (nullable63.HasValue) {
                unpackingContext.TrueField = nullable63.Value;
            }
        }
        
        private void UnpackValueOfUriField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Uri nullable64 = default(System.Uri);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "UriField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable64 = this._serializer55.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable48 = default(MsgPack.Unpacker);
                disposable48 = unpacker.ReadSubtree();
                try {
                    nullable64 = this._serializer55.UnpackFrom(disposable48);
                }
                finally {
                    if (((disposable48 == null) 
                                == false)) {
                        disposable48.Dispose();
                    }
                }
            }
            if (((nullable64 == null) 
                        == false)) {
                unpackingContext.UriField = nullable64;
            }
        }
        
        private void UnpackValueOfVersionField(MsgPack.Unpacker unpacker, MsgPack.Serialization.ComplexTypeGenerated unpackingContext, int indexOfItem) {
            System.Version nullable65 = default(System.Version);
            if ((unpacker.Read() == false)) {
                MsgPack.Serialization.SerializationExceptions.ThrowMissingItem(indexOfItem, "VersionField", unpacker);
            }
            if (((unpacker.IsArrayHeader == false) 
                        && (unpacker.IsMapHeader == false))) {
                nullable65 = this._serializer56.UnpackFrom(unpacker);
            }
            else {
                MsgPack.Unpacker disposable49 = default(MsgPack.Unpacker);
                disposable49 = unpacker.ReadSubtree();
                try {
                    nullable65 = this._serializer56.UnpackFrom(disposable49);
                }
                finally {
                    if (((disposable49 == null) 
                                == false)) {
                        disposable49.Dispose();
                    }
                }
            }
            if (((nullable65 == null) 
                        == false)) {
                unpackingContext.VersionField = nullable65;
            }
        }
        
        protected internal override MsgPack.Serialization.ComplexTypeGenerated UnpackFromCore(MsgPack.Unpacker unpacker) {
            MsgPack.Serialization.ComplexTypeGenerated result = default(MsgPack.Serialization.ComplexTypeGenerated);
            result = new MsgPack.Serialization.ComplexTypeGenerated();
            if (unpacker.IsArrayHeader) {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromArray(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<MsgPack.Serialization.ComplexTypeGenerated>(), this._memberNames, this._unpackOperationList);
            }
            else {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromMap(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<MsgPack.Serialization.ComplexTypeGenerated>(), this._unpackOperationTable);
            }
        }
    }
}
