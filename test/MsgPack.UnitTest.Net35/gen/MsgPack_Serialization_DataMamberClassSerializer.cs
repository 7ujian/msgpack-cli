//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.8670
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MsgPack.Serialization.GeneratedSerializers {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MsgPack.Serialization.CodeDomSerializers.CodeDomSerializerBuilder", "0.7.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class MsgPack_Serialization_DataMamberClassSerializer : MsgPack.Serialization.MessagePackSerializer<MsgPack.Serialization.DataMamberClass> {
        
        private MsgPack.Serialization.MessagePackSerializer<int> _serializer0;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfAliasDelegate;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfPublicFieldDelegate;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackMemberPlaceHolderDelegate;
        
        private System.Reflection.MethodBase _methodBaseDataMamberClass_get_NonPublicProperty0;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicPropertyDelegate;
        
        private System.Reflection.FieldInfo _fieldDataMamberClass_NonPublicField0;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicFieldDelegate;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonSerializedPublicFieldDelegate;
        
        private System.Reflection.FieldInfo _fieldDataMamberClass_NonSerializedNonPublicField1;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonSerializedNonPublicFieldDelegate;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.List<int>> _serializer1;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfCollectionReadOnlyPropertyDelegate;
        
        private System.Reflection.MethodBase _methodBaseDataMamberClass_get_NonPublicCollectionProperty1;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicCollectionPropertyDelegate;
        
        private System.Reflection.FieldInfo _fieldDataMamberClass_NonPublicCollectionField2;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicCollectionFieldDelegate;
        
        private System.Reflection.MethodBase _methodBaseDataMamberClass_get_NonPublicCollectionReadOnlyProperty2;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicCollectionReadOnlyPropertyDelegate;
        
        private System.Reflection.FieldInfo _fieldDataMamberClass_NonPublicCollectionReadOnlyField3;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicCollectionReadOnlyFieldDelegate;
        
        private System.Reflection.MethodBase _methodBaseDataMamberClass_get_NonPublicDictionaryProperty3;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Generic.Dictionary<string, int>> _serializer2;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicDictionaryPropertyDelegate;
        
        private System.Reflection.FieldInfo _fieldDataMamberClass_NonPublicDictionaryField4;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicDictionaryFieldDelegate;
        
        private System.Reflection.MethodBase _methodBaseDataMamberClass_get_NonPublicDictionaryReadOnlyProperty4;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicDictionaryReadOnlyPropertyDelegate;
        
        private System.Reflection.FieldInfo _fieldDataMamberClass_NonPublicDictionaryReadOnlyField5;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicDictionaryReadOnlyFieldDelegate;
        
        private System.Reflection.MethodBase _methodBaseDataMamberClass_get_NonPublicHashtableProperty5;
        
        private MsgPack.Serialization.MessagePackSerializer<System.Collections.Hashtable> _serializer3;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicHashtablePropertyDelegate;
        
        private System.Reflection.FieldInfo _fieldDataMamberClass_NonPublicHashtableField6;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicHashtableFieldDelegate;
        
        private System.Reflection.MethodBase _methodBaseDataMamberClass_get_NonPublicHashtableReadOnlyProperty6;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicHashtableReadOnlyPropertyDelegate;
        
        private System.Reflection.FieldInfo _fieldDataMamberClass_NonPublicHashtableReadOnlyField7;
        
        private System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass> this_PackValueOfNonPublicHashtableReadOnlyFieldDelegate;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>> _packOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>> _packOperationTable;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, int> this_SetUnpackedValueOfPublicPropertyDelegate;
        
        private System.Func<MsgPack.Unpacker, System.Type, string, int> MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfAliasDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, int> this_SetUnpackedValueOfPublicFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfPublicFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackMemberPlaceHolderDelegate;
        
        private System.Reflection.MethodBase _methodBaseDataMamberClass_set_NonPublicProperty7;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, int> this_SetUnpackedValueOfNonPublicPropertyDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicPropertyDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, int> this_SetUnpackedValueOfNonPublicFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicFieldDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, int> this_SetUnpackedValueOfNonSerializedPublicFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonSerializedPublicFieldDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, int> this_SetUnpackedValueOfNonSerializedNonPublicFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonSerializedNonPublicFieldDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.List<int>> this_SetUnpackedValueOfCollectionReadOnlyPropertyDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfCollectionReadOnlyPropertyDelegate;
        
        private System.Reflection.MethodBase _methodBaseDataMamberClass_set_NonPublicCollectionProperty8;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.List<int>> this_SetUnpackedValueOfNonPublicCollectionPropertyDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicCollectionPropertyDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.List<int>> this_SetUnpackedValueOfNonPublicCollectionFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicCollectionFieldDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.List<int>> this_SetUnpackedValueOfNonPublicCollectionReadOnlyPropertyDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicCollectionReadOnlyPropertyDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.List<int>> this_SetUnpackedValueOfNonPublicCollectionReadOnlyFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicCollectionReadOnlyFieldDelegate;
        
        private System.Reflection.MethodBase _methodBaseDataMamberClass_set_NonPublicDictionaryProperty9;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.Dictionary<string, int>> this_SetUnpackedValueOfNonPublicDictionaryPropertyDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicDictionaryPropertyDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.Dictionary<string, int>> this_SetUnpackedValueOfNonPublicDictionaryFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicDictionaryFieldDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.Dictionary<string, int>> this_SetUnpackedValueOfNonPublicDictionaryReadOnlyPropertyDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicDictionaryReadOnlyPropertyDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.Dictionary<string, int>> this_SetUnpackedValueOfNonPublicDictionaryReadOnlyFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicDictionaryReadOnlyFieldDelegate;
        
        private System.Reflection.MethodBase _methodBaseDataMamberClass_set_NonPublicHashtableProperty10;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Hashtable> this_SetUnpackedValueOfNonPublicHashtablePropertyDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicHashtablePropertyDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Hashtable> this_SetUnpackedValueOfNonPublicHashtableFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicHashtableFieldDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Hashtable> this_SetUnpackedValueOfNonPublicHashtableReadOnlyPropertyDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicHashtableReadOnlyPropertyDelegate;
        
        private System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Hashtable> this_SetUnpackedValueOfNonPublicHashtableReadOnlyFieldDelegate;
        
        private System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int> this_UnpackValueOfNonPublicHashtableReadOnlyFieldDelegate;
        
        private System.Collections.Generic.IList<string> _memberNames;
        
        private System.Collections.Generic.IList<System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>> _unpackOperationList;
        
        private System.Collections.Generic.IDictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>> _unpackOperationTable;
        
        public MsgPack_Serialization_DataMamberClassSerializer(MsgPack.Serialization.SerializationContext context) : 
                base(context) {
            MsgPack.Serialization.PolymorphismSchema schema0 = default(MsgPack.Serialization.PolymorphismSchema);
            schema0 = null;
            this._serializer0 = context.GetSerializer<int>(schema0);
            MsgPack.Serialization.PolymorphismSchema schema1 = default(MsgPack.Serialization.PolymorphismSchema);
            schema1 = null;
            this._serializer1 = context.GetSerializer<System.Collections.Generic.List<int>>(schema1);
            MsgPack.Serialization.PolymorphismSchema schema2 = default(MsgPack.Serialization.PolymorphismSchema);
            schema2 = null;
            this._serializer2 = context.GetSerializer<System.Collections.Generic.Dictionary<string, int>>(schema2);
            MsgPack.Serialization.PolymorphismSchema schema3 = default(MsgPack.Serialization.PolymorphismSchema);
            schema3 = null;
            this._serializer3 = context.GetSerializer<System.Collections.Hashtable>(schema3);
            this._fieldDataMamberClass_NonPublicField0 = typeof(MsgPack.Serialization.DataMamberClass).GetField("NonPublicField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            this._fieldDataMamberClass_NonSerializedNonPublicField1 = typeof(MsgPack.Serialization.DataMamberClass).GetField("NonSerializedNonPublicField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            this._fieldDataMamberClass_NonPublicCollectionField2 = typeof(MsgPack.Serialization.DataMamberClass).GetField("NonPublicCollectionField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            this._fieldDataMamberClass_NonPublicCollectionReadOnlyField3 = typeof(MsgPack.Serialization.DataMamberClass).GetField("NonPublicCollectionReadOnlyField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            this._fieldDataMamberClass_NonPublicDictionaryField4 = typeof(MsgPack.Serialization.DataMamberClass).GetField("NonPublicDictionaryField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            this._fieldDataMamberClass_NonPublicDictionaryReadOnlyField5 = typeof(MsgPack.Serialization.DataMamberClass).GetField("NonPublicDictionaryReadOnlyField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            this._fieldDataMamberClass_NonPublicHashtableField6 = typeof(MsgPack.Serialization.DataMamberClass).GetField("NonPublicHashtableField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            this._fieldDataMamberClass_NonPublicHashtableReadOnlyField7 = typeof(MsgPack.Serialization.DataMamberClass).GetField("NonPublicHashtableReadOnlyField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            this._methodBaseDataMamberClass_get_NonPublicProperty0 = typeof(MsgPack.Serialization.DataMamberClass).GetMethod("get_NonPublicProperty", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)), null, new System.Type[0], null);
            this._methodBaseDataMamberClass_get_NonPublicCollectionProperty1 = typeof(MsgPack.Serialization.DataMamberClass).GetMethod("get_NonPublicCollectionProperty", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)), null, new System.Type[0], null);
            this._methodBaseDataMamberClass_get_NonPublicCollectionReadOnlyProperty2 = typeof(MsgPack.Serialization.DataMamberClass).GetMethod("get_NonPublicCollectionReadOnlyProperty", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)), null, new System.Type[0], null);
            this._methodBaseDataMamberClass_get_NonPublicDictionaryProperty3 = typeof(MsgPack.Serialization.DataMamberClass).GetMethod("get_NonPublicDictionaryProperty", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)), null, new System.Type[0], null);
            this._methodBaseDataMamberClass_get_NonPublicDictionaryReadOnlyProperty4 = typeof(MsgPack.Serialization.DataMamberClass).GetMethod("get_NonPublicDictionaryReadOnlyProperty", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)), null, new System.Type[0], null);
            this._methodBaseDataMamberClass_get_NonPublicHashtableProperty5 = typeof(MsgPack.Serialization.DataMamberClass).GetMethod("get_NonPublicHashtableProperty", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)), null, new System.Type[0], null);
            this._methodBaseDataMamberClass_get_NonPublicHashtableReadOnlyProperty6 = typeof(MsgPack.Serialization.DataMamberClass).GetMethod("get_NonPublicHashtableReadOnlyProperty", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)), null, new System.Type[0], null);
            this._methodBaseDataMamberClass_set_NonPublicProperty7 = typeof(MsgPack.Serialization.DataMamberClass).GetMethod("set_NonPublicProperty", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)), null, new System.Type[] {
                        typeof(int)}, null);
            this._methodBaseDataMamberClass_set_NonPublicCollectionProperty8 = typeof(MsgPack.Serialization.DataMamberClass).GetMethod("set_NonPublicCollectionProperty", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)), null, new System.Type[] {
                        typeof(System.Collections.Generic.List<int>)}, null);
            this._methodBaseDataMamberClass_set_NonPublicDictionaryProperty9 = typeof(MsgPack.Serialization.DataMamberClass).GetMethod("set_NonPublicDictionaryProperty", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)), null, new System.Type[] {
                        typeof(System.Collections.Generic.Dictionary<string, int>)}, null);
            this._methodBaseDataMamberClass_set_NonPublicHashtableProperty10 = typeof(MsgPack.Serialization.DataMamberClass).GetMethod("set_NonPublicHashtableProperty", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)), null, new System.Type[] {
                        typeof(System.Collections.Hashtable)}, null);
            System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>[] packOperationList = default(System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>[]);
            packOperationList = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>[22];
            packOperationList[0] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfAlias);
            packOperationList[1] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfPublicField);
            packOperationList[2] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackMemberPlaceHolder);
            packOperationList[3] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackMemberPlaceHolder);
            packOperationList[4] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicProperty);
            packOperationList[5] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicField);
            packOperationList[6] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonSerializedPublicField);
            packOperationList[7] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackMemberPlaceHolder);
            packOperationList[8] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonSerializedNonPublicField);
            packOperationList[9] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfCollectionReadOnlyProperty);
            packOperationList[10] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicCollectionProperty);
            packOperationList[11] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicCollectionField);
            packOperationList[12] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicCollectionReadOnlyProperty);
            packOperationList[13] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicCollectionReadOnlyField);
            packOperationList[14] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicDictionaryProperty);
            packOperationList[15] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicDictionaryField);
            packOperationList[16] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicDictionaryReadOnlyProperty);
            packOperationList[17] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicDictionaryReadOnlyField);
            packOperationList[18] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicHashtableProperty);
            packOperationList[19] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicHashtableField);
            packOperationList[20] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicHashtableReadOnlyProperty);
            packOperationList[21] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicHashtableReadOnlyField);
            this._packOperationList = packOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>> packOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>>);
            packOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>>(19);
            packOperationTable["Alias"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfAlias);
            packOperationTable["PublicField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfPublicField);
            packOperationTable["NonPublicProperty"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicProperty);
            packOperationTable["NonPublicField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicField);
            packOperationTable["NonSerializedPublicField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonSerializedPublicField);
            packOperationTable["NonSerializedNonPublicField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonSerializedNonPublicField);
            packOperationTable["CollectionReadOnlyProperty"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfCollectionReadOnlyProperty);
            packOperationTable["NonPublicCollectionProperty"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicCollectionProperty);
            packOperationTable["NonPublicCollectionField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicCollectionField);
            packOperationTable["NonPublicCollectionReadOnlyProperty"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicCollectionReadOnlyProperty);
            packOperationTable["NonPublicCollectionReadOnlyField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicCollectionReadOnlyField);
            packOperationTable["NonPublicDictionaryProperty"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicDictionaryProperty);
            packOperationTable["NonPublicDictionaryField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicDictionaryField);
            packOperationTable["NonPublicDictionaryReadOnlyProperty"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicDictionaryReadOnlyProperty);
            packOperationTable["NonPublicDictionaryReadOnlyField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicDictionaryReadOnlyField);
            packOperationTable["NonPublicHashtableProperty"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicHashtableProperty);
            packOperationTable["NonPublicHashtableField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicHashtableField);
            packOperationTable["NonPublicHashtableReadOnlyProperty"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicHashtableReadOnlyProperty);
            packOperationTable["NonPublicHashtableReadOnlyField"] = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicHashtableReadOnlyField);
            this._packOperationTable = packOperationTable;
            System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>[] unpackOperationList = default(System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>[]);
            unpackOperationList = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>[22];
            unpackOperationList[0] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfAlias);
            unpackOperationList[1] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfPublicField);
            unpackOperationList[2] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackMemberPlaceHolder);
            unpackOperationList[3] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackMemberPlaceHolder);
            unpackOperationList[4] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicProperty);
            unpackOperationList[5] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicField);
            unpackOperationList[6] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonSerializedPublicField);
            unpackOperationList[7] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackMemberPlaceHolder);
            unpackOperationList[8] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonSerializedNonPublicField);
            unpackOperationList[9] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfCollectionReadOnlyProperty);
            unpackOperationList[10] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicCollectionProperty);
            unpackOperationList[11] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicCollectionField);
            unpackOperationList[12] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicCollectionReadOnlyProperty);
            unpackOperationList[13] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicCollectionReadOnlyField);
            unpackOperationList[14] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicDictionaryProperty);
            unpackOperationList[15] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicDictionaryField);
            unpackOperationList[16] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicDictionaryReadOnlyProperty);
            unpackOperationList[17] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicDictionaryReadOnlyField);
            unpackOperationList[18] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicHashtableProperty);
            unpackOperationList[19] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicHashtableField);
            unpackOperationList[20] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicHashtableReadOnlyProperty);
            unpackOperationList[21] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicHashtableReadOnlyField);
            this._unpackOperationList = unpackOperationList;
            System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>> unpackOperationTable = default(System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>>);
            unpackOperationTable = new System.Collections.Generic.Dictionary<string, System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>>(19);
            unpackOperationTable["Alias"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfAlias);
            unpackOperationTable["PublicField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfPublicField);
            unpackOperationTable["NonPublicProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicProperty);
            unpackOperationTable["NonPublicField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicField);
            unpackOperationTable["NonSerializedPublicField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonSerializedPublicField);
            unpackOperationTable["NonSerializedNonPublicField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonSerializedNonPublicField);
            unpackOperationTable["CollectionReadOnlyProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfCollectionReadOnlyProperty);
            unpackOperationTable["NonPublicCollectionProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicCollectionProperty);
            unpackOperationTable["NonPublicCollectionField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicCollectionField);
            unpackOperationTable["NonPublicCollectionReadOnlyProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicCollectionReadOnlyProperty);
            unpackOperationTable["NonPublicCollectionReadOnlyField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicCollectionReadOnlyField);
            unpackOperationTable["NonPublicDictionaryProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicDictionaryProperty);
            unpackOperationTable["NonPublicDictionaryField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicDictionaryField);
            unpackOperationTable["NonPublicDictionaryReadOnlyProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicDictionaryReadOnlyProperty);
            unpackOperationTable["NonPublicDictionaryReadOnlyField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicDictionaryReadOnlyField);
            unpackOperationTable["NonPublicHashtableProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicHashtableProperty);
            unpackOperationTable["NonPublicHashtableField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicHashtableField);
            unpackOperationTable["NonPublicHashtableReadOnlyProperty"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicHashtableReadOnlyProperty);
            unpackOperationTable["NonPublicHashtableReadOnlyField"] = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicHashtableReadOnlyField);
            this._unpackOperationTable = unpackOperationTable;
            this._memberNames = new string[] {
                    "Alias",
                    "PublicField",
                    null,
                    null,
                    "NonPublicProperty",
                    "NonPublicField",
                    "NonSerializedPublicField",
                    null,
                    "NonSerializedNonPublicField",
                    "CollectionReadOnlyProperty",
                    "NonPublicCollectionProperty",
                    "NonPublicCollectionField",
                    "NonPublicCollectionReadOnlyProperty",
                    "NonPublicCollectionReadOnlyField",
                    "NonPublicDictionaryProperty",
                    "NonPublicDictionaryField",
                    "NonPublicDictionaryReadOnlyProperty",
                    "NonPublicDictionaryReadOnlyField",
                    "NonPublicHashtableProperty",
                    "NonPublicHashtableField",
                    "NonPublicHashtableReadOnlyProperty",
                    "NonPublicHashtableReadOnlyField"};
            this.this_PackValueOfAliasDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfAlias);
            this.this_PackValueOfPublicFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfPublicField);
            this.this_PackMemberPlaceHolderDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackMemberPlaceHolder);
            this.this_PackValueOfNonPublicPropertyDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicProperty);
            this.this_PackValueOfNonPublicFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicField);
            this.this_PackValueOfNonSerializedPublicFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonSerializedPublicField);
            this.this_PackValueOfNonSerializedNonPublicFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonSerializedNonPublicField);
            this.this_PackValueOfCollectionReadOnlyPropertyDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfCollectionReadOnlyProperty);
            this.this_PackValueOfNonPublicCollectionPropertyDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicCollectionProperty);
            this.this_PackValueOfNonPublicCollectionFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicCollectionField);
            this.this_PackValueOfNonPublicCollectionReadOnlyPropertyDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicCollectionReadOnlyProperty);
            this.this_PackValueOfNonPublicCollectionReadOnlyFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicCollectionReadOnlyField);
            this.this_PackValueOfNonPublicDictionaryPropertyDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicDictionaryProperty);
            this.this_PackValueOfNonPublicDictionaryFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicDictionaryField);
            this.this_PackValueOfNonPublicDictionaryReadOnlyPropertyDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicDictionaryReadOnlyProperty);
            this.this_PackValueOfNonPublicDictionaryReadOnlyFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicDictionaryReadOnlyField);
            this.this_PackValueOfNonPublicHashtablePropertyDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicHashtableProperty);
            this.this_PackValueOfNonPublicHashtableFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicHashtableField);
            this.this_PackValueOfNonPublicHashtableReadOnlyPropertyDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicHashtableReadOnlyProperty);
            this.this_PackValueOfNonPublicHashtableReadOnlyFieldDelegate = new System.Action<MsgPack.Packer, MsgPack.Serialization.DataMamberClass>(this.PackValueOfNonPublicHashtableReadOnlyField);
            this.this_SetUnpackedValueOfPublicPropertyDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, int>(this.SetUnpackedValueOfPublicProperty);
            this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate = new System.Func<MsgPack.Unpacker, System.Type, string, int>(MsgPack.Serialization.UnpackHelpers.UnpackInt32Value);
            this.this_UnpackValueOfAliasDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfAlias);
            this.this_SetUnpackedValueOfPublicFieldDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, int>(this.SetUnpackedValueOfPublicField);
            this.this_UnpackValueOfPublicFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfPublicField);
            this.this_UnpackMemberPlaceHolderDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackMemberPlaceHolder);
            this.this_SetUnpackedValueOfNonPublicPropertyDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, int>(this.SetUnpackedValueOfNonPublicProperty);
            this.this_UnpackValueOfNonPublicPropertyDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicProperty);
            this.this_SetUnpackedValueOfNonPublicFieldDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, int>(this.SetUnpackedValueOfNonPublicField);
            this.this_UnpackValueOfNonPublicFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicField);
            this.this_SetUnpackedValueOfNonSerializedPublicFieldDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, int>(this.SetUnpackedValueOfNonSerializedPublicField);
            this.this_UnpackValueOfNonSerializedPublicFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonSerializedPublicField);
            this.this_SetUnpackedValueOfNonSerializedNonPublicFieldDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, int>(this.SetUnpackedValueOfNonSerializedNonPublicField);
            this.this_UnpackValueOfNonSerializedNonPublicFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonSerializedNonPublicField);
            this.this_SetUnpackedValueOfCollectionReadOnlyPropertyDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.List<int>>(this.SetUnpackedValueOfCollectionReadOnlyProperty);
            this.this_UnpackValueOfCollectionReadOnlyPropertyDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfCollectionReadOnlyProperty);
            this.this_SetUnpackedValueOfNonPublicCollectionPropertyDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.List<int>>(this.SetUnpackedValueOfNonPublicCollectionProperty);
            this.this_UnpackValueOfNonPublicCollectionPropertyDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicCollectionProperty);
            this.this_SetUnpackedValueOfNonPublicCollectionFieldDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.List<int>>(this.SetUnpackedValueOfNonPublicCollectionField);
            this.this_UnpackValueOfNonPublicCollectionFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicCollectionField);
            this.this_SetUnpackedValueOfNonPublicCollectionReadOnlyPropertyDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.List<int>>(this.SetUnpackedValueOfNonPublicCollectionReadOnlyProperty);
            this.this_UnpackValueOfNonPublicCollectionReadOnlyPropertyDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicCollectionReadOnlyProperty);
            this.this_SetUnpackedValueOfNonPublicCollectionReadOnlyFieldDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.List<int>>(this.SetUnpackedValueOfNonPublicCollectionReadOnlyField);
            this.this_UnpackValueOfNonPublicCollectionReadOnlyFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicCollectionReadOnlyField);
            this.this_SetUnpackedValueOfNonPublicDictionaryPropertyDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.Dictionary<string, int>>(this.SetUnpackedValueOfNonPublicDictionaryProperty);
            this.this_UnpackValueOfNonPublicDictionaryPropertyDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicDictionaryProperty);
            this.this_SetUnpackedValueOfNonPublicDictionaryFieldDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.Dictionary<string, int>>(this.SetUnpackedValueOfNonPublicDictionaryField);
            this.this_UnpackValueOfNonPublicDictionaryFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicDictionaryField);
            this.this_SetUnpackedValueOfNonPublicDictionaryReadOnlyPropertyDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.Dictionary<string, int>>(this.SetUnpackedValueOfNonPublicDictionaryReadOnlyProperty);
            this.this_UnpackValueOfNonPublicDictionaryReadOnlyPropertyDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicDictionaryReadOnlyProperty);
            this.this_SetUnpackedValueOfNonPublicDictionaryReadOnlyFieldDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Generic.Dictionary<string, int>>(this.SetUnpackedValueOfNonPublicDictionaryReadOnlyField);
            this.this_UnpackValueOfNonPublicDictionaryReadOnlyFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicDictionaryReadOnlyField);
            this.this_SetUnpackedValueOfNonPublicHashtablePropertyDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Hashtable>(this.SetUnpackedValueOfNonPublicHashtableProperty);
            this.this_UnpackValueOfNonPublicHashtablePropertyDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicHashtableProperty);
            this.this_SetUnpackedValueOfNonPublicHashtableFieldDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Hashtable>(this.SetUnpackedValueOfNonPublicHashtableField);
            this.this_UnpackValueOfNonPublicHashtableFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicHashtableField);
            this.this_SetUnpackedValueOfNonPublicHashtableReadOnlyPropertyDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Hashtable>(this.SetUnpackedValueOfNonPublicHashtableReadOnlyProperty);
            this.this_UnpackValueOfNonPublicHashtableReadOnlyPropertyDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicHashtableReadOnlyProperty);
            this.this_SetUnpackedValueOfNonPublicHashtableReadOnlyFieldDelegate = new System.Action<MsgPack.Serialization.DataMamberClass, System.Collections.Hashtable>(this.SetUnpackedValueOfNonPublicHashtableReadOnlyField);
            this.this_UnpackValueOfNonPublicHashtableReadOnlyFieldDelegate = new System.Action<MsgPack.Unpacker, MsgPack.Serialization.DataMamberClass, int, int>(this.UnpackValueOfNonPublicHashtableReadOnlyField);
        }
        
        private void PackValueOfAlias(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer0.PackTo(packer, objectTree.PublicProperty);
        }
        
        private void PackValueOfPublicField(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer0.PackTo(packer, objectTree.PublicField);
        }
        
        private void PackMemberPlaceHolder(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            packer.PackNull();
        }
        
        private void PackValueOfNonPublicProperty(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer0.PackTo(packer, ((int)(this._methodBaseDataMamberClass_get_NonPublicProperty0.Invoke(objectTree, null))));
        }
        
        private void PackValueOfNonPublicField(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer0.PackTo(packer, ((int)(this._fieldDataMamberClass_NonPublicField0.GetValue(objectTree))));
        }
        
        private void PackValueOfNonSerializedPublicField(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer0.PackTo(packer, objectTree.NonSerializedPublicField);
        }
        
        private void PackValueOfNonSerializedNonPublicField(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer0.PackTo(packer, ((int)(this._fieldDataMamberClass_NonSerializedNonPublicField1.GetValue(objectTree))));
        }
        
        private void PackValueOfCollectionReadOnlyProperty(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer1.PackTo(packer, objectTree.CollectionReadOnlyProperty);
        }
        
        private void PackValueOfNonPublicCollectionProperty(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer1.PackTo(packer, ((System.Collections.Generic.List<int>)(this._methodBaseDataMamberClass_get_NonPublicCollectionProperty1.Invoke(objectTree, null))));
        }
        
        private void PackValueOfNonPublicCollectionField(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer1.PackTo(packer, ((System.Collections.Generic.List<int>)(this._fieldDataMamberClass_NonPublicCollectionField2.GetValue(objectTree))));
        }
        
        private void PackValueOfNonPublicCollectionReadOnlyProperty(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer1.PackTo(packer, ((System.Collections.Generic.List<int>)(this._methodBaseDataMamberClass_get_NonPublicCollectionReadOnlyProperty2.Invoke(objectTree, null))));
        }
        
        private void PackValueOfNonPublicCollectionReadOnlyField(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer1.PackTo(packer, ((System.Collections.Generic.List<int>)(this._fieldDataMamberClass_NonPublicCollectionReadOnlyField3.GetValue(objectTree))));
        }
        
        private void PackValueOfNonPublicDictionaryProperty(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer2.PackTo(packer, ((System.Collections.Generic.Dictionary<string, int>)(this._methodBaseDataMamberClass_get_NonPublicDictionaryProperty3.Invoke(objectTree, null))));
        }
        
        private void PackValueOfNonPublicDictionaryField(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer2.PackTo(packer, ((System.Collections.Generic.Dictionary<string, int>)(this._fieldDataMamberClass_NonPublicDictionaryField4.GetValue(objectTree))));
        }
        
        private void PackValueOfNonPublicDictionaryReadOnlyProperty(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer2.PackTo(packer, ((System.Collections.Generic.Dictionary<string, int>)(this._methodBaseDataMamberClass_get_NonPublicDictionaryReadOnlyProperty4.Invoke(objectTree, null))));
        }
        
        private void PackValueOfNonPublicDictionaryReadOnlyField(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer2.PackTo(packer, ((System.Collections.Generic.Dictionary<string, int>)(this._fieldDataMamberClass_NonPublicDictionaryReadOnlyField5.GetValue(objectTree))));
        }
        
        private void PackValueOfNonPublicHashtableProperty(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer3.PackTo(packer, ((System.Collections.Hashtable)(this._methodBaseDataMamberClass_get_NonPublicHashtableProperty5.Invoke(objectTree, null))));
        }
        
        private void PackValueOfNonPublicHashtableField(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer3.PackTo(packer, ((System.Collections.Hashtable)(this._fieldDataMamberClass_NonPublicHashtableField6.GetValue(objectTree))));
        }
        
        private void PackValueOfNonPublicHashtableReadOnlyProperty(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer3.PackTo(packer, ((System.Collections.Hashtable)(this._methodBaseDataMamberClass_get_NonPublicHashtableReadOnlyProperty6.Invoke(objectTree, null))));
        }
        
        private void PackValueOfNonPublicHashtableReadOnlyField(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            this._serializer3.PackTo(packer, ((System.Collections.Hashtable)(this._fieldDataMamberClass_NonPublicHashtableReadOnlyField7.GetValue(objectTree))));
        }
        
        protected internal override void PackToCore(MsgPack.Packer packer, MsgPack.Serialization.DataMamberClass objectTree) {
            if ((this.OwnerContext.SerializationMethod == MsgPack.Serialization.SerializationMethod.Array)) {
                MsgPack.Serialization.PackHelpers.PackToArray(packer, objectTree, this._packOperationList);
            }
            else {
                MsgPack.Serialization.PackHelpers.PackToMap(packer, objectTree, this._packOperationTable);
            }
        }
        
        private void SetUnpackedValueOfPublicProperty(MsgPack.Serialization.DataMamberClass unpackingContext, int unpackedValue) {
            unpackingContext.PublicProperty = unpackedValue;
        }
        
        private void UnpackValueOfAlias(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "Alias", MsgPack.Serialization.NilImplication.MemberDefault, this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate, this.this_SetUnpackedValueOfPublicPropertyDelegate);
        }
        
        private void SetUnpackedValueOfPublicField(MsgPack.Serialization.DataMamberClass unpackingContext, int unpackedValue) {
            unpackingContext.PublicField = unpackedValue;
        }
        
        private void UnpackValueOfPublicField(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "PublicField", MsgPack.Serialization.NilImplication.MemberDefault, this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate, this.this_SetUnpackedValueOfPublicFieldDelegate);
        }
        
        private void UnpackMemberPlaceHolder(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            unpacker.Read();
        }
        
        private void SetUnpackedValueOfNonPublicProperty(MsgPack.Serialization.DataMamberClass unpackingContext, int unpackedValue) {
            this._methodBaseDataMamberClass_set_NonPublicProperty7.Invoke(unpackingContext, new object[] {
                        ((object)(unpackedValue))});
        }
        
        private void UnpackValueOfNonPublicProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "NonPublicProperty", MsgPack.Serialization.NilImplication.MemberDefault, this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate, this.this_SetUnpackedValueOfNonPublicPropertyDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicField(MsgPack.Serialization.DataMamberClass unpackingContext, int unpackedValue) {
            this._fieldDataMamberClass_NonPublicField0.SetValue(unpackingContext, ((object)(unpackedValue)));
        }
        
        private void UnpackValueOfNonPublicField(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "NonPublicField", MsgPack.Serialization.NilImplication.MemberDefault, this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate, this.this_SetUnpackedValueOfNonPublicFieldDelegate);
        }
        
        private void SetUnpackedValueOfNonSerializedPublicField(MsgPack.Serialization.DataMamberClass unpackingContext, int unpackedValue) {
            unpackingContext.NonSerializedPublicField = unpackedValue;
        }
        
        private void UnpackValueOfNonSerializedPublicField(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "NonSerializedPublicField", MsgPack.Serialization.NilImplication.MemberDefault, this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate, this.this_SetUnpackedValueOfNonSerializedPublicFieldDelegate);
        }
        
        private void SetUnpackedValueOfNonSerializedNonPublicField(MsgPack.Serialization.DataMamberClass unpackingContext, int unpackedValue) {
            this._fieldDataMamberClass_NonSerializedNonPublicField1.SetValue(unpackingContext, ((object)(unpackedValue)));
        }
        
        private void UnpackValueOfNonSerializedNonPublicField(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackValueTypeValue(unpacker, unpackingContext, this._serializer0, itemsCount, indexOfItem, typeof(int), "NonSerializedNonPublicField", MsgPack.Serialization.NilImplication.MemberDefault, this.MsgPack_Serialization_UnpackHelpers_UnpackInt32ValueDelegate, this.this_SetUnpackedValueOfNonSerializedNonPublicFieldDelegate);
        }
        
        private void SetUnpackedValueOfCollectionReadOnlyProperty(MsgPack.Serialization.DataMamberClass unpackingContext, System.Collections.Generic.List<int> unpackedValue) {
            System.Collections.Generic.List<int> existent = default(System.Collections.Generic.List<int>);
            existent = unpackingContext.CollectionReadOnlyProperty;
            System.Collections.Generic.List<int>.Enumerator enumerator = unpackedValue.GetEnumerator();
            int current;
            try {
                for (
                ; enumerator.MoveNext(); 
                ) {
                    current = enumerator.Current;
                    existent.Add(current);
                }
            }
            finally {
                enumerator.Dispose();
            }
        }
        
        private void UnpackValueOfCollectionReadOnlyProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer1, itemsCount, indexOfItem, typeof(System.Collections.Generic.List<int>), "CollectionReadOnlyProperty", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfCollectionReadOnlyPropertyDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicCollectionProperty(MsgPack.Serialization.DataMamberClass unpackingContext, System.Collections.Generic.List<int> unpackedValue) {
            System.Collections.Generic.List<int> existent = default(System.Collections.Generic.List<int>);
            existent = ((System.Collections.Generic.List<int>)(this._methodBaseDataMamberClass_get_NonPublicCollectionProperty1.Invoke(unpackingContext, null)));
            if ((existent == null)) {
                this._methodBaseDataMamberClass_set_NonPublicCollectionProperty8.Invoke(unpackingContext, new object[] {
                            unpackedValue});
            }
            else {
                System.Collections.Generic.List<int>.Enumerator enumerator = unpackedValue.GetEnumerator();
                int current;
                try {
                    for (
                    ; enumerator.MoveNext(); 
                    ) {
                        current = enumerator.Current;
                        existent.Add(current);
                    }
                }
                finally {
                    enumerator.Dispose();
                }
            }
        }
        
        private void UnpackValueOfNonPublicCollectionProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer1, itemsCount, indexOfItem, typeof(System.Collections.Generic.List<int>), "NonPublicCollectionProperty", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfNonPublicCollectionPropertyDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicCollectionField(MsgPack.Serialization.DataMamberClass unpackingContext, System.Collections.Generic.List<int> unpackedValue) {
            System.Collections.Generic.List<int> existent = default(System.Collections.Generic.List<int>);
            existent = ((System.Collections.Generic.List<int>)(this._fieldDataMamberClass_NonPublicCollectionField2.GetValue(unpackingContext)));
            if ((existent == null)) {
                this._fieldDataMamberClass_NonPublicCollectionField2.SetValue(unpackingContext, unpackedValue);
            }
            else {
                System.Collections.Generic.List<int>.Enumerator enumerator = unpackedValue.GetEnumerator();
                int current;
                try {
                    for (
                    ; enumerator.MoveNext(); 
                    ) {
                        current = enumerator.Current;
                        existent.Add(current);
                    }
                }
                finally {
                    enumerator.Dispose();
                }
            }
        }
        
        private void UnpackValueOfNonPublicCollectionField(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer1, itemsCount, indexOfItem, typeof(System.Collections.Generic.List<int>), "NonPublicCollectionField", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfNonPublicCollectionFieldDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicCollectionReadOnlyProperty(MsgPack.Serialization.DataMamberClass unpackingContext, System.Collections.Generic.List<int> unpackedValue) {
            System.Collections.Generic.List<int> existent = default(System.Collections.Generic.List<int>);
            existent = ((System.Collections.Generic.List<int>)(this._methodBaseDataMamberClass_get_NonPublicCollectionReadOnlyProperty2.Invoke(unpackingContext, null)));
            System.Collections.Generic.List<int>.Enumerator enumerator = unpackedValue.GetEnumerator();
            int current;
            try {
                for (
                ; enumerator.MoveNext(); 
                ) {
                    current = enumerator.Current;
                    existent.Add(current);
                }
            }
            finally {
                enumerator.Dispose();
            }
        }
        
        private void UnpackValueOfNonPublicCollectionReadOnlyProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer1, itemsCount, indexOfItem, typeof(System.Collections.Generic.List<int>), "NonPublicCollectionReadOnlyProperty", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfNonPublicCollectionReadOnlyPropertyDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicCollectionReadOnlyField(MsgPack.Serialization.DataMamberClass unpackingContext, System.Collections.Generic.List<int> unpackedValue) {
            System.Collections.Generic.List<int> existent = default(System.Collections.Generic.List<int>);
            existent = ((System.Collections.Generic.List<int>)(this._fieldDataMamberClass_NonPublicCollectionReadOnlyField3.GetValue(unpackingContext)));
            System.Collections.Generic.List<int>.Enumerator enumerator = unpackedValue.GetEnumerator();
            int current;
            try {
                for (
                ; enumerator.MoveNext(); 
                ) {
                    current = enumerator.Current;
                    existent.Add(current);
                }
            }
            finally {
                enumerator.Dispose();
            }
        }
        
        private void UnpackValueOfNonPublicCollectionReadOnlyField(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer1, itemsCount, indexOfItem, typeof(System.Collections.Generic.List<int>), "NonPublicCollectionReadOnlyField", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfNonPublicCollectionReadOnlyFieldDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicDictionaryProperty(MsgPack.Serialization.DataMamberClass unpackingContext, System.Collections.Generic.Dictionary<string, int> unpackedValue) {
            System.Collections.Generic.Dictionary<string, int> existent = default(System.Collections.Generic.Dictionary<string, int>);
            existent = ((System.Collections.Generic.Dictionary<string, int>)(this._methodBaseDataMamberClass_get_NonPublicDictionaryProperty3.Invoke(unpackingContext, null)));
            if ((existent == null)) {
                this._methodBaseDataMamberClass_set_NonPublicDictionaryProperty9.Invoke(unpackingContext, new object[] {
                            unpackedValue});
            }
            else {
                System.Collections.Generic.Dictionary<string, int>.Enumerator enumerator = unpackedValue.GetEnumerator();
                System.Collections.Generic.KeyValuePair<string, int> current;
                try {
                    for (
                    ; enumerator.MoveNext(); 
                    ) {
                        current = enumerator.Current;
                        existent.Add(current.Key, current.Value);
                    }
                }
                finally {
                    enumerator.Dispose();
                }
            }
        }
        
        private void UnpackValueOfNonPublicDictionaryProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer2, itemsCount, indexOfItem, typeof(System.Collections.Generic.Dictionary<string, int>), "NonPublicDictionaryProperty", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfNonPublicDictionaryPropertyDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicDictionaryField(MsgPack.Serialization.DataMamberClass unpackingContext, System.Collections.Generic.Dictionary<string, int> unpackedValue) {
            System.Collections.Generic.Dictionary<string, int> existent = default(System.Collections.Generic.Dictionary<string, int>);
            existent = ((System.Collections.Generic.Dictionary<string, int>)(this._fieldDataMamberClass_NonPublicDictionaryField4.GetValue(unpackingContext)));
            if ((existent == null)) {
                this._fieldDataMamberClass_NonPublicDictionaryField4.SetValue(unpackingContext, unpackedValue);
            }
            else {
                System.Collections.Generic.Dictionary<string, int>.Enumerator enumerator = unpackedValue.GetEnumerator();
                System.Collections.Generic.KeyValuePair<string, int> current;
                try {
                    for (
                    ; enumerator.MoveNext(); 
                    ) {
                        current = enumerator.Current;
                        existent.Add(current.Key, current.Value);
                    }
                }
                finally {
                    enumerator.Dispose();
                }
            }
        }
        
        private void UnpackValueOfNonPublicDictionaryField(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer2, itemsCount, indexOfItem, typeof(System.Collections.Generic.Dictionary<string, int>), "NonPublicDictionaryField", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfNonPublicDictionaryFieldDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicDictionaryReadOnlyProperty(MsgPack.Serialization.DataMamberClass unpackingContext, System.Collections.Generic.Dictionary<string, int> unpackedValue) {
            System.Collections.Generic.Dictionary<string, int> existent = default(System.Collections.Generic.Dictionary<string, int>);
            existent = ((System.Collections.Generic.Dictionary<string, int>)(this._methodBaseDataMamberClass_get_NonPublicDictionaryReadOnlyProperty4.Invoke(unpackingContext, null)));
            System.Collections.Generic.Dictionary<string, int>.Enumerator enumerator = unpackedValue.GetEnumerator();
            System.Collections.Generic.KeyValuePair<string, int> current;
            try {
                for (
                ; enumerator.MoveNext(); 
                ) {
                    current = enumerator.Current;
                    existent.Add(current.Key, current.Value);
                }
            }
            finally {
                enumerator.Dispose();
            }
        }
        
        private void UnpackValueOfNonPublicDictionaryReadOnlyProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer2, itemsCount, indexOfItem, typeof(System.Collections.Generic.Dictionary<string, int>), "NonPublicDictionaryReadOnlyProperty", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfNonPublicDictionaryReadOnlyPropertyDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicDictionaryReadOnlyField(MsgPack.Serialization.DataMamberClass unpackingContext, System.Collections.Generic.Dictionary<string, int> unpackedValue) {
            System.Collections.Generic.Dictionary<string, int> existent = default(System.Collections.Generic.Dictionary<string, int>);
            existent = ((System.Collections.Generic.Dictionary<string, int>)(this._fieldDataMamberClass_NonPublicDictionaryReadOnlyField5.GetValue(unpackingContext)));
            System.Collections.Generic.Dictionary<string, int>.Enumerator enumerator = unpackedValue.GetEnumerator();
            System.Collections.Generic.KeyValuePair<string, int> current;
            try {
                for (
                ; enumerator.MoveNext(); 
                ) {
                    current = enumerator.Current;
                    existent.Add(current.Key, current.Value);
                }
            }
            finally {
                enumerator.Dispose();
            }
        }
        
        private void UnpackValueOfNonPublicDictionaryReadOnlyField(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer2, itemsCount, indexOfItem, typeof(System.Collections.Generic.Dictionary<string, int>), "NonPublicDictionaryReadOnlyField", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfNonPublicDictionaryReadOnlyFieldDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicHashtableProperty(MsgPack.Serialization.DataMamberClass unpackingContext, System.Collections.Hashtable unpackedValue) {
            System.Collections.Hashtable existent = default(System.Collections.Hashtable);
            existent = ((System.Collections.Hashtable)(this._methodBaseDataMamberClass_get_NonPublicHashtableProperty5.Invoke(unpackingContext, null)));
            if ((existent == null)) {
                this._methodBaseDataMamberClass_set_NonPublicHashtableProperty10.Invoke(unpackingContext, new object[] {
                            unpackedValue});
            }
            else {
                System.Collections.IDictionaryEnumerator enumerator = unpackedValue.GetEnumerator();
                System.Collections.DictionaryEntry current;
                for (
                ; enumerator.MoveNext(); 
                ) {
                    current = enumerator.Entry;
                    existent.Add(current.Key, current.Value);
                }
            }
        }
        
        private void UnpackValueOfNonPublicHashtableProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer3, itemsCount, indexOfItem, typeof(System.Collections.Hashtable), "NonPublicHashtableProperty", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfNonPublicHashtablePropertyDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicHashtableField(MsgPack.Serialization.DataMamberClass unpackingContext, System.Collections.Hashtable unpackedValue) {
            System.Collections.Hashtable existent = default(System.Collections.Hashtable);
            existent = ((System.Collections.Hashtable)(this._fieldDataMamberClass_NonPublicHashtableField6.GetValue(unpackingContext)));
            if ((existent == null)) {
                this._fieldDataMamberClass_NonPublicHashtableField6.SetValue(unpackingContext, unpackedValue);
            }
            else {
                System.Collections.IDictionaryEnumerator enumerator = unpackedValue.GetEnumerator();
                System.Collections.DictionaryEntry current;
                for (
                ; enumerator.MoveNext(); 
                ) {
                    current = enumerator.Entry;
                    existent.Add(current.Key, current.Value);
                }
            }
        }
        
        private void UnpackValueOfNonPublicHashtableField(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer3, itemsCount, indexOfItem, typeof(System.Collections.Hashtable), "NonPublicHashtableField", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfNonPublicHashtableFieldDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicHashtableReadOnlyProperty(MsgPack.Serialization.DataMamberClass unpackingContext, System.Collections.Hashtable unpackedValue) {
            System.Collections.Hashtable existent = default(System.Collections.Hashtable);
            existent = ((System.Collections.Hashtable)(this._methodBaseDataMamberClass_get_NonPublicHashtableReadOnlyProperty6.Invoke(unpackingContext, null)));
            System.Collections.IDictionaryEnumerator enumerator = unpackedValue.GetEnumerator();
            System.Collections.DictionaryEntry current;
            for (
            ; enumerator.MoveNext(); 
            ) {
                current = enumerator.Entry;
                existent.Add(current.Key, current.Value);
            }
        }
        
        private void UnpackValueOfNonPublicHashtableReadOnlyProperty(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer3, itemsCount, indexOfItem, typeof(System.Collections.Hashtable), "NonPublicHashtableReadOnlyProperty", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfNonPublicHashtableReadOnlyPropertyDelegate);
        }
        
        private void SetUnpackedValueOfNonPublicHashtableReadOnlyField(MsgPack.Serialization.DataMamberClass unpackingContext, System.Collections.Hashtable unpackedValue) {
            System.Collections.Hashtable existent = default(System.Collections.Hashtable);
            existent = ((System.Collections.Hashtable)(this._fieldDataMamberClass_NonPublicHashtableReadOnlyField7.GetValue(unpackingContext)));
            System.Collections.IDictionaryEnumerator enumerator = unpackedValue.GetEnumerator();
            System.Collections.DictionaryEntry current;
            for (
            ; enumerator.MoveNext(); 
            ) {
                current = enumerator.Entry;
                existent.Add(current.Key, current.Value);
            }
        }
        
        private void UnpackValueOfNonPublicHashtableReadOnlyField(MsgPack.Unpacker unpacker, MsgPack.Serialization.DataMamberClass unpackingContext, int indexOfItem, int itemsCount) {
            MsgPack.Serialization.UnpackHelpers.UnpackReferenceTypeValue(unpacker, unpackingContext, this._serializer3, itemsCount, indexOfItem, typeof(System.Collections.Hashtable), "NonPublicHashtableReadOnlyField", MsgPack.Serialization.NilImplication.MemberDefault, null, this.this_SetUnpackedValueOfNonPublicHashtableReadOnlyFieldDelegate);
        }
        
        protected internal override MsgPack.Serialization.DataMamberClass UnpackFromCore(MsgPack.Unpacker unpacker) {
            MsgPack.Serialization.DataMamberClass result = default(MsgPack.Serialization.DataMamberClass);
            result = new MsgPack.Serialization.DataMamberClass();
            if (unpacker.IsArrayHeader) {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromArray(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<MsgPack.Serialization.DataMamberClass>(), this._memberNames, this._unpackOperationList);
            }
            else {
                return MsgPack.Serialization.UnpackHelpers.UnpackFromMap(unpacker, result, MsgPack.Serialization.UnpackHelpers.GetIdentity<MsgPack.Serialization.DataMamberClass>(), this._unpackOperationTable);
            }
        }
    }
}
