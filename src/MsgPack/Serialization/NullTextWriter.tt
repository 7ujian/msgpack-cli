<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.CodeDom" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="Microsoft.CSharp" #>
<#@ output extension=".cs" #>
// <auto-generated>
//     This code was generated by a NullTextWriter.tt.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System.IO;
using System.Text;

namespace MsgPack.Serialization
{
	internal sealed class NullTextWriter : TextWriter
	{
		internal static NullTextWriter Instance = new NullTextWriter();

		public override Encoding Encoding
		{
			get { return Encoding.UTF8; }
		}

<#
	using (var provider = new CSharpCodeProvider())
	{
		IEnumerable<MethodInfo> methods =
			typeof(System.IO.TextWriter).GetMethods()
				.Where(m => !m.IsFinal && m.IsVirtual) // A method we can override
				.Where(m => m.ReturnType == typeof(void)) // We're generating empty methods only
				.Where(m => !m.IsSpecialName); // Exclude properties

		foreach (MethodInfo method in methods)
		{
			Write("\t\tpublic override void {0}(", method.Name);

			foreach (ParameterInfo parameter in method.GetParameters())
			{
				if (parameter.Position != 0)
				{
					Write(", ");
				}

				var typeRef = new CodeTypeReference(parameter.ParameterType);
				Write("{0} {1}", provider.GetTypeOutput(typeRef), parameter.Name);
			}

			WriteLine(") { }");
		}
	}
#>
	}
}
