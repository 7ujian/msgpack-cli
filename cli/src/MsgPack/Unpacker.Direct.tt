<#
//
// MessagePack for CLI
//
// Copyright (C) 2010 FUJIWARA, Yusuke
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        http://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
//
#>
<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly Name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Runtime.InteropServices" #>
<#

// This file defines bufferred direct conversion APIs of Unpacker.
var __typeName = "Unpacker";
var __types = new []
{
	typeof( byte ),
	typeof( sbyte ),
	typeof( short ), 
	typeof( ushort ),
	typeof( int ), 
	typeof( uint ), 
	typeof( long ), 
	typeof( ulong ),
	typeof( float ),
	typeof( double )
};

Func<Type, bool> __isClsCompliant =
	type => type != typeof( sbyte ) && type != typeof( ushort ) && type != typeof( uint ) && type != typeof( ulong );

#>
#region -- License Terms --
//
// MessagePack for CLI
//
// Copyright (C) 2010 FUJIWARA, Yusuke
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        http://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
//
#endregion -- License Terms --

using System;
using System.Diagnostics.Contracts;

namespace MsgPack
{
	// This file generated from <#= __typeName #>.Direct.tt T4Template.
	// Do not modify this file. Edit <#= __typeName #>.Direct.tt instead.

	partial class <#= __typeName #>
	{
<#
foreach( var __type in __types )
{
#>

		/// <summary>
		///		Unpack <see cref="<#= __type.Name #>"/> from current buffer.
		/// </summary>
		/// <returns><see cref="<#= __type.Name #>"/> value.</returns>
		/// <exception cref="ObjectDisposedException">This instance has been disposed.</exception>
		/// <exception cref="UnpackException">Failed to unpack due to malformed or collapsed source.</exception>
		/// <exception cref="MessageTypeException">Current value is not <see cref="<#= __type.Name #>"/>.</exception>
		/// <remarks>
		///		This method is direct API, so <see cref="Data"/> will be invalidated.
		/// </remarks>
<#
	if( !__isClsCompliant( __type ) )
	{
#>
		[CLSCompliant( false )]
<#
	}
#>
		public <#= __type.Name #> Unpack<#= __type.Name #>()
		{
			this.VerifyNotDisposed();
			this.VerifyMode( UnpackerMode.Direct );
			Contract.EndContractBlock();

			return Unpacking.Unpack<#= __type.Name #>( this._currentSource.Stream );
		}
<#
}
#>
	}
}